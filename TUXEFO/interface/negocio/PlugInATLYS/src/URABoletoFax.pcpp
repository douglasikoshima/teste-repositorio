#include "PlugInATLYS.h"

#include <tuxfw.h>
#include "../../PlugInBE/include/Util.h"

#include <sqlca.h>

#include <cstring>

using namespace std;


void PlugInATLYS::montaXMLEndereco(char* idContaSisOrg)
{

	EXEC SQL BEGIN DECLARE SECTION;
		char* idOraContSisOrg;
		char sNmBairro[256];
		char sNrCEP[256];
		char sNrEnd[2056];
	EXEC SQL END DECLARE SECTION;

	idOraContSisOrg = idContaSisOrg;

	memset(sNmBairro, '\0', sizeof(sNmBairro));
	memset(sNrCEP, '\0', sizeof(sNrCEP));
	memset(sNrEnd, '\0', sizeof(sNrEnd));

	EXEC SQL WHENEVER SQLERROR GOTO sql;

	EXEC SQL 
	select 
	 ender.nmBairro,
	 ender.nrCEP,
	 ender.nmTipoLogradouro || ' ' || ender.nmTituloLogradouro || ' ' || ender.nmLogradouro || ' ' || ender.dsenderecocomplemento || ', ' || ender.nrEndereco || ' - ' || ender.nmMunicipio || ' - ' || uf.sguf
	into
		:sNmBairro,
		:sNrCEP,
		:sNrEnd
	from
	 customer.pessoaendereco  ender,
	 customer.contaendereco  contEnd,
	 customer.conta  cont,
	 apoio.uf  uf
	where
	 cont.idconta = contEnd.idconta AND
	 contEnd.idPessoaEndereco = ender.idpessoaendereco AND
         ender.iduf = uf.iduf AND
	 cont.idcontasistemaorigem = :idOraContSisOrg;

	xml_g->addItem(TAG_XML_OUT_DS_BAIRRO, Util::rtrim(sNmBairro));
	xml_g->addItem(TAG_XML_OUT_DS_NUMERO_CEP_CLIENTE, Util::rtrim(sNrCEP));
	xml_g->addItem(TAG_XML_OUT_DS_ENDERECO_CLIENTE, Util::rtrim(sNrEnd));

	return;

sql:
	throw new TuxBasicOraException(sqlca.sqlcode);
}
