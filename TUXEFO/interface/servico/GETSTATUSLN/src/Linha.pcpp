// Linha.cpp: implementation of the Linha class.
//
//////////////////////////////////////////////////////////////////////

#include "Linha.h"
#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>
#include<sqlda.h>
//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

Linha::Linha()
{

}

Linha::~Linha()
{

}

int Linha::getStatusLinha(char*cdNumTelefone,char*cdDDD,char*estadoLinha)
{
	tuxfw_getlogger()->debug("Linha::getStatusLinha");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
		struct param{
			VARCHAR sgClassificacao[256];
		}m_param;
		struct iparam{
			short sgClassificacao;
		}m_iparam;
		char*cnrLinha = cdNumTelefone;
		char*ccdAreaRegistro = cdDDD;
	EXEC SQL END DECLARE SECTION;
	sqlca.sqlcode = 0;
	memset(&m_param,0,sizeof(param));
	memset(&m_iparam,0,sizeof(iparam));
	EXEC SQL WHENEVER SQLERROR GOTO Error;
	EXEC SQL WHENEVER NOT FOUND CONTINUE;
	EXEC SQL
		SELECT
			ESTADOLINHA.SGCLASSIFICACAO
		INTO :m_param:m_iparam
		FROM
			LINHA.LINHABASE  LINHABASE,
			APOIO.ESTADOLINHA  ESTADOLINHA,
			APOIO.AREAREGISTRO  AREAREGISTRO
		WHERE
			 LINHABASE.IDAREAREGISTRO = AREAREGISTRO.IDAREAREGISTRO AND
			 LINHABASE.IDESTADOLINHA = ESTADOLINHA.IDESTADOLINHA AND
			 AREAREGISTRO.CDAREAREGISTRO = :ccdAreaRegistro AND
			 LINHABASE.NRLINHA = :cnrLinha AND ROWNUM = 1;
	if(sqlca.sqlcode == 1403)
		return 0;

	strcpy(estadoLinha,(char*)m_param.sgClassificacao.arr);


	return 1;
Error:
	tuxfw_getlogger()->debug("ERRO: sqlca.sqlcode = %d",sqlca.sqlcode);
	throw TuxBasicOraException(sqlca.sqlcode);
}
