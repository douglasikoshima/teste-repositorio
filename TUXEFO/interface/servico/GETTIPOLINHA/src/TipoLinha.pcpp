// TipoLinha.cpp: implementation of the TipoLinha class.
//
//////////////////////////////////////////////////////////////////////

#include "TipoLinha.h"
#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>
#include<sqlda.h>
#include<tuxfw.h>
//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

TipoLinha::TipoLinha()
{

}

TipoLinha::~TipoLinha()
{

}


int TipoLinha::getTipoLinha(char*cdDDD,char*cdNumTelefone,char*tipoLinha,char*idLinhaTelefonica)
{
	tuxfw_getlogger()->debug("getTipoLinha::getTipoLinha");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
		struct param{
			VARCHAR tipoLinha[256];
			VARCHAR idLinhaTelefonica[256];
		}m_param;
		struct iparam{
			short tipoLinha;
			short idLinhaTelefonica;
		}m_iparam;
		char*cnrLinha = cdNumTelefone;
		char*ccdAreaRegistro = cdDDD;
	EXEC SQL END DECLARE SECTION;
	sqlca.sqlcode = 0;
	memset(&m_param,0,sizeof(param));
	memset(&m_iparam,0,sizeof(iparam));
	EXEC SQL WHENEVER SQLERROR GOTO Error;
	EXEC SQL WHENEVER NOT FOUND CONTINUE;
	EXEC SQL
		SELECT TIPOLINHA.SGTIPOLINHA,LINHATELEFONICA.IDLINHATELEFONICA
		INTO :m_param:m_iparam
		FROM
		LINHA.LINHABASE LINHABASE,
		LINHA.LINHATELEFONICA LINHATELEFONICA,
		APOIO.AREAREGISTRO AREAREGISTRO,
		APOIO.TIPOLINHA TIPOLINHA
		WHERE
		LINHABASE.IDLINHABASE = LINHATELEFONICA.IDLINHABASE AND
		AREAREGISTRO.IDAREAREGISTRO = LINHABASE.IDAREAREGISTRO AND
		LINHABASE.NRLINHA = TO_NUMBER(:cnrLinha) AND
		AREAREGISTRO.CDAREAREGISTRO = TO_NUMBER(:ccdAreaRegistro) AND
		TIPOLINHA.IDTIPOLINHA = LINHATELEFONICA.IDTIPOLINHA AND
		ROWNUM = 1;

	tuxfw_getlogger()->debug("sqlca.sqlcode = %d",sqlca.sqlcode);

	if(sqlca.sqlcode == 1403)
		return 0;

	strcpy(tipoLinha,(char*)m_param.tipoLinha.arr);
	strcpy(idLinhaTelefonica,(char*)m_param.idLinhaTelefonica.arr);
	return 1;
Error:
	tuxfw_getlogger()->debug("ERRO: sqlca.sqlcode = %d",sqlca.sqlcode);
	throw TuxBasicOraException(sqlca.sqlcode);

}