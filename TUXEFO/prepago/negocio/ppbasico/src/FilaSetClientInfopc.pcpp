///////////////////////////////////////////////////////////////////////////////
/**
 * @modulo  Prepago
 * @usecase FilaSetClientInfo
 * @author  Renato Striitzel Russo
 * @author  Carlos Eduardo Barbosa Braga
 * @version $Revision: 1.1.2.5 $
 * @CVS     $Author: a5110702 $ - $Date: 2009/09/29 20:59:45 $
 **/
///////////////////////////////////////////////////////////////////////////////

#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>
#include<sqlda.h>

#include <memory.h>

#include "tuxfw.h"
#include "Global.h"
#include "FilaSetClientInfopc.h"
#include "PrePagoException.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "Global.h"
EXEC SQL END DECLARE SECTION;

/****************************************************************************************/
bool CFilaSetClientInfopc::proCExisteFilaSetClientInfo(TFilaSetClientInfo *ptFilaSetClientInfo)
{
    ULOG_START("CFilaSetClientInfopc::proCExisteFilaSetClientInfo");

    EXEC SQL BEGIN DECLARE SECTION;
        char *opszIdLinhaTelefonica = ptFilaSetClientInfo->szIdLinhaTelefonica;
        int iCount;
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    EXEC SQL WHENEVER SQLERROR goto erro;

    EXEC SQL
        SELECT
            COUNT(1)
        INTO
            :iCount
        FROM
            infra.filasetclientinfo
        WHERE
            idlinhatelefonica = :opszIdLinhaTelefonica;


    ULOG("iCount(%d)", iCount);
    ULOG_END("CFilaSetClientInfopc::proCExisteFilaSetClientInfo");

    if(iCount > 0)
        return true;
     else
        return false;

    erro:
        ULOGE("Finalizando proCExisteFilaSetClientInfo <ERROR>");
        throw TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

/****************************************************************************************/
void CFilaSetClientInfopc::proCIncluiFilaSetClientInfo(TFilaSetClientInfo *ptFilaSetClientInfo)
{
    ULOG_START("CFilaSetClientInfopc::proCIncluiFilaSetClientInfo");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdFilaSetClientInfo[LEN_IDFILASETCLIENTINFO + LEN_EOS];
        char *opszIdLinhaTelefonica = ptFilaSetClientInfo->szIdLinhaTelefonica;
        char *opszXml1 = ptFilaSetClientInfo->szXml;
        char *opszInterceptado = ptFilaSetClientInfo->szInterceptado;
        char *opszCdAreaRegistro = ptFilaSetClientInfo->szCdAreaRegistro;
        char *opszNrLinha = ptFilaSetClientInfo->szNrLinha;

    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    EXEC SQL WHENEVER SQLERROR goto erro;

    /* obtem sequence */
    EXEC SQL SELECT infra.filasetclientinfosq.nextval
               INTO :oszIdFilaSetClientInfo
               FROM DUAL;

    EXEC SQL INSERT INTO infra.filasetclientinfo
        (
            idfilasetclientinfo,
            idlinhatelefonica,
            dttimestamp,
            xml1,
            interceptado,
            cdarearegistro,
            nrlinha
        )
        VALUES
        (
            :oszIdFilaSetClientInfo,
            :opszIdLinhaTelefonica,
            SYSDATE,
            :opszXml1,
            :opszInterceptado,
            :opszCdAreaRegistro,
            :opszNrLinha
        );

    STRCPY_FROM_ORA(ptFilaSetClientInfo->szIdFilaSetClientInfo, oszIdFilaSetClientInfo);

    ULOGI("Finalizando proCIncluiFilaSetClientInfo <OK>");
    ULOG_END("CFilaSetClientInfopc::proCIncluiFilaSetClientInfo");
    return;

    erro:
        ULOGE("Finalizando proCIncluiFilaSetClientInfo <ERROR>");
        throw TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

/****************************************************************************************/
void CFilaSetClientInfopc::proCAtualizaXmlFilaSetClientInfo(TFilaSetClientInfo *ptFilaSetClientInfo)
{
    ULOG_START("CFilaSetClientInfopc::proCAtualizaXmlFilaSetClientInfo");

    EXEC SQL BEGIN DECLARE SECTION;
        char *opszIdLinhaTelefonica = ptFilaSetClientInfo->szIdLinhaTelefonica;
        char *opszXml1 = ptFilaSetClientInfo->szXml;
        char *opszInterceptado = ptFilaSetClientInfo->szInterceptado;
        char *opszCdAreaRegistro = ptFilaSetClientInfo->szCdAreaRegistro;
        char *opszNrLinha = ptFilaSetClientInfo->szNrLinha;
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    EXEC SQL WHENEVER SQLERROR goto erro;

    EXEC SQL UPDATE infra.filasetclientinfo
        SET
            dttimestamp = SYSDATE,
            cderro = NULL,
            dserro = NULL,
            dterro = NULL,
            inerro = 0,
            qtretry = 0,
            xml1 = :opszXml1,
            interceptado = :opszInterceptado,
            cdarearegistro = :opszCdAreaRegistro,
            nrlinha = :opszNrLinha
        WHERE
            idlinhatelefonica = :opszIdLinhaTelefonica;


    ULOGI("Finalizando proCAtualizaXmlFilaSetClientInfo <OK>");
    ULOG_END("CFilaSetClientInfopc::proCAtualizaXmlFilaSetClientInfo");
    return;

    erro:
        ULOGE("Finalizando proCAtualizaXmlFilaSetClientInfo <ERROR>");
        throw TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}



void CFilaSetClientInfopc::proCIncluiFilaSetClientInfo_2( TFilaSetClientInfo * ptFilaSetClientInfo )
{
    ULOG_START("CFilaSetClientInfopc::proCIncluiFilaSetClientInfo_2");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdFilaSetClientInfo[LEN_IDFILASETCLIENTINFO + LEN_EOS];
        char *opszIdLinhaTelefonica = ptFilaSetClientInfo->szIdLinhaTelefonica;
        char *opszXml1 = ptFilaSetClientInfo->szXml;
        char *opszInterceptado = ptFilaSetClientInfo->szInterceptado;
        char *opszCdAreaRegistro = ptFilaSetClientInfo->szCdAreaRegistro;
        char *opszNrLinha = ptFilaSetClientInfo->szNrLinha;

    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    EXEC SQL WHENEVER SQLERROR goto erro;

    /* obtem sequence */
    EXEC SQL SELECT infra.filasetclientinfosq.nextval
               INTO :oszIdFilaSetClientInfo
               FROM DUAL;

    EXEC SQL INSERT INTO infra.filasetclientinfo_2
        (
            idfilasetclientinfo,
            idlinhatelefonica,
            dttimestamp,
            xml1,
            interceptado,
            cdarearegistro,
            nrlinha
        )
        VALUES
        (
            :oszIdFilaSetClientInfo,
            :opszIdLinhaTelefonica,
            SYSDATE,
            :opszXml1,
            :opszInterceptado,
            :opszCdAreaRegistro,
            :opszNrLinha
        );

    STRCPY_FROM_ORA(ptFilaSetClientInfo->szIdFilaSetClientInfo, oszIdFilaSetClientInfo);

    ULOGI("Finalizando proCIncluiFilaSetClientInfo_2 <OK>");
    ULOG_END("CFilaSetClientInfopc::proCIncluiFilaSetClientInfo_2");
    return;

    erro:
        ULOGE("Finalizando proCIncluiFilaSetClientInfo_2 <ERROR>");
        throw TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}



void CFilaSetClientInfopc::proCAtualizaXmlFilaSetClientInfo_2(TFilaSetClientInfo *ptFilaSetClientInfo)
{
    ULOG_START("CFilaSetClientInfopc::proCAtualizaXmlFilaSetClientInfo_2");

    EXEC SQL BEGIN DECLARE SECTION;
        char *opszIdLinhaTelefonica = ptFilaSetClientInfo->szIdLinhaTelefonica;
        char *opszXml1 = ptFilaSetClientInfo->szXml;
        char *opszInterceptado = ptFilaSetClientInfo->szInterceptado;
        char *opszCdAreaRegistro = ptFilaSetClientInfo->szCdAreaRegistro;
        char *opszNrLinha = ptFilaSetClientInfo->szNrLinha;
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    EXEC SQL WHENEVER SQLERROR goto erro;

    EXEC SQL UPDATE infra.filasetclientinfo_2
        SET
            dttimestamp = SYSDATE,
            cderro = NULL,
            dserro = NULL,
            dterro = NULL,
            inerro = 0,
            qtretry = 0,
            xml1 = :opszXml1,
            interceptado = :opszInterceptado,
            cdarearegistro = :opszCdAreaRegistro,
            nrlinha = :opszNrLinha
        WHERE
            idlinhatelefonica = :opszIdLinhaTelefonica;


    ULOGI("Finalizando proCAtualizaXmlFilaSetClientInfo_2 <OK>");
    ULOG_END("CFilaSetClientInfopc::proCAtualizaXmlFilaSetClientInfo_2");
    return;

    erro:
        ULOGE("Finalizando proCAtualizaXmlFilaSetClientInfo_2 <ERROR>");
        throw TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}



bool CFilaSetClientInfopc::proCExisteFilaSetClientInfo_2(TFilaSetClientInfo *ptFilaSetClientInfo)
{
    ULOG_START("CFilaSetClientInfopc::proCExisteFilaSetClientInfo_2");

    EXEC SQL BEGIN DECLARE SECTION;
        char *opszIdLinhaTelefonica = ptFilaSetClientInfo->szIdLinhaTelefonica;
        int iCount;
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    EXEC SQL WHENEVER SQLERROR goto erro;

    EXEC SQL
        SELECT
            COUNT(1)
        INTO
            :iCount
        FROM
            infra.filasetclientinfo_2
        WHERE
            idlinhatelefonica = :opszIdLinhaTelefonica;


    ULOG("iCount(%d)", iCount);
    ULOG_END("CFilaSetClientInfopc::proCExisteFilaSetClientInfo_2");

    if(iCount > 0)
        return true;
     else
        return false;

    erro:
        ULOGE("Finalizando proCExisteFilaSetClientInfo_2 <ERROR>");
        throw TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
