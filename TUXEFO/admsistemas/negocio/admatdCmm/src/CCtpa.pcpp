/**
 * @modulo  ADM
 * @usecase ADM
 * @author  
 * @version $Revision: 1.1 $
 * @CVS     $Author: a5110702 $ - $Date: 2009/07/31 15:33:14 $
 **/

#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>
#include<sqlda.h>

#include "../include/CCtpa.h"

int CCTipoArvore::ListTipoArvore( char* cdsTipoArvore )
{
    ULOG_START("CCTipoArvore::ListTipoArvore()");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
        char* cAuxdsTipoArvore = cdsTipoArvore;
		VARCHAR stidTipoArvore[2+1];
		VARCHAR stdsTipoArvore[255+1];
		int iCont = 0;
	EXEC SQL END DECLARE SECTION;

	sqlca.sqlcode=0;

    // Se não informar o tipo de árvore desejado, retornará todos.
    if ( cAuxdsTipoArvore == 0 || *cAuxdsTipoArvore == 0 )
    {
        cAuxdsTipoArvore = "-1";
    }
	
	EXEC SQL WHENEVER SQLERROR GOTO GotoListTipoArvore;

	EXEC SQL DECLARE CursorListTipoArvore CURSOR FOR
		SELECT 
			IDTIPOARVORE,
            DSTIPOARVORE
		FROM
			APOIO.TIPOARVORE
		WHERE
            DSTIPOARVORE = :cAuxdsTipoArvore
        OR  :cAuxdsTipoArvore = '-1';

	if(sqlca.sqlcode)
	{
	    ULOG_END("CCTipoArvore::ListTipoArvore()");
		return 0;
	}

    EXEC SQL OPEN CursorListTipoArvore;

	EXEC SQL WHENEVER NOT FOUND DO BREAK;

	for(;;)
	{
		memset( &stidTipoArvore, 0, sizeof(stidTipoArvore) );
		memset( &stdsTipoArvore, 0, sizeof(stdsTipoArvore) );

        EXEC SQL
            FETCH
                CursorListTipoArvore 
            INTO 
                :stidTipoArvore,
                :stdsTipoArvore;

		Add((char*)stidTipoArvore.arr,
			(char*)stdsTipoArvore.arr);

		iCont++;
	}

	EXEC SQL CLOSE CursorListTipoArvore;

    ULOG_END("CCTipoArvore::ListTipoArvore()");

    return sqlca.sqlcode == 0 ? ( iCont <= 0 ? 0 : 1 ) : 0;

GotoListTipoArvore:
    ULOGE("CCTipoArvore::ListTipoArvore()");
    ULOGE( "ERRO ORACLE:sqlcode = [%d],sqlerrmc = [%.70s]",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
	throw TuxBasicOraException(sqlca.sqlcode);
}


void CCTipoArvore::GetXml( char* cNomeTag, XMLGen*xml )
{
	if( Quantidade() > 0 )
	{
		for( int x = 0; x < Quantidade(); x++ )
		{
			xml->createTag(cNomeTag);
			//xml->addProp( "xmlns", "admsistemas.fo.vivo.com.br/vo" );

			if( Registro(x) )
			{ 
				xml->addItem("idTipoArvore", Registro(x)->cidTipoArvore );
				xml->addItem("dsTipoArvore", Registro(x)->cdsTipoArvore );
			}
			xml->closeTag();
		}
	}
}

