/**
 * 
 * @modulo  ins_lista
 * @usecase insereListaCampanha
 * @author  Mario
 * @version $Revision: 1.1 $
 * @CVS     $Author: a5110702 $ - $Date: 2009/07/31 15:34:01 $
 **/

#include "../../negocio/cmputil/include/campanha.hpp"
#include "ins_lista.hpp"

int ins_lista(char* pnmLista, char* pnmArquivoLista, long* pidLista,
	char* idUsuario, char* pnmIdLista, char* pnmDescricao)
{
	//
	// trace de parametros
	//ulog_str(usuario);
	//ulog_str(pnmLista);

	int ret = -1;	   // sai indicando erro até prova em contrario

	try {
		//int idUsuarioTmp;

		// Prepara as variaveis para interface com Oracle

		EXEC SQL BEGIN DECLARE SECTION;
			long	idLista = 0;
			VARCHAR nmLista[255];
			VARCHAR nmArquivoLista[1000];
			VARCHAR idUsuarioAlteracao[21 + 1];
			int		iStatus=0;
			VARCHAR nmIdLista[255];
		EXEC SQL END DECLARE SECTION;

		EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

		// Convertendo o nome da lista em campo Oracle
		strToOra(nmLista, pnmLista);
		strToOra(nmArquivoLista, pnmArquivoLista);
		strToOra(nmIdLista, pnmIdLista);
		// Pegando id do usuario
		//idUsuarioTmp =  get_idUsuario(usuario);
		//ulog_int(idUsuarioTmp);
		//idUsuarioAlteracao = idUsuarioTmp ;
		strToOra(idUsuarioAlteracao, idUsuario);

/*
 * Caso a variavel pnmIdLista esteja diferente de nulo,
 * o sistema entendera que devera fazer um update pelo
 * ID passado na variavel.
 */
		if(pnmIdLista[0]==0)
		{
			/* Verifica se existe o item a adcionar */
			EXEC SQL
			SELECT idLista INTO :idLista
			FROM campanha.Lista
			WHERE 
			(UPPER(TRIM(nmlista)) = UPPER(TRIM(:nmLista))
			OR NMPATH = :nmArquivoLista)
			AND ROWNUM<=1;

			ULOG_INT(idLista);
			if(idLista == 0)
			{
				// Pega a proxima chave
				EXEC SQL
					SELECT campanha.listasq.NEXTVAL
					INTO :idLista
					FROM DUAL;

				if (sqlca.sqlcode)
					throw new TuxBasicOraException(sqlca.sqlcode);

				iStatus=STATUS_EMCARGA;

				/* Insert linha */
				EXEC SQL INSERT INTO campanha.lista (
					idLista,
					nmLista,  				
					dtCriacao,
					instatuscarga,
					QTTETNTATIVAS,
					idUsuarioalteracao,
					DTULTIMAALTERACAO,
					NMPATH
				)
				VALUES(	
					:idLista,
					:nmLista,
					sysdate,
					:iStatus,
					0,
					:idUsuarioAlteracao,
					sysdate,
					:nmArquivoLista
				);

				if (sqlca.sqlcode)
				{
					throw new TuxBasicSvcException("05E0001","Erro no Insert da Lista");
				}
				ULOG( "inserida lista %s por %s ", pnmLista, idUsuario);

				//
				// prepara parametros de retorno
				*pidLista = idLista;
				//*pidUsuario = idUsuarioTmp;
				ret = 1;
				strcpy(pnmDescricao,"OK");
			} 
			else 
			{
	//			throw new TuxBasicSvcException("05I0002","Jah existe lista cadastrada com este nome");
				//
				// prepara parametros de retorno, qdo existe o id eh definido
				// com 0.
				ret = 2;
				idLista=0;
				*pidLista = idLista;
				strcpy(pnmDescricao,"Ja existe lista cadastrada com este nome");
			}
		}
		else
		{
			iStatus=STATUS_DISPONIVEL;

			EXEC SQL
				UPDATE campanha.lista SET instatuscarga = :iStatus
				WHERE idlista = to_number(:nmIdLista);
			if (sqlca.sqlcode)
			{
				ret=3;
				idLista=0;
				strcpy(pnmDescricao,"Lista nao existe");
			}
			else
			{
				ret=1;
				idLista=atol(pnmIdLista);
				strcpy(pnmDescricao,"OK");
			}
			*pidLista = idLista;
		}
		ULOG(" ins_lista - retorno %d", ret);
	} 
	catch(...) 
	{
		throw ;
	}
	return ret;  
}
