//
// $Id: del_canalcampanha.pcpp,v 1.1 2009/07/31 15:34:41 a5110702 Exp $
//

#include "../../negocio/cmputil/include/campanha.hpp"

int iValidaDependencias(int idCanalCampanha,XMLGen*xml);
void ItemNaoApagado(XMLGen*xml);
void ItemApagado(XMLGen*xml);


int del_canalCampanha(char * usuario, DOMNode*dnode,XMLGen*xml)
{
	char parm[256];
	int iDependencias = 0;
	EXEC SQL BEGIN DECLARE SECTION;
		int		idCanalCampanha = 0;
		int		inAtivo = 0;
		int     idUsuarioAlteracao = 0;
	EXEC SQL END DECLARE SECTION;
	EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

    //  Obtendo dados do xml

	get_tag(parm, dnode, "idCanalCampanha", 0, 0);
	idCanalCampanha = atoi(parm);
	
	// Pegando id do usuario
	idUsuarioAlteracao = get_idUsuario(usuario);
	
	inAtivo = 0;

	/* ------- Valida dependencias ------- */
	iDependencias = iValidaDependencias(idCanalCampanha,xml);
	if (iDependencias == 1)
		return 1;


	/* Update linha */
	EXEC SQL UPDATE campanha.canalCampanha
	    SET inativo = :inAtivo,
			idUsuarioAlteracao = :idUsuarioAlteracao,
			dtUltimaAlteracao = sysdate
		WHERE idcanalCampanha = :idCanalCampanha;
  
	if (sqlca.sqlcode)
	{
		throw new TuxBasicSvcException("00E1000","UPDATE campanha.canalCampanha ");
	}  
  
	ItemApagado(xml);
  
	return 1;
}


void ItemNaoApagado(XMLGen*xml)
{
	xml->createTag("tns:retornoVO");
    xml->addProp("xmlns:tns","retornotux.fo.vivo.com.br/vo");    
    xml->addProp("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
	xml->addItem("descricao","Item não apagado");
	xml->addItem("valor","0");
    xml->closeTag();
}

void ItemApagado(XMLGen*xml)
{
	xml->createTag("tns:retornoVO");
    xml->addProp("xmlns:tns","retornotux.fo.vivo.com.br/vo");    
    xml->addProp("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
	xml->addItem("descricao","Item apagado");
	xml->addItem("valor","1");
    xml->closeTag();
}


int iValidaDependencias(int iIdCanalCampanha, XMLGen*xml)
{
	EXEC SQL BEGIN DECLARE SECTION;
		int     idCanalCampanha = 0;
		int		idAtendimentoCampanha = 0;
		int		idCampanhaQuestionario = 0;
		int		idListaCanalCampanha = 0;
		int		idSimulacaoCampanha = 0;
		
	EXEC SQL END DECLARE SECTION;

	//EXEC SQL WHENEVER NOT FOUND GOTO DependenciaVacia;
  
	try{
		idCanalCampanha = iIdCanalCampanha;

/*================================================================================*/	
/*======================= Valida Dependencias CanalCampanha ======================*/
/*================================================================================*/
	
		EXEC SQL DECLARE crsAtendimentoCampanha CURSOR FOR
                SELECT idAtendimentoCampanha
                FROM   campanha.AtendimentoCampanha
                WHERE  (idCanalCampanha = :idCanalCampanha );

		EXEC SQL OPEN crsAtendimentoCampanha;

		for(;;) 
		{
			EXEC SQL FETCH crsAtendimentoCampanha INTO :idAtendimentoCampanha;
			break;
		}
  
		EXEC SQL CLOSE crsAtendimentoCampanha;	

		if(idAtendimentoCampanha > 0)
		{
			ItemNaoApagado(xml);
			return 1;
		}

		/*++++++++++++++++++++++++++++++++++++++++++++++++++++*/
		EXEC SQL DECLARE crsCampanhaQuestionario CURSOR FOR
                SELECT idCampanhaQuestionario
                FROM   campanha.CampanhaQuestionario
                WHERE  (idCanalCampanha = :idCanalCampanha 
						AND Inativo = 1);

		EXEC SQL OPEN crsCampanhaQuestionario;

		for(;;) 
		{
			EXEC SQL FETCH crsCampanhaQuestionario INTO :idCampanhaQuestionario;
			break;
		}
  
		EXEC SQL CLOSE crsCampanhaQuestionario;	

		if(idCampanhaQuestionario > 0)
		{
			ItemNaoApagado(xml);
			return 1;
		}

		/*++++++++++++++++++++++++++++++++++++++++++++++++++++*/
		EXEC SQL DECLARE crsListaCanalCampanha CURSOR FOR
                SELECT idListaCanalCampanha
                FROM   campanha.ListaCanalCampanha
                WHERE  (idCanalCampanha= :idCanalCampanha 
						AND Inativo = 1);

		EXEC SQL OPEN crsListaCanalCampanha;

		for(;;) 
		{
			EXEC SQL FETCH crsListaCanalCampanha INTO :idListaCanalCampanha;
			break;
		}
  
		EXEC SQL CLOSE crsListaCanalCampanha;	

		if(idListaCanalCampanha > 0)
		{
			ItemNaoApagado(xml);
			return 1;
		}

		/*++++++++++++++++++++++++++++++++++++++++++++++++++++*/
		EXEC SQL DECLARE crsSimulacaoCampanha CURSOR FOR
                SELECT idSimulacaoCampanha
                FROM   campanha.SimulacaoCampanha
                WHERE  (idCanalCampanha= :idCanalCampanha);

		EXEC SQL OPEN crsSimulacaoCampanha;

		for(;;) 
		{
			EXEC SQL FETCH crsSimulacaoCampanha INTO :idSimulacaoCampanha;
			break;
		}
  
		EXEC SQL CLOSE crsSimulacaoCampanha;	

		if(idSimulacaoCampanha > 0)
		{
			ItemNaoApagado(xml);
			return 1;
		}

	return 0;

	DependenciaVacia:
		ULOG("Sin Dependencias");
		

  }catch(...){throw;}

  return 0;
}