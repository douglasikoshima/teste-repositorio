//
// $Id: get_resposta.pcpp,v 1.1 2009/07/31 15:33:37 a5110702 Exp $
//

#include "../../negocio/cmputil/include/campanha.hpp"

int get_resposta(char * usuario,DOMNode*dnode,XMLGen*xml)
{
  char parm[2000];  
  int  existReg;

  EXEC SQL BEGIN DECLARE SECTION;
  VARCHAR     idResposta[21+1];
  VARCHAR     idCanalCampanha[21+1];
  VARCHAR	  dsScriptResposta[4000];
  VARCHAR     dsPergunta[4000];
  VARCHAR     sqApresentacao[21+1];
  VARCHAR     idPergunta[21+1];
  VARCHAR     dsResposta[2000];
  int         inDisponibilidade=0;
  int		  inEncerramento = 0;
  VARCHAR     nmCanal[255];
  int		  inAtivo = 0;
  VARCHAR     idPessoaUsuarioAlteracao[21+1];
  VARCHAR     idProximaPergunta[21+1];
  VARCHAR	  sgTipoApresentacaoPergunta[255];
  VARCHAR	  idRespostaOld[21+1];
  EXEC SQL END DECLARE SECTION;

  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
  
try
  {
  //  Obtendo dados do xml
  get_tag(parm, dnode, "idResposta", 0, 0);
  strToOra(idResposta,parm);
  //idResposta = atoi(parm);

  get_tag(parm, dnode, "idCanalCampanha", 0, 0);
  strToOra(idCanalCampanha,parm);
 
  //idCanalCampanha = atoi(parm);

	strToOra(idRespostaOld,(char*)idResposta.arr);
  // Pegando id do usuario
  strToOra(idPessoaUsuarioAlteracao,usuario);
 

  // Pegando resposta
  ULOG("passou para pegar as variaveis");

  EXEC SQL 
	SELECT  TIPO.SGTIPOAPRESENTACAOPERGUNTA, 
			RESPOSTA.DSRESPOSTA, 
			RESPOSTA.IDPERGUNTA, 
			PERGUNTA.DSSCRIPTPERGUNTA,
			RESPOSTA.SQAPRESENTACAO, 
			RESPOSTA.INDISPONIBILIDADE, 
			RESPOSTA.DSSCRIPTRESPOSTA,
			RESPOSTA.INENCERRAMENTO
    INTO	:sgTipoApresentacaoPergunta,
			:dsResposta, 
			:idPergunta, 
			:dsPergunta,
			:sqApresentacao, 
			:inDisponibilidade, 
			:dsScriptResposta, 
			:inEncerramento
    FROM    QUESTIONARIO.RESPOSTA RESPOSTA,
			QUESTIONARIO.PERGUNTA PERGUNTA,
			APOIO.TIPOAPRESENTACAOPERGUNTA TIPO
    WHERE   RESPOSTA.IDPERGUNTA= PERGUNTA.IDPERGUNTA
	AND		TIPO.IDTIPOAPRESENTACAOPERGUNTA=PERGUNTA.IDTIPOAPRESENTACAOPERGUNTA
	AND 	RESPOSTA.IDRESPOSTA = :idResposta;
            
   ULOG("passou para pelo primeiro select");
    endOraStr(dsScriptResposta);  
    endOraStr(dsResposta);  
    endOraStr(dsPergunta);
 
    // ulog_int(idResposta);
    // ulog_var(dsResposta);
    // ulog_int(idPergunta);
    // ulog_var(dsPergunta);
    // ulog_int(sqApresentacao);
    // ulog_int(inDisponibilidade);
    // ulog_var(dsScriptResposta);
    // ulog_int(inEncerramento);
    
	strToOra(idProximaPergunta,"0");
    // Pegando dados da proxima pergunta
    EXEC SQL 
      select idPergunta
      into   :idProximaPergunta
      from   questionario.respostaProximaPergunta
      where  inAtivo =1 
      and    idResposta = :idResposta;

ULOG("passou para pelo segundo select");

//if (idProximaPergunta.len<1) {strToOra(idProximaPergunta,"0");}

    // ulog_int(idProximaPergunta);
ULOG("passou para pelo verificação e cópia de idProximaPergunta=0");
    // Pegando dados do canal
    existReg = 1;

    EXEC SQL
       SELECT c.nmCanal
       INTO   :nmCanal
	   FROM campanha.canalCampanha	 cc,
	   		Campanha.CanalUFOperadora cuo, 
	   		apoio.canal   				 c
      WHERE  cc.idCanalCampanha		=	:idCanalCampanha
	  AND	 cc.IDCANALUFOPERADORA	=	cuo.IDCANALUFOPERADORA		 
	  AND 	 cuo.IDCANAL			=	c.IDCANAL;
       
			if (nmCanal.len<1)	{ strToOra(nmCanal,"null");} // Isto nao pode acontecer !
	ULOG("passou para pelo terceiro select");
   
	endOraStr(idResposta);  
	endOraStr(dsPergunta);  
	endOraStr(idPergunta);  
	endOraStr(dsResposta);  
	endOraStr(dsScriptResposta);  
	endOraStr(sqApresentacao);  
	endOraStr(idProximaPergunta);  
	endOraStr(idCanalCampanha);  
	endOraStr(nmCanal);  
	endOraStr(sgTipoApresentacaoPergunta);  

    // ulog_var(nmCanal);
ULOG("passou para pelo endOraStr na montagem do xml");

    xml->addItem("idResposta",(char *)idResposta.arr);
    xml->addItem("dsPergunta",(char *)dsPergunta.arr);
    xml->addItem("idPergunta",(char *)idPergunta.arr);
    xml->addItem("dsResposta",(char *)dsResposta.arr);
    xml->addItem("dsScriptResposta",(char *)dsScriptResposta.arr);
    xml->addItem("sqApresentacao",(char *)sqApresentacao.arr);
    xml->addItem("inEncerramento",inEncerramento);
    xml->addItem("inStatus",inDisponibilidade);
    xml->addItem("idProximaPergunta",(char *)idProximaPergunta.arr);
    xml->addItem("idCanalCampanha",(char *)idCanalCampanha.arr);
    xml->addItem("nmCanal",(char *)nmCanal.arr);
	xml->addItem("sgTipoApresentacaoPergunta",(char *)sgTipoApresentacaoPergunta.arr);
  
ULOG("passou para pela montagem do xml");  

  return 1;
 }
 catch(...)
 {
	throw;
 }

}

