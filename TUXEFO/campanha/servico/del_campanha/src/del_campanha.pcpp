//
// $Id: del_campanha.pcpp,v 1.1 2009/07/31 15:34:53 a5110702 Exp $
//

#include "../../negocio/cmputil/include/campanha.hpp"

int  iValidaDependencias(int iIdCampanha,XMLGen*xml);
void ItemNaoApagado(XMLGen*xml);
void ItemApagado(XMLGen*xml);


int del_campanha(char * usuario, DOMNode*dnode,XMLGen*xml)
{
	char parm[255]={NULL};
	int iDependencias = 0;

	EXEC SQL BEGIN DECLARE SECTION;
		int		idCampanha = 0;
		int		inAtivo = 0;
		int     idPessoaUsuarioAlteracao = 0;
		
		struct
		{
			VARCHAR sgCampanha[255];
			VARCHAR dsCampanha[255];
		}
		stCampanha;

		struct
		{
			short iisgCampanha;
			short iidsCampanha;
		}
		stCampanhaIndicator;


	EXEC SQL END DECLARE SECTION;
	EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

    //  Obtendo dados do xml

	get_tag(parm, dnode, "idCampanha", 0, 0);
	idCampanha = atoi(parm);
	
	// Pegando id do usuario
	idPessoaUsuarioAlteracao = get_idUsuario(usuario);
	
	inAtivo = 0;
	
	/*Valida dependencias. CVA 26/08/2004 */
	iDependencias = iValidaDependencias(idCampanha,xml);
	if (iDependencias == 1)
		return 1;

	memset(&stCampanha,0,sizeof(stCampanha));

	EXEC SQL 
		SELECT 
			SUBSTR( sgcampanha, 0, 150 ),
			SUBSTR( dscampanha, 0, 150 )
		INTO 
			:stCampanha:stCampanhaIndicator
		FROM 
			apoio.campanha
		WHERE 
			idcampanha = :idCampanha;

	endOraStr(stCampanha.sgCampanha);
	endOraStr(stCampanha.dsCampanha);

	/* Update linha */
	EXEC SQL UPDATE apoio.campanha
	     SET 
			sgcampanha				 = :stCampanha.sgCampanha || :idCampanha || sysdate ,
			dscampanha				 = :stCampanha.dsCampanha || :idCampanha || sysdate ,		
			inativo					 = :inAtivo,
			idPessoaUsuarioAlteracao = :idPessoaUsuarioAlteracao,
			dtultimaAlteracao		 = sysdate,
			dtAlteracao				 = sysdate
		 WHERE 
			idcampanha = :idCampanha;
  
	/* Update SubCampanhaFixa*/
	/* Update linha */
	EXEC SQL UPDATE campanha.subCampanhaFixa
	    SET inativo = :inAtivo,
		idUsuarioAlteracao = :idPessoaUsuarioAlteracao,
		dtultimaAlteracao = sysdate
	    WHERE idcampanha = :idCampanha;
  

	ItemApagado(xml);

	return 1;
}


/*Modificaciones para validar la existencia de campanhas previas. CVA 26/08/2004*/


int iValidaDependencias(int iIdCampanha, XMLGen*xml)
{
	EXEC SQL BEGIN DECLARE SECTION;
		int     idCampanha = 0;
		int		idSubcampanhaHistorico = 0;
		int		idSubCampanhaGrupoUsuario = 0;
		int		idSubCampanhaFixa = 0;
		
	EXEC SQL END DECLARE SECTION;
  
	try{
		idCampanha = iIdCampanha;

/*================================================================================*/	
/*======================= Valida Dependencias CanalCampanha ======================*/
/*================================================================================*/
	
		EXEC SQL DECLARE crsSubCampanhaFixa CURSOR FOR
                SELECT idSubCampanhaFixa
                FROM   campanha.SubCampanhaFixa
                WHERE  (idCampanha = :idCampanha AND
						Inativo = 1);

		EXEC SQL OPEN crsSubCampanhaFixa;

		for(;;) 
		{
			EXEC SQL FETCH crsSubCampanhaFixa INTO :idSubCampanhaFixa;
/*-------------------------------------------------------------------------------------------*/
				EXEC SQL DECLARE crsCampanhaAtual CURSOR FOR
						SELECT idSubcampanhaHistorico
						FROM   campanha.subCampanhaAtual
						WHERE  (idsubcampanhafixa = :idSubCampanhaFixa );

				EXEC SQL OPEN crsCampanhaAtual;

				for(;;) 
				{
					EXEC SQL FETCH crsCampanhaAtual INTO :idSubcampanhaHistorico;
					break;
				}
  
				EXEC SQL CLOSE crsCampanhaAtual;	

				if(idSubcampanhaHistorico > 0)
				{
					ItemNaoApagado(xml);
					return 1;
				}

				/*++++++++++++++++++++++++++++++++++++++*/

				EXEC SQL DECLARE crsSubCampanhaGrupoUsuario CURSOR FOR
                SELECT idSubCampanhaGrupoUsuario
                FROM   contatoAdm.subCampanhaGrupoUsuario
                WHERE  (idsubcampanhafixa = :idSubCampanhaFixa AND Inativo = 1);

				EXEC SQL OPEN crsSubCampanhaGrupoUsuario;

				for(;;) 
				{
					EXEC SQL FETCH crsSubCampanhaGrupoUsuario INTO :idSubCampanhaGrupoUsuario;
					break;
				}
  
				EXEC SQL CLOSE crsSubCampanhaGrupoUsuario;	

				if(idSubCampanhaGrupoUsuario > 0)
				{
					ItemNaoApagado(xml);
					return 1;
				}

/*-------------------------------------------------------------------------------------------*/
			break;
		}
  
		EXEC SQL CLOSE crsSubCampanhaFixa;	
/*
Si solo tiene SubCampanhaFixas, se permite apagar o campanha 
		if(idSubCampanhaFixa > 0)
		{
			ItemNaoApagado(xml);
			return 1;
		}
*/

	return 0;		

  }catch(...){throw;}

  return 0;
}

void ItemNaoApagado(XMLGen*xml)
{
	xml->createTag("tns:retornoVO");
    xml->addProp("xmlns:tns","retornotux.fo.vivo.com.br/vo");    
    xml->addProp("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
	xml->addItem("descricao","Item não apagado");
	xml->addItem("valor","0");
    xml->closeTag();
}

void ItemApagado(XMLGen*xml)
{
	xml->createTag("tns:retornoVO");
    xml->addProp("xmlns:tns","retornotux.fo.vivo.com.br/vo");    
    xml->addProp("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
	xml->addItem("descricao","Item apagado");
	xml->addItem("valor","1");
    xml->closeTag();
}