#undef SQLCA
#define SQLCA_NONE

#include "../../negocio/cmputil/include/campanha.hpp"

int ConsultaAgenda( DOMNode *XMLIn , XMLGen *XMLOut )
{
    char sBuf[ 502 ];
    struct sqlca sqlca;
    TuxHelper tuxHelper;

    try
    {
		EXEC SQL BEGIN DECLARE SECTION;
			int     idAgenda;
			int     idPessoaUsuario;
			int     idPessoaUsuarioAux;
			VARCHAR dtAgendamento[ 50 ];
			int     idAtendimentoCampanha;
			VARCHAR nrTelefoneContato[ 256 ];
			VARCHAR dsObservacaoAgenda[ 501 ];
			VARCHAR nmPessoaContato[ 101 ];
			int     inAgendaCumprida;
			int     idListaConteudo;
		EXEC SQL END DECLARE SECTION;

		sqlca.sqlcode=0;

		if ( tuxHelper.walkTree( XMLIn,"idPessoaUsuario",0 ) )
			idPessoaUsuarioAux = atoi( tuxHelper.walkTree( XMLIn,"idPessoaUsuario",0 ) );

		if ( tuxHelper.walkTree( XMLIn,"idListaConteudo",0 ) )
			idListaConteudo = atoi( tuxHelper.walkTree( XMLIn,"idListaConteudo",0 ) );

		EXEC SQL DECLARE QueryAgenda CURSOR FOR 
					 SELECT NVL(idAgenda,0) ,
							NVL(idPessoaUsuario,0) ,
							dtAgendamento ,
							NVL(idAtendimentoCampanha,0) ,
							NVL(nrTelefoneContato,0) ,
							NVL(dsObservacaoAgenda,'null') ,
							NVL(nmPessoaContato,'null') ,
							NVL(inAgendaCumprida,0)
					  FROM  campanha.Agenda
					  WHERE idAtendimentoCampanha IN ( 
								SELECT	campanha.AtendimentoCampanha.idAtendimentoCampanha 
								FROM 	campanha.AtendimentoCampanha 
								WHERE	campanha.AtendimentoCampanha.idPessoaUsuario = :idPessoaUsuarioAux );

		EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
		EXEC SQL WHENEVER NOT FOUND DO break;

		EXEC SQL OPEN QueryAgenda;

		if( sqlca.sqlcode )
			throw new TuxBasicOraException( sqlca.sqlcode , sqlca.sqlerrm.sqlerrmc , sqlca.sqlerrm.sqlerrml );
		else
		{
			 for( ;; )
			 {
				EXEC SQL FETCH QueryAgenda INTO :idAgenda , :idPessoaUsuario , :dtAgendamento , :idAtendimentoCampanha , :nrTelefoneContato , :dsObservacaoAgenda , :nmPessoaContato , :inAgendaCumprida ;

				XMLOut->createTag("tns:agendamentoCampanhaVO");
					sprintf( sBuf,"%d",idAgenda );
					XMLOut->addItem( "idAgenda",sBuf );
                
					sprintf( sBuf,"%d",idPessoaUsuario );
					XMLOut->addItem( "idPessoaUsuario",sBuf );
                
					dtAgendamento.arr[ dtAgendamento.len ] = 0x0;
					XMLOut->addItem( "dtAgendamento",( char *)dtAgendamento.arr );

					sprintf( sBuf,"%d",idAtendimentoCampanha );
					XMLOut->addItem( "idAtendimentoCampanha",sBuf );

					nrTelefoneContato.arr[ nrTelefoneContato.len ] = 0x0;
					XMLOut->addItem( "nrTelefoneContato",( char *)nrTelefoneContato.arr );

					dsObservacaoAgenda.arr[ dsObservacaoAgenda.len ] = 0x0;
					XMLOut->addItem( "dsObservacaoAgenda",( char *)dsObservacaoAgenda.arr );

					nmPessoaContato.arr[ nmPessoaContato.len ] = 0x0;
					XMLOut->addItem( "nmPessoaContato",( char *)nmPessoaContato.arr );
                
					sprintf( sBuf,"%d",inAgendaCumprida );
					XMLOut->addItem( "inAgendaCumprida",sBuf );
				XMLOut->closeTag();
			 }
			 EXEC SQL CLOSE QueryAgenda;
		}
		XMLOut->closeTag();

    } catch( ... ) {
			 throw;
    }

    return 1;

UndefinedError:
        throw new TuxBasicOraException( sqlca.sqlcode , sqlca.sqlerrm.sqlerrmc , sqlca.sqlerrm.sqlerrml );
}