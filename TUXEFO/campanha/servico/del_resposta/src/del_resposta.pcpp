//
// $Id: del_resposta.pcpp,v 1.1 2009/07/31 15:34:35 a5110702 Exp $
//

#include "../../negocio/cmputil/include/campanha.hpp"

int iValidaDependencias(int idResposta, XMLGen*xml);
void ItemNaoApagado(XMLGen*xml);
void ItemApagado(XMLGen*xml);


int del_resposta(char * usuario, DOMNode*dnode,XMLGen*xml)
{
	char parm[256];
	int	iDependencias = 0;
	EXEC SQL BEGIN DECLARE SECTION;
		int		idResposta;
		int		inAtivo;
		int     idUsuarioAlteracao;
	EXEC SQL END DECLARE SECTION;
	EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

    //  Obtendo dados do xml

	get_tag(parm, dnode, "idResposta", 0, 0);
		idResposta = atoi(parm);
	
	// Pegando id do usuario
	idUsuarioAlteracao = get_idUsuario(usuario);
	
	inAtivo = 0;

	/*Valida dependencias. CVA 26/08/2004 */
	iDependencias = iValidaDependencias(idResposta,xml);
	if (iDependencias == 1)
		return 1;

	/* Update linha 
	EXEC SQL UPDATE questionario.Resposta
	    SET Indisponibilidade = :inAtivo,
			idUsuarioAlteracao = :idUsuarioAlteracao,
			dtUltimaAlteracao = sysdate
		WHERE idResposta = :idResposta;*/

  EXEC SQL delete from questionario.Resposta
			where idResposta=:idResposta;

	/*if (sqlca.sqlcode)
	{
		throw new TuxBasicSvcException("00E1000","UPDATE questionario.Resposta ");
	}*/
  
	ItemApagado(xml);
  
	return 1;
}


int iValidaDependencias(int iIdResposta, XMLGen*xml)
{
	EXEC SQL BEGIN DECLARE SECTION;
		int     idResposta = 0;

		int		idAndamentoResposta = 0;
		int		idSimulacaoResposta = 0;
		int		idRespostaProximaPergunta = 0;
		int		idMatrizOferta = 0;
		int		IdRetencao = 0;
		int     idResposta1 = 0;
		
	EXEC SQL END DECLARE SECTION;

//	EXEC SQL WHENEVER NOT FOUND GOTO DependenciaVacia;
  
	try{
		idResposta = iIdResposta;

/*================================================================================*/	
/*========================= Valida Dependencias Resposta =========================*/
/*================================================================================*/
	
		EXEC SQL 
          SELECT count(1)
		  INTO   :idAndamentoResposta
          FROM   campanha.AndamentoResposta
          WHERE  (idResposta = :idResposta );


		if(idAndamentoResposta > 0)
		{
			ItemNaoApagado(xml);
			return 1;
		}
	
		/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		/ Excluindo registros de simulacaoResposta
		/+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

		EXEC SQL 
            DELETE FROM   
				  campanha.SimulacaoResposta
                WHERE  (idResposta = :idResposta );

		/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
		EXEC SQL 
                SELECT COUNT(IdRespPxPerg)
				INTO :idRespostaProximaPergunta
                FROM   Questionario.RespostaProximaPergunta
                WHERE  (idResposta = :idResposta 
						AND Inativo = 1);

		if(idRespostaProximaPergunta > 0)
		{
			ItemNaoApagado(xml);
			return 1;
		}

		/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/



  }
  catch(...)
  {
	  throw;
  }

  ULOG("Sem Dependencias");

  return 0;
}


void ItemNaoApagado(XMLGen*xml)
{
	xml->createTag("tns:retornoVO");
    xml->addProp("xmlns:tns","retornotux.fo.vivo.com.br/vo");    
    xml->addProp("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
	xml->addItem("descricao","Item não apagado");
	xml->addItem("valor","0");
    xml->closeTag();
}

void ItemApagado(XMLGen*xml)
{
	xml->createTag("tns:retornoVO");
    xml->addProp("xmlns:tns","retornotux.fo.vivo.com.br/vo");    
    xml->addProp("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
	xml->addItem("descricao","Item apagado");
	xml->addItem("valor","1");
    xml->closeTag();
}
