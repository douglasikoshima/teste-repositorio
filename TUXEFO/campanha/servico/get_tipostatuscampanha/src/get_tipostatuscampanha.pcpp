//
// $Id: get_tipostatuscampanha.pcpp,v 1.1 2009/07/31 15:34:02 a5110702 Exp $
//

#include "../../negocio/cmputil/include/campanha.hpp"

int get_tipostatuscampnha(char * usuario, DOMNode*dnode,XMLGen*xml)
{
  char parm[256];
  try
  { 
    EXEC SQL BEGIN DECLARE SECTION;
      int     idTipoStatusCampanha = 0;
      int     idSubCampanhaHistorico = 0;
      int     idTipoMotivoCampanha = 0;
      VARCHAR sgTipoStatusCampanha[255];
      VARCHAR dsTipoStatusCampanha[255];
      int     inAtivo = 0;
      int     inNegative = 0;
      int     idPessoaUsuarioAlteracao = 0;
    EXEC SQL END DECLARE SECTION;
    EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
    EXEC SQL WHENEVER NOT FOUND DO break;

    //  Obtendo dados do xml
    get_tag(parm, dnode, "idSubCampanha", 0, 0);
    idSubCampanhaHistorico = atoi(parm);

    //  Obtendo dados do xml
    // get_tag(parm, dnode, "idTipoMotivoCampanha", 0, -1);
    // idTipoMotivoCampanha = atoi(parm);

    //  Obtendo dados do xml
    get_tag(parm, dnode, "inNegative", 0, -1);
    inNegative = atoi(parm);
  
    inAtivo = 1;

    // Pegando id do usuario
    idPessoaUsuarioAlteracao = get_idUsuario(usuario);

    if(inNegative > 0)
    {
      EXEC SQL DECLARE crsTipoStatusCampanha5 CURSOR FOR
        SELECT DISTINCT TIPOSTATUSCAMPANHA.idtipostatuscampanha,
               TIPOSTATUSCAMPANHA.sgtipostatuscampanha,
               TIPOSTATUSCAMPANHA.dstipostatuscampanha
        FROM   apoio.tipostatuscampanha TIPOSTATUSCAMPANHA,
               campanha.MotivoCampanha STATUSCAMPANHA
        WHERE  STATUSCAMPANHA.idsubcampanhahistorico = :idSubCampanhaHistorico
        AND    TIPOSTATUSCAMPANHA.idtipostatuscampanha != STATUSCAMPANHA.idtipostatuscampanha;
      EXEC SQL OPEN crsTipoStatusCampanha5;

      xml->addItem("nome","STATUS");
      for(;;) 
      {
        EXEC SQL FETCH crsTipoStatusCampanha5 INTO :idTipoStatusCampanha,:sgTipoStatusCampanha,:dsTipoStatusCampanha;
        endOraStr(sgTipoStatusCampanha);
        endOraStr(dsTipoStatusCampanha);
        xml->createTag("tns:ApoioVO");
        xml->addItem("codigo",idTipoStatusCampanha);
        xml->addItem("sigla",(char *)sgTipoStatusCampanha.arr);
        xml->addItem("descricao",(char *)dsTipoStatusCampanha.arr);
        xml->addItem("peso","null");
        xml->addItem("variante","null");
        xml->closeTag();
      }
  
      EXEC SQL CLOSE crsTipoStatusCampanha5;
    }
    else
    {
      EXEC SQL DECLARE crsTipoStatusCampanha2 CURSOR FOR
        SELECT DISTINCT TIPOSTATUSCAMPANHA.idtipostatuscampanha,
               TIPOSTATUSCAMPANHA.sgtipostatuscampanha,
               TIPOSTATUSCAMPANHA.dstipostatuscampanha
        FROM   apoio.tipostatuscampanha TIPOSTATUSCAMPANHA,
               campanha.MotivoCampanha STATUSCAMPANHA
        WHERE  STATUSCAMPANHA.idsubcampanhahistorico = :idSubCampanhaHistorico
        AND    TIPOSTATUSCAMPANHA.idtipostatuscampanha = STATUSCAMPANHA.idtipostatuscampanha;
      EXEC SQL OPEN crsTipoStatusCampanha2;

      xml->addItem("nome","STATUS");
      for(;;) 
      {
        EXEC SQL FETCH crsTipoStatusCampanha2 INTO :idTipoStatusCampanha,:sgTipoStatusCampanha,:dsTipoStatusCampanha;
        endOraStr(sgTipoStatusCampanha);
        endOraStr(dsTipoStatusCampanha);
        xml->createTag("tns:ApoioVO");
        xml->addItem("codigo",idTipoStatusCampanha);
        xml->addItem("sigla",(char *)sgTipoStatusCampanha.arr);
        xml->addItem("descricao",(char *)dsTipoStatusCampanha.arr);
        xml->addItem("peso","null");
        xml->addItem("variante","null");
        xml->closeTag();
      }
  
      EXEC SQL CLOSE crsTipoStatusCampanha2;
    }
  }
  catch( ... )
  {
      throw;
  }  
  return 1;
}
