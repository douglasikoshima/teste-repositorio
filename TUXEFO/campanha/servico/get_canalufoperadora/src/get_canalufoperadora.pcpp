//
// $Id: get_canalufoperadora.pcpp,v 1.1 2009/07/31 15:34:41 a5110702 Exp $
//

#include "../../negocio/cmputil/include/campanha.hpp"

int get_listacanalufop(char * usuario, DOMNode*dnode,XMLGen*xml)
{
  char parm[256];
  try
  {
  EXEC SQL BEGIN DECLARE SECTION;
    int     idCanal;
    int     idCanalUFOperadora;
    VARCHAR cdCanal[255];
    VARCHAR nmCanal[255];
    int     inNegative = 0;
    int     idSubCampanhaHistorico = 0;
    int     sqApresentacao = 0;
    int     inAtivo;
    int     idPessoaUsuarioAlteracao;
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
  EXEC SQL WHENEVER NOT FOUND DO break;

  //  Obtendo dados do xml
  get_tag(parm, dnode, "idSubCampanha", 0, -1);
  idSubCampanhaHistorico = atoi(parm);

  //  Obtendo dados do xml
  get_tag(parm, dnode, "inNegative", 0, -1);
  inNegative = atoi(parm);

  inAtivo = 1;

  // Pegando id do usuario
  idPessoaUsuarioAlteracao = get_idUsuario(usuario);
  if(inNegative > 0 && idSubCampanhaHistorico > 0)
  {
      EXEC SQL DECLARE crsCanal1 CURSOR FOR
        SELECT  CANALUFOPERADORA.IDCANAL,
			  CANAL.CDCANAL||'-' ||UF.sguf, 
			  CANAL.NMCANAL||'-' ||UF.sguf,
			  CANALUFOPERADORA.IDCANALUFOPERADORA
			 FROM Campanha.CanalUFOperadora CANALUFOPERADORA,   
                 Campanha.CanalCampanha CANALCAMPANHA,
				 CUSTOMER.UFOPERADORA	   UFOPERADORA,
				 APOIO.UF				   UF,
				 APOIO.CANAL			   CANAL
          WHERE  CANALCAMPANHA.IDSUBCAMPANHAHISTORICO = :idSubCampanhaHistorico
		  AND 	 CANAL.IDCANAL=CANALUFOPERADORA.IDCANAL
          AND    CANALUFOPERADORA.IDCANALUFOPERADORA = CANALCAMPANHA.IDCANALUFOPERADORA
		  AND	 UFOPERADORA.IDUFOPERADORA=CANALUFOPERADORA.IDUFOPERADORA
		  AND    UFOPERADORA.IDUF=UF.IDUF
          AND    CANALCAMPANHA.inativo = 1
          ORDER BY CANALCAMPANHA.sqapresentacao;

      EXEC SQL OPEN crsCanal1;

      xml->addItem("nome","CANAL");
      for(;;) 
      {
        EXEC SQL FETCH crsCanal1 INTO :idCanal, :cdCanal, :nmCanal, :idCanalUFOperadora;
        endOraStr(cdCanal);
        endOraStr(nmCanal);
        xml->createTag("tns:ApoioVO");
        xml->addItem("codigo",idCanalUFOperadora);
        xml->addItem("sigla",(char *)cdCanal.arr);
        xml->addItem("descricao",(char *)nmCanal.arr);
        xml->addItem("peso","null");
        xml->addItem("variante",idCanal);
        xml->closeTag();
      }
  
      EXEC SQL CLOSE crsCanal1;
  }
  else if(inNegative <= 0 && idSubCampanhaHistorico > 0)
  {
      EXEC SQL DECLARE crsCanal2 CURSOR FOR
            SELECT  CANALUFOPERADORA.IDCANAL,
			  CANAL.CDCANAL||'-' ||UF.sguf, 
			  CANAL.NMCANAL||'-' ||UF.sguf,
			  CANALUFOPERADORA.IDCANALUFOPERADORA
			 FROM Campanha.CanalUFOperadora CANALUFOPERADORA,   
                 Campanha.CanalCampanha CANALCAMPANHA,
				 CUSTOMER.UFOPERADORA	   UFOPERADORA,
				 APOIO.UF				   UF,
				 APOIO.CANAL			   CANAL
          WHERE  CANALCAMPANHA.IDSUBCAMPANHAHISTORICO = :idSubCampanhaHistorico
		  AND 	 CANAL.IDCANAL=CANALUFOPERADORA.IDCANAL
          AND    CANALUFOPERADORA.IDCANALUFOPERADORA = CANALCAMPANHA.IDCANALUFOPERADORA
		  AND	 UFOPERADORA.IDUFOPERADORA=CANALUFOPERADORA.IDUFOPERADORA
		  AND    UFOPERADORA.IDUF=UF.IDUF
          AND    CANALCAMPANHA.inativo = 1
          ORDER BY CANALCAMPANHA.sqapresentacao;

      xml->addItem("nome","CANAL");
      for(;;) 
      {
        EXEC SQL FETCH crsCanal2 INTO :idCanal, :cdCanal, :nmCanal, :idCanalUFOperadora, :sqApresentacao;
        endOraStr(cdCanal);
        endOraStr(nmCanal);
        xml->createTag("tns:ApoioVO");
        xml->addItem("codigo",idCanalUFOperadora);
        xml->addItem("sigla",(char *)cdCanal.arr);
        xml->addItem("descricao",(char *)nmCanal.arr);
        xml->addItem("peso","null");
        xml->addItem("variante",idCanal);
        xml->closeTag();
      }
  
      EXEC SQL CLOSE crsCanal2;
  }
  else 
  {
      EXEC SQL DECLARE crsCanal3 CURSOR FOR
	  SELECT  CANALUFOPERADORA.IDCANAL,
			  CANAL.CDCANAL||'-' ||UF.sguf, 
			  CANAL.NMCANAL||'-' ||UF.sguf,
			  CANALUFOPERADORA.IDCANALUFOPERADORA
			 FROM Campanha.CanalUFOperadora CANALUFOPERADORA,   
                 Campanha.CanalCampanha CANALCAMPANHA,
				 CUSTOMER.UFOPERADORA	   UFOPERADORA,
				 APOIO.UF				   UF,
				 APOIO.CANAL			   CANAL
          WHERE  CANALCAMPANHA.IDSUBCAMPANHAHISTORICO = :idSubCampanhaHistorico
		  AND 	 CANAL.IDCANAL=CANALUFOPERADORA.IDCANAL
          AND    CANALUFOPERADORA.IDCANALUFOPERADORA = CANALCAMPANHA.IDCANALUFOPERADORA
		  AND	 UFOPERADORA.IDUFOPERADORA=CANALUFOPERADORA.IDUFOPERADORA
		  AND    UFOPERADORA.IDUF=UF.IDUF
          AND    CANALCAMPANHA.inativo = 1
          ORDER BY CANALCAMPANHA.sqapresentacao;
      EXEC SQL OPEN crsCanal3;

      xml->addItem("nome","CANAL");
      for(;;) 
      {
        EXEC SQL FETCH crsCanal3 INTO :idCanal, :cdCanal, :nmCanal, :idCanalUFOperadora;
        endOraStr(cdCanal);
        endOraStr(nmCanal);
        xml->createTag("tns:ApoioVO");
        xml->addItem("codigo",idCanalUFOperadora);
        xml->addItem("sigla",(char *)cdCanal.arr);
        xml->addItem("descricao",(char *)nmCanal.arr);
        xml->addItem("peso","null");
        xml->addItem("variante",idCanal);
        xml->closeTag();
      }
  
      EXEC SQL CLOSE crsCanal3;
  }
  }
  catch( ... )
  {
      throw;
  }
  return 1;
}
