//
// $Id: get_submotivo.pcpp,v 1.1 2009/07/31 15:34:21 a5110702 Exp $
//

#include "../../negocio/cmputil/include/campanha.hpp"

int get_submotivo(char * usuario, DOMNode*dnode,XMLGen*xml)
{
	char parm[256];
	EXEC SQL BEGIN DECLARE SECTION;
		char idSubCampanhaHistorico[255+1];
		char idTipoStatusCampanha[255+1];
		char idTipoMotivoCampanha[255+1];
		struct
		{
			VARCHAR idTipoSubMotivoCampanha[255+1];
			VARCHAR sgTipoSubMotivoCampanha[255+1];
			VARCHAR dsTipoSubMotivoCampanha[255+1];
		}stGeral;
		/*
		processo
		0 - campanha-configuração ( nao relacionado )
		1 - campanha-atendimento  ( relacionados )
		*/
		int     processo;
	EXEC SQL END DECLARE SECTION;

	EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
	EXEC SQL WHENEVER NOT FOUND DO break;
	
	memset( &idSubCampanhaHistorico, 0, sizeof( idSubCampanhaHistorico ) );
	memset( &idTipoStatusCampanha, 0, sizeof( idTipoStatusCampanha ) );
	memset( &idTipoMotivoCampanha, 0, sizeof( idTipoMotivoCampanha ) );
	memset( &parm, 0, sizeof( parm ) );

	//  Obtendo dados do xml
	get_tag(parm, dnode, "processo", 0, 0);
	processo = atoi( parm );
	get_tag(idSubCampanhaHistorico, dnode, "idSubCampanha", 0, 0);
	get_tag(idTipoStatusCampanha, dnode, "idTipoStatusCampanha", 0, 0);
	get_tag(idTipoMotivoCampanha, dnode, "idTipoMotivoCampanha", 0, 0);

	switch( processo )
	{
		case 0:
			//Montando a pesquisa
			EXEC SQL 
			DECLARE 
				CursorNaoRelacionados CURSOR FOR
			SELECT DISTINCT
				TIPOSUBMOTIVOCAMPANHA.IDTIPOSUBMOTIVOCAMPANHA,
				TIPOSUBMOTIVOCAMPANHA.SGTIPOSUBMOTIVOCAMPANHA,
				TIPOSUBMOTIVOCAMPANHA.DSTIPOSUBMOTIVOCAMPANHA
			FROM
				APOIO.TIPOSUBMOTIVOCAMPANHA TIPOSUBMOTIVOCAMPANHA
			WHERE
				TIPOSUBMOTIVOCAMPANHA.IDTIPOSUBMOTIVOCAMPANHA NOT IN 
				(
					SELECT 
						MOTIVOCAMPANHA.IDTIPOSUBMOTIVOCAMPANHA
					FROM
						CAMPANHA.MOTIVOCAMPANHA MOTIVOCAMPANHA
					WHERE
						MOTIVOCAMPANHA.INATIVO = 1
					AND
						MOTIVOCAMPANHA.IDTIPOSTATUSCAMPANHA = :idTipoStatusCampanha
					AND
						MOTIVOCAMPANHA.IDSUBCAMPANHAHISTORICO = :idSubCampanhaHistorico
					AND
						MOTIVOCAMPANHA.IDTIPOMOTIVOCAMPANHA = :idTipoMotivoCampanha
				)
			AND
				TIPOSUBMOTIVOCAMPANHA.INATIVO = 1
			ORDER BY 
				UPPER(TRIM(TIPOSUBMOTIVOCAMPANHA.SGTIPOSUBMOTIVOCAMPANHA));
	
			EXEC SQL OPEN CursorNaoRelacionados;
	
			xml->addItem("nome","MOTIVO");
			for(;;) 
			{
				memset( &stGeral, 0, sizeof( stGeral ) );
				EXEC SQL 
				FETCH 
					CursorNaoRelacionados 
				INTO 
					:stGeral.idTipoSubMotivoCampanha,
					:stGeral.sgTipoSubMotivoCampanha,
					:stGeral.dsTipoSubMotivoCampanha;
	
				xml->createTag("tns:ApoioVO");
				xml->addItem("codigo",(char *)stGeral.idTipoSubMotivoCampanha.arr );
				xml->addItem("sigla",(char *)stGeral.sgTipoSubMotivoCampanha.arr );
				xml->addItem("descricao",(char *)stGeral.dsTipoSubMotivoCampanha.arr );
				xml->addItem("peso","null");
				xml->addItem("variante","null");
				xml->closeTag();
			}
	
			EXEC SQL CLOSE CursorNaoRelacionados;
			break;

		case 1:
			EXEC SQL 
			DECLARE 
				CursorRelacionado CURSOR FOR
			SELECT 
	            TIPOSUBMOTIVOCAMPANHA.IDTIPOSUBMOTIVOCAMPANHA,
				TIPOSUBMOTIVOCAMPANHA.SGTIPOSUBMOTIVOCAMPANHA,
			    TIPOSUBMOTIVOCAMPANHA.DSTIPOSUBMOTIVOCAMPANHA
			FROM
	            APOIO.TIPOSUBMOTIVOCAMPANHA TIPOSUBMOTIVOCAMPANHA,
				CAMPANHA.MOTIVOCAMPANHA MOTIVOCAMPANHA
			WHERE
	            TIPOSUBMOTIVOCAMPANHA.IDTIPOSUBMOTIVOCAMPANHA = MOTIVOCAMPANHA.IDTIPOSUBMOTIVOCAMPANHA
			AND
	            MOTIVOCAMPANHA.IDTIPOSTATUSCAMPANHA = :idTipoStatusCampanha
			AND
	            MOTIVOCAMPANHA.IDSUBCAMPANHAHISTORICO = :idSubCampanhaHistorico
			AND
	            MOTIVOCAMPANHA.IDTIPOMOTIVOCAMPANHA = :idTipoMotivoCampanha
			AND
				MOTIVOCAMPANHA.INATIVO = 1
			AND
	            TIPOSUBMOTIVOCAMPANHA.INATIVO = 1
			ORDER BY 
	            UPPER(TRIM(TIPOSUBMOTIVOCAMPANHA.SGTIPOSUBMOTIVOCAMPANHA));						
			
			EXEC SQL OPEN CursorRelacionado;
	
			xml->addItem("nome","MOTIVO");
			for(;;) 
			{
				memset( &stGeral, 0, sizeof( stGeral ) );
				EXEC SQL 
				FETCH 
					CursorRelacionado 
				INTO 
					:stGeral.idTipoSubMotivoCampanha,
					:stGeral.sgTipoSubMotivoCampanha,
					:stGeral.dsTipoSubMotivoCampanha;
	
				xml->createTag("tns:ApoioVO");
				xml->addItem("codigo",(char *)stGeral.idTipoSubMotivoCampanha.arr );
				xml->addItem("sigla",(char *)stGeral.sgTipoSubMotivoCampanha.arr );
				xml->addItem("descricao",(char *)stGeral.dsTipoSubMotivoCampanha.arr );
				xml->addItem("peso","null");
				xml->addItem("variante","null");
				xml->closeTag();
			}
			EXEC SQL CLOSE CursorRelacionado;
	}//switch( processo )
	return 1;
}
