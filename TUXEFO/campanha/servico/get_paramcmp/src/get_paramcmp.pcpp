//
// $Id: get_paramcmp.pcpp,v 1.1 2009/07/31 15:34:06 a5110702 Exp $
//

#include "../../negocio/cmputil/include/campanha.hpp"

int get_listaparamcmp(char* usuario, DOMNode*dnode,XMLGen*xml)
{
  	try
  	{  
		EXEC SQL BEGIN DECLARE SECTION;
			char  cidCanalCampanha[255+1];
	     	struct
	     	{
		     	VARCHAR sqApresentacao[21+1];
		     	VARCHAR inDisponibilidade[21+1];
		     	VARCHAR idSubCampanhaHistorico[21+1];
		     	VARCHAR idCanalUFOperadora[21+1];
		     	VARCHAR idCanal[21+1];
		     	VARCHAR cdCanal[255+1];
		     	VARCHAR nmCanal[255+1];
		    }stCanalCampanhaRegistro;
	     	struct
	     	{
		     	short sqApresentacao;
		     	short inDisponibilidade;
		     	short idSubCampanhaHistorico;
		     	short idCanalUFOperadora;
		     	short idCanal;
		     	short cdCanal;
		     	short nmCanal;
		    }stCanalCampanhaIndicator;

          	struct
          	{
				VARCHAR idCanalCampanha[21+1];
				VARCHAR nrTempoMedioContato[21+1];
				VARCHAR nrMetaDiariacampanha[21+1];
				VARCHAR nrMetaDiariaOperador[21+1];
				VARCHAR nrContatoEfetivoOperador[21+1];
				VARCHAR nrContatoEfetivoCampanha[21+1];
				VARCHAR nrContatoSucessoOperador[21+1]; 
				VARCHAR nrContatoSucessoCampanha[21+1]; 
				VARCHAR nrPublicoTotal[21+1];
				VARCHAR nrAderiuOperador[21+1];
				VARCHAR nrAderiuCampanha[21+1];
				VARCHAR nrNaoAderiuOperador[21+1];
				VARCHAR nrNaoAderiuCampanha[21+1];
				VARCHAR idSubCampanhaHistorico[21+1];
			} stRegistro;
          	struct
          	{
				short idCanalCampanha;
				short nrTempoMedioContato;
				short nrMetaDiariacampanha;
				short nrMetaDiariaOperador;
				short nrContatoEfetivoOperador;
				short nrContatoEfetivoCampanha;
				short nrContatoSucessoOperador;
				short nrContatoSucessoCampanha;
				short nrPublicoTotal;
				short nrAderiuOperador;
				short nrAderiuCampanha;
				short nrNaoAderiuOperador;
				short nrNaoAderiuCampanha;
				short idSubCampanhaHistorico;
			} stIndicator;
        EXEC SQL END DECLARE SECTION;
        
        memset( cidCanalCampanha, 0, sizeof( cidCanalCampanha ) );
        memset( &stCanalCampanhaRegistro, 0, sizeof( stCanalCampanhaRegistro ) );
        memset( &stRegistro, 0, sizeof( stRegistro ) );

        EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
        EXEC SQL WHENEVER NOT FOUND CONTINUE;

        //  Obtendo dados do xml
        get_tag(cidCanalCampanha, dnode, "idCanalCampanha", 0, 0);

        EXEC SQL 
        SELECT 
            CANALCAMPANHA.SQAPRESENTACAO,
            CANALCAMPANHA.INDISPONIBILIDADE,
            CANALCAMPANHA.IDSUBCAMPANHAHISTORICO,
            CANALCAMPANHA.IDCANALUFOPERADORA,
            CANALUFOPERADORA.IDCANAL,
            CANAL.CDCANAL,
            CANAL.NMCANAL
		INTO 
			:stCanalCampanhaRegistro:stCanalCampanhaIndicator
      	FROM
      		CAMPANHA.CANALCAMPANHA CANALCAMPANHA,
            CAMPANHA.CANALUFOPERADORA CANALUFOPERADORA,
            APOIO.CANAL CANAL
       	WHERE
       		CANALCAMPANHA.IDCANALCAMPANHA = :cidCanalCampanha
        AND
        	CANALUFOPERADORA.IDCANALUFOPERADORA = CANALCAMPANHA.IDCANALUFOPERADORA
        AND
        	CANAL.IDCANAL = CANALUFOPERADORA.IDCANAL
       	AND
       		ROWNUM <= 1
        ORDER BY 
        	CANAL.CDCANAL;

        xml->addItem("nome","CanalUtil");
        xml->createTag("ApoioCanalVO");
        xml->addItem("idCanalCampanha",cidCanalCampanha);
        xml->addItem("cnlcmpinAtivo",1);
        xml->closeTag();

        EXEC SQL
        SELECT 
          	PARAMETRIZACAOCAMPANHA.IDCANALCAMPANHA,
          	PARAMETRIZACAOCAMPANHA.NRTEMPOMEDIOCONTATO,
            PARAMETRIZACAOCAMPANHA.NRMETADIARIACAMPANHA,
            PARAMETRIZACAOCAMPANHA.NRMETADIARIAOPERADOR,
            PARAMETRIZACAOCAMPANHA.NRCONTATOEFETIVOOPERADOR,
            PARAMETRIZACAOCAMPANHA.NRCONTATOEFETIVOCAMPANHA,
            PARAMETRIZACAOCAMPANHA.NRCONTATOSUCESSOOPERADOR,
            PARAMETRIZACAOCAMPANHA.NRCONTATOSUCESSOCAMPANHA,
            PARAMETRIZACAOCAMPANHA.NRPUBLICOTOTAL,
            PARAMETRIZACAOCAMPANHA.NRADERIUOPERADOR,
            PARAMETRIZACAOCAMPANHA.NRADERIUCAMPANHA,
            PARAMETRIZACAOCAMPANHA.NRNAOADERIUOPERADOR,
            PARAMETRIZACAOCAMPANHA.NRNAOADERIUCAMPANHA,
            PARAMETRIZACAOCAMPANHA.IDCANALCAMPANHA
        INTO
        	:stRegistro:stIndicator
     	FROM
     		CAMPANHA.PARAMETRIZACAOCAMPANHA PARAMETRIZACAOCAMPANHA
      	WHERE
      		PARAMETRIZACAOCAMPANHA.IDCANALCAMPANHA = :cidCanalCampanha;
      		
      	if( stRegistro.idCanalCampanha.len > 0 )
		{
	        xml->addItem("nrTempoMedio",(char*)stRegistro.nrTempoMedioContato.arr);
	        xml->addItem("nrMetaDiariaCmp",(char*)stRegistro.nrMetaDiariacampanha.arr);
	        xml->addItem("nrMetaDiariaOpr",(char*)stRegistro.nrMetaDiariaOperador.arr);
	        xml->addItem("nrContEfetivoCmp",(char*)stRegistro.nrContatoEfetivoCampanha.arr);
	        xml->addItem("nrContEfetivoOpr",(char*)stRegistro.nrContatoEfetivoOperador.arr);
	        xml->addItem("nrContSucessoOpr",(char*)stRegistro.nrContatoSucessoOperador.arr);
	        xml->addItem("nrContSucessoCmp",(char*)stRegistro.nrContatoSucessoCampanha.arr);
	        xml->addItem("nrPublicoTotal",(char*)stRegistro.nrPublicoTotal.arr);
	        xml->addItem("nrAderiuOpr",(char*)stRegistro.nrAderiuOperador.arr);
	        xml->addItem("nrAderiuCmp",(char*)stRegistro.nrAderiuCampanha.arr);
	        xml->addItem("nrNaoAderiuOpr",(char*)stRegistro.nrNaoAderiuOperador.arr);
	        xml->addItem("nrNaoAderiuCmp",(char*)stRegistro.nrNaoAderiuCampanha.arr);
	  	}
	}
	catch( ... )
	{
		throw;
	}  
	return 1;
}
