//
// $Id: final_campanhasimul.pcpp,v 1.1 2009/07/31 15:33:55 a5110702 Exp $
//

#include "../../negocio/cmputil/include/campanha.hpp"

int final_campanhaSimul(int usuario, DOMNode*dnode, XMLGen*xml)
{
  char parm[2000];
  int  i, b;
  int  ret  = 0; 
  DOMNode* bnode; // Salva ponteiro original
  TuxHelper tx; 
	
  EXEC SQL BEGIN DECLARE SECTION;
    int     idSimulacaoCampanha;
	int     idCanalCampanha = 0;
	int     idPessoaUsuario = 0;
    int     idPergunta = 0;
    int     idResposta = 0;
    int     idUsuarioAlteracao = 0;
	int     counter=0;
	VARCHAR dsTextoLivre[255];
	VARCHAR	dsTituloSimulacao[255];
		
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

  try{
    //  Obtendo dados do xml

	get_tag(parm,dnode,"idCanalCampanha",0,0);
    idCanalCampanha = atoi(parm);

	get_tag(parm,dnode,"idPessoaUsuario",0,0);
    idPessoaUsuario = atoi(parm);

   
    // Atribuindo id do usuario
    idUsuarioAlteracao = usuario;

	// Pegar idSimulacaoCampanha 
    EXEC SQL
      select campanha.SimulacaoCampanhasQ.nextval 
      into :idSimulacaoCampanha
      from dual;

	// Pegar dsTituloSimulacao 
	EXEC SQL
	SELECT  ac.nmcanal || ' ' || campanha.SimulacaoCampanhasQ.currval
	INTO :dsTituloSimulacao
    FROM	campanha.canalcampanha ccc, 
			campanha.canalufoperadora ccu,  
			apoio.canal  ac
	WHERE (   (ccu.idcanalufoperadora = ccc.idcanalufoperadora )
          AND (ac.idcanal = ccu.idcanal)
          AND (ccc.idcanalcampanha = :idCanalCampanha)
         );

	endOraStr(dsTituloSimulacao);


	// Inserindo dados
       EXEC SQL
      insert into campanha.SimulacaoCampanha (	idSimulacaoCampanha,
													idCanalCampanha,
													idPessoaUsuario,
													dsTituloSimulacao,
													dtSimulacao,
													idUsuarioAlteracao,
													dtUltimaAlteracao )
      values (  :idSimulacaoCampanha,
				:idCanalCampanha,				
				:idPessoaUsuario,
				:dsTituloSimulacao,
				sysdate,
				:idUsuarioAlteracao,
				sysdate );


    // Inserindo dados do Simulacao
	for(int x=0;;x++)  
	{
		bnode = tx.walkDOM(dnode, "perguntaListVO", x ); 

		if ( bnode == NULL )
			break; 

		i = 0;


				while( get_tag(parm,dnode,"idPergunta",i,-1) != -1 )
				{
					idPergunta = atoi(parm);

					for(b=0;;b++)
					{
						ret = get_tag(parm,bnode,"idResposta",b,-1);
						idResposta = atoi(parm);

					    if (!idResposta)
						    ret = -1; 

					    if (ret == -1)  
						{
							idResposta = 0; 
							get_tag(parm,bnode,"dsTextoLivre",0,0);

							if ( !strlen( parm ) ) 
								break; 

							strToOra(dsTextoLivre,parm);
						}
						
						counter = 0;            

							// verificando dados
						EXEC SQL
							SELECT idSimulacaoPergunta into :counter FROM campanha.SimulacaoPergunta
							WHERE idpergunta=:idPergunta
							AND   idSimulacaoCampanha=:idSimulacaoCampanha;
						

								if(!counter)
								{     
									// Inserindo dados
									EXEC SQL
										INSERT into campanha.SimulacaoPergunta ( idSimulacaoPergunta,
			 																		idPergunta,
																					idSimulacaoCampanha,
																					idUsuarioAlteracao,
																					dtUltimaAlteracao )
										values ( campanha.SimulacaoPerguntaSQ.nextval,
												:idPergunta, 
												:idSimulacaoCampanha,
												:idUsuarioAlteracao,
												sysdate );
    
										if ( idResposta )
										{
											EXEC SQL
											INSERT INTO campanha.SimulacaoResposta ( idSimulacaoResposta,
								      													idSimulacaoPergunta,
																						idResposta,
																						idUsuarioAlteracao,
																						dtUltimaAlteracao )
											VALUES (	campanha.SimulacaoRespostaSQ.nextval,
														campanha.SimulacaoPerguntaSQ.currval,
														:idResposta,
														:idUsuarioAlteracao,
														sysdate );
										}
										else
										{
											EXEC SQL
											INSERT INTO campanha.SimulacaoRespostaTextoLivre ( idSimulacaoPergunta,
									  															  dsTextoLivre,
																								  idUsuarioAlteracao,
																								  dtUltimaAlteracao )
											VALUES ( campanha.SimulacaoPerguntaSQ.currval,
													 :dsTextoLivre,
													 :idUsuarioAlteracao,
													 sysdate );
										}
								 }
								 else
								 {
									EXEC SQL
									update campanha.SimulacaoPergunta 
									set	idUsuarioAlteracao=:idUsuarioAlteracao,
									dtUltimaAlteracao=sysdate
									where idSimulacaoPergunta=:counter;

								 if ( idResposta )
								  {
									 try {
											EXEC SQL
											INSERT INTO campanha.SimulacaoResposta ( idSimulacaoResposta,
								      													idSimulacaoPergunta,
																						idResposta,
																						idUsuarioAlteracao,
																						dtUltimaAlteracao )
											VALUES (	campanha.SimulacaoRespostaSQ.nextval,
														:counter,
														:idResposta,
														:idUsuarioAlteracao,
														sysdate );

									 }
									 catch(...)
									 {
										EXEC SQL
											update  campanha.SimulacaoResposta 
											set idResposta=:idResposta,
												idUsuarioAlteracao=:idUsuarioAlteracao,
												dtUltimaAlteracao=sysdate
											where idSimulacaoPergunta=:counter;
									 };
											
											
								   }
								else
								   {	
									 EXEC SQL	
			 							update  campanha.SimulacaoRespostaTextoLivre 
										set dsTextoLivre=:dsTextoLivre,
											idUsuarioAlteracao=:idUsuarioAlteracao,
											dtUltimaAlteracao=sysdate
										where idSimulacaoPergunta=:counter;
									} 




					 }
				i++;
 				if (ret == -1)  
					break;			
			}
		  }
    }  

    // Retornando id da SimulacaoCampanha
    xml->addItem("idSimulacaoCampanha",idSimulacaoCampanha);
	}
	catch(...)
	{
		throw;
	}

  return 1;
}
