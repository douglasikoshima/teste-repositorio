//
// $Id: orautil.pcpp,v 1.1.2.1 2010/01/13 22:57:17 a5110702 Exp $
//


#undef SQLCA
#define SQLCA_NONE
#include <sqlca.h>
#include <sqlda.h>

#include "orautil.hpp"

struct sqlca sqlca;

void sql_error_base(char *fmt,char *msg)
{
  char buff[100];
  char strErro[10];
  
  try{
    sprintf(strErro,fmt,-(sqlca.sqlcode));
    sprintf(buff,"%.*s", sqlca.sqlerrm.sqlerrml-1,sqlca.sqlerrm.sqlerrmc);
  
    ulog("\n\n >>> %s \n\n",buff);
  
    throw new TuxBasicSvcException(strErro,buff);
  }catch(...){ throw; }
}

void sql_notfound_base(char *fmt,char *msg)
{
  char strErro[10];
  int size=strlen(fmt);	
  try{
	for(int i=0;i<size;i++)
		{
			if(fmt[i]=='-')
				{
					fmt[i]=' ';
				}
		}
    ulog(">>> %s \n",msg);
    sprintf(strErro,fmt,-(sqlca.sqlcode));
   // throw new TuxBasicSvcException(strErro,msg);
      throw new TuxBasicOraException(sqlca.sqlcode);
  }catch(...){ throw; }
}

int  get_idUsuario_base(char *fmt,char *usuario)
{

  EXEC SQL BEGIN DECLARE SECTION;
    VARCHAR nmUsuario[255];
    int     idPessoaUsuario;
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error_base(fmt,NULL);
  EXEC SQL WHENEVER NOT FOUND DO sql_notfound_base(fmt,"USUARIO NAO EXISTE");

  try{
    // TODO - Remover pesquisa do usuario
    if (isdigit(usuario[0])){
      idPessoaUsuario = atoi(usuario);
    }else{
      strToOra(nmUsuario,usuario);
      EXEC SQL select idPessoaUsuario 
	into :idPessoaUsuario 
	from acesso.Usuario
	where nmloginusuario = :nmUsuario;
    }
  }catch(...){ throw; }

  return(idPessoaUsuario);
  
}

void set_sysdate(char *dtOut)
{
  struct tm *dt;
  time_t tepoch;

  tepoch = time(NULL);
  dt = gmtime(&tepoch);
  
  sprintf(dtOut,"%02d/%02d/%4d",dt->tm_mday,
	                       (dt->tm_mon + 1),
                               (dt->tm_year + 1900));

}
