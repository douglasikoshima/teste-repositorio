//------------------------------------------------------------------------------------
  //                           (c) Consorcio Indra/PT-SI.
  //                              xxxxxxxxxxxxxxxxxxxxxxx
  //                                  xxxxxxxxxxxxxx 
  //----------------------------------------------------------------------------------
  // Los contenidos de este fichero son propiedad de Telefonica Consorsio Indra/Pt-SI.
  // titular del copyright. Este fichero solo podra ser copiado, distribuido y utilizado,
  // em su totalidad o en parte, con el permiso escrito de Consorcio Indra/Pt-SI o de
  // acuerdo com los terminos y condiciones establecidas em el acuerdo/contrato bajo el
  // que se suministra.
//----------------------------------------------------------------------------------
//* Fonte: main.pcpp
//* Servico: EAtributo
//* Servidor: admAtributo
//*
//* Ficheiro: TUXEFO/cliente/admAtributo/EAtributo/src
//*
//* Tipo: Pro*C
//*
//* Autor: Jefferson da S. Martins
//*
//* Fecha primeira version:01/05/2004
//*
//* Version actual: 01.00
//*
//* Purpose:
//*//-------------------------------------------------------------------------------
//* Purpose:
//*
//* 
//*
//*//-------------------------------------------------------------------------------
//---------------------------------------------------------------------
//EXEC SQL INCLUDE SQLCA; 

#include "../../negocio/clienteCmm/include/Messages.h"
#include <tuxfw.h>
#include "../../negocio/clienteCmm/include/Funcoes.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "Global.h"
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE "../../negocio/clienteCmm/include/classCstAtributo.h";

DECLARE_TUXEDO_SERVICE(EAtributo);

void implEAtributo::Execute(DOMNode *pDnode, XMLGen *pXmlG)
{
CCstAtributo oObj;
char* pParam;

    ULOG_START( "implEAtributo::Execute()" );
    
    try{
          pParam = walkTree(pDnode, "idAtributo", 0);
          if(!pParam){
               ERROR(NRO_ID_ATRIBUTO_NR_NE);
               TAG_INEXISTENTE("idAtributo");
               throw new TuxBasicSvcException(sNrMsg, sMsg);
          }
          if (!*pParam){
               ERROR(NRO_ID_ATRIBUTO_NR_VV);
               TAG_VALOR_VAZIO("idAtributo");
		       XMLString::release(&pParam);
               throw new TuxBasicSvcException(sNrMsg, sMsg);
          }
          if ( !IsNumeric(pParam) ){
               ERROR(NRO_ID_ATRIBUTO_NR_VI);
               TAG_VALOR_INVALIDO("idAtributo");
		       XMLString::release(&pParam);
               throw new TuxBasicSvcException(sNrMsg, sMsg);
          }
          oObj.setIdSubAssunto(pParam);
 	      XMLString::release(&pParam);

          // Guarda o usuario que esta executando esse servico
          oObj.setUsuarioAlteracao(getUser());

          if ( oObj.Excluir() == NOK )
          {
            ERROR(NRO_DELETE_NAO_EFETUADO);
            throw new TuxBasicSvcException(sNrMsg, MSG_DELETE_NAO_EFETUADO);
          }
    }
    catch(...){
        throw;  //repassando o erro para nucleo
    }

    // Execução OK.
    INFORMATION(NRO_OK);
    ULOG_END( "implEAtributo::Execute()" );
    setStatusCode(sNrMsg, MSG_OK);
}



