#undef SQLCA
#define SQLCA_NONE
#include <sqlca.h>
#include <sqlda.h>

#include "../../negocio/clienteCmm/include/Messages.h"

#include <tuxfw.h>
#include "../../negocio/clienteCmm/include/Exception.h"

#include "../include/LAssunto.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "Global.h"
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE "../../negocio/clienteCmm/include/classCstAssunto.h";

DECLARE_TUXEDO_SERVICE(LAssunto);

void implLAssunto::Execute(DOMNode *pDnode, XMLGen *pXmlG)
{
CCstAssunto *oAssunto;
int iNroReg = 0;
int iAux = 0;

    try{
        ULOG_START( "implLAssunto::Execute()" );

		oAssunto = CCstAssunto::RecuperarTodos(&iNroReg);

        if ( !oAssunto )
		{
			pXmlG->addItem("FAILED","FAILED");
		}
		else
		{
		    pXmlG->createTag(XML_ROOT);
		    pXmlG->addProp("xmlns", XML_PROP);
	        for (; iAux < iNroReg; iAux++) 
            {
		        pXmlG->createTag(XML_NO);
		            pXmlG->addItem(XML_IDASS, oAssunto[iAux].getIdAssunto());
		            pXmlG->addItem(XML_DSASS, oAssunto[iAux].getDsAssunto());
		        pXmlG->closeTag();
	        }
            pXmlG->closeTag();

			setStatusCode("00I0000","Success Execution");
            free(oAssunto); //Liberando a memoria alocada dentro da classe.
		}
        ULOG_END( "implLAssunto::Execute()" );
    }
    catch(CException sE){
        setStatusCode("00E0000", sE.getMsg()); //verificar o codigo correto
    }

    return;
}
