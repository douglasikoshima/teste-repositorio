#undef SQLCA
#define SQLCA_NONE
#include <sqlca.h>
#include <sqlda.h>

#include "../../negocio/clienteCmm/include/Exception.h"
#include "../../negocio/clienteCmm/include/Messages.h"
#include <tuxfw.h>
#include "../../negocio/clienteCmm/include/Funcoes.h"
#include "../../negocio/clienteCmm/include/PessoaLinha.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "Global.h"
EXEC SQL END DECLARE SECTION;

DECLARE_TUXEDO_SERVICE(GETLINHAPORID);

void implGETLINHAPORID::Execute(DOMNode *dnode, XMLGen *xml_g)
{
    unsigned int iCont;
    char *pAux;
    char szIdPessoa[LEN_IDPESSOA + LEN_EOS];

    PessoaLinha *pclPessoaLinha;

    ULOG_START( "implGETLINHAPORID::Execute()" );
    
    try
    {

        pclPessoaLinha = new PessoaLinha;

        for(iCont=0;;iCont++) {
            ULOG("iCont(%u)", iCont);

            if((pAux = walkTree(dnode, "idPessoa", iCont))) {
                strcpy(szIdPessoa, pAux); XMLString::release(&pAux);
            } else break;
            ULOG("szIdPessoa[%s]", szIdPessoa);


            pclPessoaLinha->buscaLinhasPorIdPessoa(szIdPessoa, xml_g);


        }
    }
    catch(...){
        ULOG("Exception!");
        delete pclPessoaLinha;
        throw;
    }

    delete pclPessoaLinha;

    ULOG_END( "implGETLINHAPORID::Execute()" );

	INFORMATION(NRO_OK);
	setStatusCode(sNrMsg, MSG_OK);
}
