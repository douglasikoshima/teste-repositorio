#include <tuxfw.h>
#include "../../negocio/clienteCmm/include/Messages.h"
#include "../../negocio/clienteCmm/include/Funcoes.h"
#include "../../negocio/clienteCmm/include/Grupo.h"
#include "../../negocio/clienteCmm/include/Global.h"
#include "../include/GETPESQGRUPO.h"

DECLARE_TUXEDO_SERVICE(GETPESQGRUPO);

void implGETPESQGRUPO::Execute(DOMNode* dnode, XMLGen* xml_g) {

    Grupo *pclGrupo;

    unsigned int iCont;

    char *pAux;

    char szSgTipoPesquisa[LEN_AUX + LEN_EOS];
    char szDsValor[LEN_AUX + LEN_EOS];
    char szDsNomeDoMeio[LEN_AUX + LEN_EOS];
    char szDsSobreNome[LEN_AUX + LEN_EOS];
    char szNmCompleto[LEN_AUX + LEN_EOS];

    ULOG_START( "implGETPESQGRUPO::Execute()" );
    
    try
    {

        memset(szSgTipoPesquisa, 0x00, sizeof(szSgTipoPesquisa));
        memset(szDsValor, 0x00, sizeof(szDsValor));
        memset(szDsNomeDoMeio, 0x00, sizeof(szDsNomeDoMeio));
        memset(szDsSobreNome, 0x00, sizeof(szDsSobreNome));
        memset(szNmCompleto, 0x00, sizeof(szNmCompleto));
    
        pclGrupo = new Grupo;

        for(iCont=0;;iCont++) {
            ULOG("iCont(%d)", iCont);


            if((pAux = walkTree(dnode, "sgTipoPesquisa", iCont))) {
                strcpy(szSgTipoPesquisa, pAux); XMLString::release(&pAux);
            } else break;
            ULOG("szSgTipoPesquisa[%s]", szSgTipoPesquisa);


            if((pAux = walkTree(dnode, "dsValor", iCont))) {
                strcpy(szDsValor, pAux); XMLString::release(&pAux);
            } else break;
            ULOG("szDsValor[%s]", szDsValor);


            if((pAux = walkTree(dnode, "dsNomeDoMeio", iCont))) {
                strcpy(szDsNomeDoMeio, pAux); XMLString::release(&pAux);
            }
            ULOG("szDsNomeDoMeio[%s]", szDsNomeDoMeio);


            if((pAux = walkTree(dnode, "dsSobreNome", iCont))) {
                strcpy(szDsSobreNome, pAux); XMLString::release(&pAux);
            }
            ULOG("szDsSobreNome[%s]", szDsSobreNome);


            if((pAux = walkTree(dnode, "nmCompleto", iCont))) {
                strcpy(szNmCompleto, pAux); XMLString::release(&pAux);
            }
            ULOG("szNmCompleto[%s]", szNmCompleto);


            if(!strcmp(szSgTipoPesquisa, "CLIENTE")) {
                pclGrupo->buscaClientePorIdPessoa(szDsValor, xml_g);
            }
            else if(!strcmp(szSgTipoPesquisa, "NOME")) {
                 pclGrupo->buscaClientePorNome(szDsValor, szDsNomeDoMeio, szDsSobreNome, xml_g);
            }
            else if(!strcmp(szSgTipoPesquisa, "RAZAO")) {
                 pclGrupo->buscaClientePorRazao(szDsValor, xml_g);
            }
            else if(!strcmp(szSgTipoPesquisa, "CELULAR")) {
                 pclGrupo->buscaClientePorCelular(szDsValor, xml_g);
            }
            else if(!strcmp(szSgTipoPesquisa, "CONTA")) {
                 pclGrupo->buscaClientePorConta(szDsValor, xml_g);
            }
            else if(!strcmp(szSgTipoPesquisa, "CPF")  ||
                    !strcmp(szSgTipoPesquisa, "CNPJ") ||
                    !strcmp(szSgTipoPesquisa, "RNE")  ||
                    !strcmp(szSgTipoPesquisa, "PAS")  ||
                    !strcmp(szSgTipoPesquisa, "IE")   ||
                    !strcmp(szSgTipoPesquisa, "CN")   ||
                    !strcmp(szSgTipoPesquisa, "RG")   ||
                    !strcmp(szSgTipoPesquisa, "IM")
            ) {
                pclGrupo->buscaClientePorDocumento(szDsValor, szSgTipoPesquisa, xml_g);
            }
            else
            {
                delete pclGrupo;

                INFORMATION(NRO_NOK);
                strcpy(sNrMsg, "sgTipoPesquisa invalida");
                ULOG("%s - [%s]", sNrMsg, szSgTipoPesquisa);
            	setStatusCode(sNrMsg, MSG_NOK);
            }
        }

    }
    catch(...)
    {
        delete pclGrupo;
        throw;
    }
    
    
    ULOG_END( "implGETPESQGRUPO::Execute()" );
    
    delete pclGrupo;

	INFORMATION(NRO_OK);
	setStatusCode(sNrMsg, MSG_OK);
}
