//------------------------------------------------------------------------------------
  //                           (c) Consorcio Indra/PT-SI.
  //                              xxxxxxxxxxxxxxxxxxxxxxx
  //                                  xxxxxxxxxxxxxx 
  //----------------------------------------------------------------------------------
  // Los contenidos de este fichero son propiedad de Telefonica Consorsio Indra/Pt-SI.
  // titular del copyright. Este fichero solo podra ser copiado, distribuido y utilizado,
  // em su totalidad o en parte, con el permiso escrito de Consorcio Indra/Pt-SI o de
  // acuerdo com los terminos y condiciones establecidas em el acuerdo/contrato bajo el
  // que se suministra.
//----------------------------------------------------------------------------------
//* Fonte   : main.cpp
//* Servico : CarregaTI
//* Servidor: LupaLinha
//*
//* Ficheiro: TUXEFO/cliente/TelaInicial/DadUsuarioTI/src
//*
//* Tipo: Pro*C
//*
//* Autor: Jefferson Martins
//*
//* Fecha primeira version:11/11/2004
//*
//* Version actual: 01.00
//*
//* Purpose:
//*//-------------------------------------------------------------------------------
//* Purpose:
//*
//* Servico para montar o XML de retorno do frame de usuario da Tela Inicial.
//*
//* Review:
//*
//* Task force to seek potential memory leaks and exception errors - March,2005 - Cassio
//*
//*//-------------------------------------------------------------------------------
//---------------------------------------------------------------------

//EXEC SQL INCLUDE SQLCA;

#include "../../negocio/clienteCmm/include/Exception.h"
#include "../../negocio/clienteCmm/include/Messages.h"
#include "../../negocio/clienteCmm/include/Funcoes.h"

#include <tuxfw.h>
#include "../../negocio/clienteCmm/include/Exception.h"

#include "../include/DadUsuarioTI.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "Global.h"
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE "../../negocio/clienteCmm/include/classUsuario.h";
EXEC SQL INCLUDE "../../negocio/clienteCmm/include/classPessoaLinha.h";

DECLARE_TUXEDO_SERVICE(DADUSUARIOTI);

void implDADUSUARIOTI::Execute(DOMNode *pDnode, XMLGen *pXmlG)
{
char* pParam1=0;

CUsuario oUsuario;
CPessoaLinha oPessLinha;

    ULOG_START( "implDADUSUARIOTI::Execute()" );
    
    try{
        pParam1 = walkTree(pDnode, "nrLinha", 0);
        if(!pParam1){
            ERROR(NRO_NR_LINHA_NE);
            TAG_INEXISTENTE("nrLinha");
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }
        if (!*pParam1){
            ERROR(NRO_NR_LINHA_VV);
            TAG_VALOR_VAZIO("nrLinha");
            XMLString::release(&pParam1);
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }
        if ( !IsNumeric(pParam1) ){
            ERROR(NRO_NR_LINHA_VI);
            TAG_VALOR_INVALIDO("nrLinha");
            XMLString::release(&pParam1);
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }

        pXmlG->createTag("UsuarioLinhaVO");
        pXmlG->addProp("xmlns", "cliente.fo.vivo.com.br/vo");
            if ( oUsuario.buscarDadosTIPorNrLinha(pParam1) == OK ){
                pXmlG->addItem("idPessoa"       , oUsuario.getIdPessoa());
                pXmlG->addItem("nmUsuario"      , oUsuario.getNmPessoa());
                pXmlG->addItem("idDocumento"    , oUsuario.getIdDocumento());
                pXmlG->addItem("dsTipoDocumento", oUsuario.getSgTipoDocumento());
                pXmlG->addItem("nrDocumento"    , oUsuario.getNrDocumento());
                pXmlG->addItem("dsTipoContato"  , oUsuario.getDsTipoComunicacao());
                pXmlG->addItem("nrContato"      , oUsuario.getDsContato());
                pXmlG->addItem("vlRentabilidade", oUsuario.getVlRentabilidade());
                pXmlG->addItem("dsCargo"        , oUsuario.getDsCargoContato());
                pXmlG->addItem("qtdLinhasAtivas", oPessLinha.obterQtdDeLinhaAtivaPorIdPessoa(oUsuario.getIdPessoa()));
                pXmlG->addItem("qtdLinhas"      , oPessLinha.obterQtdDeLinhaPorIdPessoa(oUsuario.getIdPessoa()));
            }
        pXmlG->closeTag();  // fecha a tag principal
    }
    catch(...){
        if ( pParam1 ) XMLString::release(&pParam1);
        throw;  //repassando o erro para nucleo
    }

    XMLString::release(&pParam1);

	// Execução OK.
	INFORMATION(NRO_OK);

    ULOG_END( "implDADUSUARIOTI::Execute()" );
	setStatusCode(sNrMsg, MSG_OK);
}



