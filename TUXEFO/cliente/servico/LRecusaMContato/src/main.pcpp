//------------------------------------------------------------------------------------
  //                           (c) Consorcio Indra/PT-SI.
  //                              xxxxxxxxxxxxxxxxxxxxxxx
  //                                  xxxxxxxxxxxxxx 
  //----------------------------------------------------------------------------------
  // Los contenidos de este fichero son propiedad de Telefonica Consorsio Indra/Pt-SI.
  // titular del copyright. Este fichero solo podra ser copiado, distribuido y utilizado,
  // em su totalidad o en parte, con el permiso escrito de Consorcio Indra/Pt-SI o de
  // acuerdo com los terminos y condiciones establecidas em el acuerdo/contrato bajo el
  // que se suministra.
//----------------------------------------------------------------------------------
//* Modulo: main.pcpp
//* Servico: LRecusaMContato
//* Servidor: admPermissao
//*
//* Ficheiro: TUXEFO/cliente/admPermissao/LRecusaMContato/src
//*
//* Tipo: Pro*C
//*
//* Autor: Jefferson da S. Martins
//*
//* Fecha primeira version:25/06/2004
//*
//* Version actual: 01.00
//*
//* Purpose:
//*//-------------------------------------------------------------------------------
//* Purpose:
//*
//* Servico para listar todas as linhas da tabela PessoaRecusaMeioContato.
//*
//*//-------------------------------------------------------------------------------
//*  ALTERACAO  DESCRICAO
//*    01.00    Alteracao do nome do servico internamente a pedido da equipe
//*             de Suporte Tecnologico. 30/08/2004
//---------------------------------------------------------------------

//EXEC SQL INCLUDE SQLCA; 

#include "../../negocio/clienteCmm/include/Messages.h"
#include <tuxfw.h>
#include "../../negocio/clienteCmm/include/Exception.h"

#include "../include/LRecusaMContato.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "Global.h"
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE "../../negocio/clienteCmm/include/classPessoaRecusaMeioContato.h";

DECLARE_TUXEDO_SERVICE(LRECUSAMCONTA);

void implLRECUSAMCONTA::Execute(DOMNode *pDnode, XMLGen *pXmlG)
{
    char* pParam;
    int iNroReg = 0;
    int iAux = 0;
    int iSubno = 0;
    int iObjCorr = 0;
    CPessoaRecusaMeioContato* oPRMC;

    ULOG_START( "implLRECUSAMCONTA::Execute()" );
    try{
         pParam = walkTree(pDnode, XML_ID, 0);
         if(!pParam)
         {
             ERROR(NRO_ID_PESSOA_NE);
             TAG_INEXISTENTE(XML_ID);
             throw new TuxBasicSvcException(sNrMsg, sMsg);
         }

         if (!*pParam)
         {
             ERROR(NRO_ID_PESSOA_NE);
             TAG_VALOR_VAZIO(XML_ID);
             throw new TuxBasicSvcException(sNrMsg, sMsg);
         }
         //

         oPRMC = CPessoaRecusaMeioContato::RecuperarPorIdPessoa(&iNroReg, pParam);

         pXmlG->createTag(XML_ROOT);
         pXmlG->addProp("xmlns", XML_PROP);
             for (; iAux < iNroReg; iAux++) 
             {
                 pXmlG->createTag(XML_NO);
                     pXmlG->addItem(XML_IDMC, oPRMC[iAux].getIdMeioContato());
                     pXmlG->addItem(XML_DSMC, oPRMC[iAux].getDescricao());
                 pXmlG->closeTag();
             }
         pXmlG->closeTag();
    
         if (oPRMC)
            free(oPRMC);
    }catch(...){
        throw;
    }

    ULOG_END( "implLRECUSAMCONTA::Execute()" );

    // Execução OK.
    INFORMATION(NRO_OK);
    setStatusCode(sNrMsg, MSG_OK);
}
