/*
 * Serviço de cadastro básico de status de correspondencia - inicial
 * Versão inicial, 16/06/2004
 */

//EXEC SQL INCLUDE SQLCA;
EXEC SQL INCLUDE "../../negocio/clienteCmm/include/Unidade.h";

#include "../include/StatCorrIncIni.h"
#include "../../negocio/clienteCmm/include/Funcoes.h"
#include "../../negocio/clienteCmm/include/Messages.h"
#include <tuxfw.h>

DECLARE_TUXEDO_SERVICE(StatCorrIncIni);

void implStatCorrIncIni::Execute(DOMNode* dnode, XMLGen* xml_g) {

    CUnidade* poUnidade;
    int nroReg = 0;
    int iAux = 0;
    
    ULOG_START( "implStatCorrIncIni::Execute()" );
    // Consulta o objeto no banco de dados
    poUnidade = CUnidade::lista(&nroReg);

    // Monta o XML de saída
    xml_g->createTag(XML_OUT_ROOT);
    xml_g->addProp(XML_OUT_PROP_XMLNS, XML_OUT_PROP_XMLNS_VALUE);
    for (; iAux < nroReg; iAux++) {
        xml_g->createTag(XML_OUT_UNIDADE_DISP);
        xml_g->addItem(XML_OUT_ID_UNIDADE, poUnidade[iAux].getIdUnidade());
        xml_g->addItem(XML_OUT_NM_UNIDADE, rtrim(poUnidade[iAux].getNmUnidade()));
        xml_g->closeTag();
    }
    xml_g->closeTag();

    // Libera a memória
    free(poUnidade);

    ULOG_END( "implStatCorrIncIni::Execute()" );

    // Execução OK.
    INFORMATION(NRO_OK);
    setStatusCode(sNrMsg, MSG_OK);
}