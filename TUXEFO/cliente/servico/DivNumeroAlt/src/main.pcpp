//------------------------------------------------------------------------------------
  //                           (c) Consorcio Indra/PT-SI.
  //                              xxxxxxxxxxxxxxxxxxxxxxx
  //                                  xxxxxxxxxxxxxx 
  //----------------------------------------------------------------------------------
  // Los contenidos de este fichero son propiedad de Telefonica Consorsio Indra/Pt-SI.
  // titular del copyright. Este fichero solo podra ser copiado, distribuido y utilizado,
  // em su totalidad o en parte, con el permiso escrito de Consorcio Indra/Pt-SI o de
  // acuerdo com los terminos y condiciones establecidas em el acuerdo/contrato bajo el
  // que se suministra.
//----------------------------------------------------------------------------------
//* Modulo: main.pcpp
//* Servico: DivNumeroAlt
//* Servidor: LupaCliente
//*
//* Ficheiro: TUXEFO/cliente/LupaLinha/DivNumeroAlt/src
//*
//* Tipo: Pro*C
//*
//* Autor: Jefferson Martins
//*
//* Fecha primeira version:24/06/2004
//*
//* Version actual: 01.00
//*
//* Purpose:
//*//-------------------------------------------------------------------------------
//* Purpose:
//*
//* Servico para alterar o valor do campo inDivulgaNrLinha da tabela LinhaTelefonica
//*
//* Review:
//*
//* Task force to seek potential memory leaks and exception errors - March,2005 - Cassio
//*
//*//-------------------------------------------------------------------------------
//---------------------------------------------------------------------

//EXEC SQL INCLUDE SQLCA; 

#include "../../negocio/clienteCmm/include/Messages.h"
#include <tuxfw.h>
#include "../../negocio/clienteCmm/include/Exception.h"
#include "../../negocio/clienteCmm/include/Funcoes.h"

#include "../include/DivNumeroAlt.h"

EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL INCLUDE "Global.h";
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE "../../negocio/clienteCmm/include/classLinhaTelefonica.h";

DECLARE_TUXEDO_SERVICE(DivNumeroAlt);

void implDivNumeroAlt::Execute(DOMNode *pDnode, XMLGen *pXmlG)
{
char* pParam1=0;
char* pParam2=0;

CLinhaTelefonica oLT;

    ULOG_START( "implDivNumeroAlt::Execute()" );
    
    try{
        pParam1 = walkTree(pDnode, XML_IDLINHA, 0);
        if(!pParam1)
        {
            ERROR(NRO_ID_LINHA_NE);
            TAG_INEXISTENTE(XML_IDLINHA);
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }
        if ( !*pParam1)
        {
            ERROR(NRO_ID_LINHA_VV);
            TAG_VALOR_VAZIO(XML_IDLINHA);
            if (pParam1) XMLString::release(&pParam1);
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }
        if ( !IsNumeric(pParam1) ){
            ERROR(NRO_ID_LINHA_VI);
            TAG_VALOR_INVALIDO(XML_IDLINHA);
            if (pParam1) XMLString::release(&pParam1);
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }
        oLT.setIdLinhaTelefonica(pParam1);
        XMLString::release(&pParam1);
        pParam1 = 0;

        //
        pParam2 = walkTree(pDnode, XML_DIVNUM, 0);
        if(!pParam2)
        {
            ERROR(NRO_IN_DIVULGA_NUM_NE);
            TAG_INEXISTENTE(XML_DIVNUM);
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }
        if ( !*pParam2)
        {
            ERROR(NRO_IN_DIVULGA_NUM_VV);
            TAG_VALOR_VAZIO(XML_DIVNUM);
            if (pParam2) XMLString::release(&pParam2);
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }
        if ( !IsNumeric(pParam2) ){
            ERROR(NRO_IN_DIVULGA_NUM_VI);
            TAG_VALOR_INVALIDO(XML_IDLINHA);
            if (pParam2) XMLString::release(&pParam2);
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }
        oLT.setInDivulgacaoNrLinha(pParam2);
        XMLString::release(&pParam2);
        pParam2 = 0;

        //

	    // Guarda o usuario que esta executando esse servico
	    oLT.setUsuarioAlteracao(getUser());

        if ( oLT.Alterar() == NOK)
        {
            ERROR(NRO_UPDATE_NAO_EFETUADO);
            throw new TuxBasicSvcException(sNrMsg, MSG_UPDATE_NAO_EFETUADO);
        }
    }
    catch(...){
        if ( pParam1 ) XMLString::release(&pParam1);
        if ( pParam2 ) XMLString::release(&pParam2);
        throw;  //repassando o erro para nucleo
    }

	// Execução OK.
	INFORMATION(NRO_OK);

    ULOG_END( "implDivNumeroAlt::Execute()" );
	setStatusCode(sNrMsg, MSG_OK);
}



