//------------------------------------------------------------------------------------
  //                           (c) Consorcio Indra/PT-SI.
  //                              xxxxxxxxxxxxxxxxxxxxxxx
  //                                  xxxxxxxxxxxxxx 
  //----------------------------------------------------------------------------------
  // Los contenidos de este fichero son propiedad de Telefonica Consorsio Indra/Pt-SI.
  // titular del copyright. Este fichero solo podra ser copiado, distribuido y utilizado,
  // em su totalidad o en parte, con el permiso escrito de Consorcio Indra/Pt-SI o de
  // acuerdo com los terminos y condiciones establecidas em el acuerdo/contrato bajo el
  // que se suministra.
//----------------------------------------------------------------------------------
//* Fonte: main.pcpp
//* Servico: EAssunto
//* Servidor: admAssunto
//*
//* Ficheiro: TUXEFO/cliente/admAssunto/EAssunto/src
//*
//* Tipo: Pro*C
//*
//* Autor: Jefferson da S. Martins
//*
//* Fecha primeira version:01/05/2004
//*
//* Version actual: 01.00
//*
//* Purpose:
//*//-------------------------------------------------------------------------------
//* Purpose:
//*
//* 
//*
//*//-------------------------------------------------------------------------------
//---------------------------------------------------------------------
//EXEC SQL INCLUDE SQLCA; 

#include "../../negocio/clienteCmm/include/Messages.h"
#include <tuxfw.h>
#include "../../negocio/clienteCmm/include/Exception.h"

#include "../include/EAssunto.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "Global.h"
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE "../../negocio/clienteCmm/include/classCstAssunto.h";

DECLARE_TUXEDO_SERVICE(EAssunto);

void implEAssunto::Execute(DOMNode *pDnode, XMLGen *pXmlG)
{
CCstAssunto oAssunto;
char* pParam;

    ULOG_START( "implEAssunto::Execute()" );

    pParam = walkTree(pDnode, XML_IDASS, 0);
    if(!pParam)
    {
        ERROR(NRO_ID_ASSUNTO_NR_NE);
        TAG_INEXISTENTE(XML_IDASS);
        throw new TuxBasicSvcException(sNrMsg, sMsg);
    }
    if ( !*pParam)
    {
        ERROR(NRO_ID_ASSUNTO_NR_NE);
        TAG_VALOR_VAZIO(XML_IDASS);
		XMLString::release(&pParam);
        throw new TuxBasicSvcException(sNrMsg, sMsg);
    }
    oAssunto.setIdAssunto(pParam);
    XMLString::release(&pParam);

    //
    
    oAssunto.Excluir();

	// Execução OK.
	INFORMATION(NRO_OK);

    ULOG_END( "implEAssunto::Execute()" );
	setStatusCode(sNrMsg, MSG_OK);

}



