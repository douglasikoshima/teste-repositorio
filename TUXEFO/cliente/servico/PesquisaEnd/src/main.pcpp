//------------------------------------------------------------------------------------
  //                           (c) Consorcio Indra/PT-SI.
  //                              xxxxxxxxxxxxxxxxxxxxxxx
  //                                  xxxxxxxxxxxxxx 
  //----------------------------------------------------------------------------------
  // Los contenidos de este fichero son propiedad de Telefonica Consorsio Indra/Pt-SI.
  // titular del copyright. Este fichero solo podra ser copiado, distribuido y utilizado,
  // em su totalidad o en parte, con el permiso escrito de Consorcio Indra/Pt-SI o de
  // acuerdo com los terminos y condiciones establecidas em el acuerdo/contrato bajo el
  // que se suministra.
//----------------------------------------------------------------------------------
//* Fonte: main.pcpp
//* Servico: PesquisaEnd
//* Servidor: PesquisaEndereco
//*
//* Ficheiro: TUXEFO/cliente/PesquisaEndereco/PesquisaEnd/src
//*
//* Tipo: Pro*C
//*
//* Autor: Jefferson da S. Martins
//*
//* Fecha primeira version:31/08/2004
//*
//* Version actual: 01.00
//*
//* Purpose:
//*//-------------------------------------------------------------------------------
//* Purpose:
//*
//* Servico para recuperar a partir de um filtro os enderecos.
//*
//*//-------------------------------------------------------------------------------
//---------------------------------------------------------------------
//EXEC SQL INCLUDE SQLCA;

#include "../../negocio/clienteCmm/include/Messages.h"
#include <tuxfw.h>
#include "../../negocio/clienteCmm/include/Funcoes.h"

#include "../include/PesqEndereco.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "Global.h"
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE "../../negocio/clienteCmm/include/RelCepLogradBairro.h";

DECLARE_TUXEDO_SERVICE(PESQUISAEND);

void implPESQUISAEND::Execute(DOMNode *pDnode, XMLGen *pXmlG)
{
    int iNroReg = 0;
    int iAux = 0;
    char *pParam;
    
    CRelCepLogradBairro poEnd;

    ULOG_START( "implPESQUISAEND::Execute()" );
    try{

        pParam = walkTree(pDnode, XML_IN_IDENDERECO, 0);
        if(!pParam)
        {
            ERROR(NRO_ID_ENDERECO_NE);
            TAG_INEXISTENTE(XML_IN_IDENDERECO);
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }
        if ( !*pParam)
        {
            ERROR(NRO_ID_ENDERECO_VV);
            TAG_VALOR_VAZIO(XML_IN_IDENDERECO);
            XMLString::release(&pParam);    
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }
        if ( !IsNumeric(pParam) ){
            ERROR(NRO_ID_ENDERECO_VI);
            TAG_VALOR_INVALIDO(XML_IN_IDENDERECO);
            XMLString::release(&pParam);    
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }

        //poEnd.RecuperarPorIdRel(pParam);
        
        XMLString::release(&pParam);    

        pXmlG->createTag("EnderecoVO");
        pXmlG->addProp("xmlns", XML_OUT_PROP);
            pXmlG->addItem("idEndereco", poEnd.getIdRelCepLogradBairro());

            pXmlG->createTag("TipoEnderecoVO");
            pXmlG->closeTag();

            pXmlG->addItem("nmTipoLogradouro", poEnd.getDscTipoLograd());
            pXmlG->addItem("nmTituloLogradouro", poEnd.getDscTituloLograd());
            pXmlG->addItem("nmLogradouro", poEnd.getNomLogradouro());
            pXmlG->addItem("nmBairro", poEnd.getNomBairro());
            pXmlG->addItem("nmMunicipio", poEnd.getDscLocalidade());
            pXmlG->addItem("nrEndereco", "");
            pXmlG->addItem("dsEnderecoComplemento", "");
            pXmlG->addItem("nrCEP", poEnd.getNumCEP());

            pXmlG->createTag("UFVO");
                pXmlG->addItem("idUF", poEnd.getCodUF());
                pXmlG->addItem("sgUF", poEnd.getSglUF());
                pXmlG->addItem("nmUF", poEnd.getNomUF());
            pXmlG->closeTag();

            pXmlG->createTag("PaisVO");
                pXmlG->addItem("idPais", poEnd.getCodPais());
                pXmlG->addItem("sgPais", poEnd.getSglIsoPais());
                pXmlG->addItem("nmPais", poEnd.getNomPais());
                /*pXmlG->addItem("dsNacionalidade", poEnd.getDsNacionalidade());*/
            pXmlG->closeTag();

        pXmlG->closeTag();
    }
    catch(...){
        throw;  //repassando o erro para nucleo
    }

    ULOG_END( "implPESQUISAEND::Execute()" );

    // Execução OK.
    INFORMATION(NRO_OK);
    setStatusCode(sNrMsg, MSG_OK);
}
