/*
 * Serviço de cadastro básico de tipo de correspondencia
 * Versão inicial, 19/05/2004
 */

EXEC SQL INCLUDE SQLCA;
EXEC SQL INCLUDE "../../negocio/clienteCmm/include/TipoCorrespondencia.h";

#include "../include/TipoCorrespondenciaConsulta.h"
#include "../../negocio/clienteCmm/include/Funcoes.h"
#include "../../negocio/clienteCmm/include/Messages.h"
#include <tuxfw.h>

DECLARE_TUXEDO_SERVICE(TipoCorrList);

void implTipoCorrList::Execute(DOMNode* dnode, XMLGen* xml_g) {

    CTipoCorrespondencia* poTpoCorr;
    int nroReg = 0;
    int iAux = 0;

    ULOG_START( "implTipoCorrList::Execute()" );
    try{
         // Consulta o objeto no banco de dados
         poTpoCorr = CTipoCorrespondencia::lista(&nroReg);

         // Monta o XML de saída
         xml_g->createTag(XML_OUT_ROOT);
         xml_g->addProp(XML_OUT_PROP_XMLNS, XML_OUT_PROP_XMLNS_VALUE);
         for (; iAux < nroReg; iAux++) {
             xml_g->createTag(XML_OUT_TIPO_OBJETO);
             xml_g->addItem(XML_OUT_ID_TIPO, poTpoCorr[iAux].getIdTipoCorrespondencia());
             xml_g->addItem(XML_OUT_SG_TIPO, rtrim(poTpoCorr[iAux].getSgTipoCorrespondencia()));
             xml_g->addItem(XML_OUT_DS_TIPO, rtrim(poTpoCorr[iAux].getDsTipoCorrespondencia()));
             xml_g->addItem(XML_OUT_IN_DISP, poTpoCorr[iAux].getInDisponibilidade());
             xml_g->closeTag();
         }
         xml_g->closeTag();

         // Libera a memória
         free(poTpoCorr);
    }catch(...){
        throw;
    }

    ULOG_END( "implTipoCorrList::Execute()" );

    // Execução OK.
    INFORMATION(NRO_OK);
    setStatusCode(sNrMsg, MSG_OK);
}

