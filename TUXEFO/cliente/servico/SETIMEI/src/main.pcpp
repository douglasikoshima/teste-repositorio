#undef SQLCA
#define SQLCA_NONE
#include <sqlca.h>
#include <sqlda.h>

#include <tuxfw.h>
#include "../../negocio/clienteCmm/include/Messages.h"
#include "../../negocio/clienteCmm/include/Funcoes.h"
#include "../../negocio/clienteCmm/include/LogIMEI.h"

#include "../include/SETIMEI.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "Global.h"
EXEC SQL END DECLARE SECTION;

DECLARE_TUXEDO_SERVICE(SETIMEI);

void implSETIMEI::Execute(DOMNode *pDnode, XMLGen *pXmlG)
{
    char *pPointer = NULL;
    int iFlagErro=0;
    char szAux[512 + 1];

    LogIMEI *pclLogIMEI=NULL;

    ULOG_START("implSETIMEI::Execute");

    try
    {
        pclLogIMEI = new LogIMEI;

        /* Referente a idLinhaTelefonica */
        pPointer = walkTree(pDnode, "idLinhaTelefonica", 0); ULOG("idLinhaTelefonica[%s]", pPointer?pPointer:"..NULL..");
        pclLogIMEI->setIdLinhaTelefonica(pPointer?pPointer:"");
        if(!pPointer) {
            ERROR(NRO_IDLINHATELEFONICA_NE); TAG_INEXISTENTE("idLinhaTelefonica"); iFlagErro=1;
        }
        else if(!*pPointer) {
            ERROR(NRO_IDLINHATELEFONICA_VV); TAG_VALOR_VAZIO("idLinhaTelefonica"); iFlagErro=1;
        }
        else if(!IsNumeric(pPointer)){
            ERROR(NRO_IDLINHATELEFONICA_VI); TAG_VALOR_INVALIDO("idLinhaTelefonica"); iFlagErro=1;
        }
        if(pPointer) XMLString::release(&pPointer);
        if(iFlagErro) {
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }

        /* Referente a dsMarca */
        pPointer = walkTree(pDnode, "dsMarca", 0); ULOG("dsMarca[%s]", pPointer?pPointer:"..NULL..");
        pclLogIMEI->setDsMarca(pPointer?pPointer:"");
        if(!pPointer) {
            ERROR(NRO_DS_MARCA_NE); TAG_INEXISTENTE("dsMarca"); iFlagErro=1;
        }
        else if(!*pPointer) {
            ERROR(NRO_DS_MARCA_VV); TAG_VALOR_VAZIO("dsMarca"); iFlagErro=1;
        }
        if(pPointer) XMLString::release(&pPointer);
        if(iFlagErro) {
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }

        /* Referente a dsModelo */
        pPointer = walkTree(pDnode, "dsModelo", 0); ULOG("dsModelo[%s]", pPointer?pPointer:"..NULL..");
        pclLogIMEI->setDsModelo(pPointer?pPointer:"");
        if(!pPointer) {
            ERROR(NRO_DS_MODELO_NE); TAG_INEXISTENTE("dsModelo"); iFlagErro=1;
        }
        else if(!*pPointer) {
            ERROR(NRO_DS_MODELO_VV); TAG_VALOR_VAZIO("dsModelo"); iFlagErro=1;
        }
        if(pPointer) XMLString::release(&pPointer);
        if(iFlagErro) {
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }

        /* Referente a IMEI */
        pPointer = walkTree(pDnode, "IMEI", 0); ULOG("IMEI[%s]", pPointer?pPointer:"..NULL..");
        pclLogIMEI->setIMEI(pPointer?pPointer:"");
        if(!pPointer) {
            ERROR(NRO_NR_IMEI_NE); TAG_INEXISTENTE("IMEI"); iFlagErro=1;
        }
        else if(!*pPointer) {
            ERROR(NRO_NR_IMEI_VV); TAG_VALOR_VAZIO("IMEI"); iFlagErro=1;
        }
        if(pPointer) XMLString::release(&pPointer);
        if(iFlagErro) {
            throw new TuxBasicSvcException(sNrMsg, sMsg);
        }

        /* Referente a NrProtocolo */
        pPointer = walkTree(pDnode, "nrProtocolo", 0); ULOG("nrProtocolo[%s]", pPointer?pPointer:"..NULL..");
        pclLogIMEI->setNrProtocolo(pPointer?pPointer:"");

        /* Referente a NmLoja */
        pPointer = walkTree(pDnode, "nmLoja", 0); ULOG("nmLoja[%s]", pPointer?pPointer:"..NULL..");
        pclLogIMEI->setNmLoja(pPointer?pPointer:"");

        /* referente a idUsuarioAlteracao */
        pclLogIMEI->setIdUsuarioAlteracao(getUser());


        /* grava log */
        ULOG("Inicio LogIMEI");
        pclLogIMEI->insereLogIMEI();
        ULOG("Final LogIMEI");

    }
    catch(...)
    {
        ULOG("Exception!");
        if(pclLogIMEI) delete pclLogIMEI;
        ULOG_END("implSETIMEI::Execute");
        throw;
    }

    ULOG("Normal");
    if(pclLogIMEI) delete pclLogIMEI;
    ULOG_END("implSETIMEI::Execute");

	INFORMATION(NRO_OK);
	setStatusCode(sNrMsg, MSG_OK);
}
