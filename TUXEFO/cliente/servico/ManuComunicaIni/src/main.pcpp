//------------------------------------------------------------------------------------
  //                           (c) Consorcio Indra/PT-SI.
  //                              xxxxxxxxxxxxxxxxxxxxxxx
  //                                  xxxxxxxxxxxxxx 
  //----------------------------------------------------------------------------------
  // Los contenidos de este fichero son propiedad de Telefonica Consorsio Indra/Pt-SI.
  // titular del copyright. Este fichero solo podra ser copiado, distribuido y utilizado,
  // em su totalidad o en parte, con el permiso escrito de Consorcio Indra/Pt-SI o de
  // acuerdo com los terminos y condiciones establecidas em el acuerdo/contrato bajo el
  // que se suministra.
//----------------------------------------------------------------------------------
//* Fonte   : main.cpp
//* Servico : ManuComunicaIni
//* Servidor: LupaCliente
//*
//* Ficheiro: TUXEFO/cliente/LupaCliente/ManuComunicaIni/src
//*
//* Tipo: Pro*C
//*
//* Autor: Jefferson Martins
//*
//* Fecha primeira version:13/06/2004
//*
//* Version actual: 01.00
//*
//* Purpose:
//*//-------------------------------------------------------------------------------
//* Purpose:
//*
//* Monta XML de retorno com conteudo de TipoComunicacao
//* 
//* Review:
//*
//* Task force to seek potential memory leaks and exception errors - March,2005 - Cassio
//* 
//*//-------------------------------------------------------------------------------
//*  ALTERACAO  DESCRICAO
//*    01.00    Alteracao do nome do servico internamente a pedido da equipe
//*             de Suporte Tecnologico. 30/08/2004
//* 
//*    01.01    Task force to seek potential memory leaks and exception 
//*             errors - March 03,2005 - Cassio
//---------------------------------------------------------------------

//EXEC SQL INCLUDE SQLCA;

#include "../../negocio/clienteCmm/include/Messages.h"
#include "../../negocio/clienteCmm/include/Funcoes.h"
#include <tuxfw.h>

#include "../include/ManuComunicaIni.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "Global.h"
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE "../../negocio/clienteCmm/include/TipoComunicacao.h";

DECLARE_TUXEDO_SERVICE(MANUCOMUNICAI);

void implMANUCOMUNICAI::Execute(DOMNode *pDnode, XMLGen *pXmlG)
{
    int iNroReg=0;
    int iAux;
    CTipoComunicacao* poTpComunica=0;
    
    ULOG_START( "implMANUCOMUNICAI::Execute()" );
    try{
        pXmlG->createTag(XML_OUT_NO_ROOT);
        pXmlG->addProp("xmlns", XML_OUT_PROP);

        poTpComunica = CTipoComunicacao::lista(&iNroReg);
        for (iAux=0; iAux < iNroReg; iAux++) 
        {
            pXmlG->createTag(XML_OUT_NO_TPENDERECO);
                pXmlG->addItem(XML_OUT_IDTIPOCOMUNICACAO, poTpComunica[iAux].getIdTipoComunicacao());
                pXmlG->addItem(XML_OUT_SGTIPOCOMUNICACAO, rtrim(poTpComunica[iAux].getSgTipoComunicacao()));
                pXmlG->addItem(XML_OUT_DSTIPOCOMUNICACAO, rtrim(poTpComunica[iAux].getDsTipoComunicacao()));
            pXmlG->closeTag();
        }

        pXmlG->closeTag();

        //Liberando memoria alocada
        free(poTpComunica);
    }
    catch(...){
        if ( poTpComunica ) free(poTpComunica);
        throw;  //repassando o erro para nucleo
    }

    ULOG_END( "implMANUCOMUNICAI::Execute()" );
    
    // Execução OK.
    INFORMATION(NRO_OK);
    setStatusCode(sNrMsg, MSG_OK);
}
