/*
 * Serviço de cadastro básico de motivo de devolução de correspondencia
 * Versão inicial, 19/05/2004
 */

//EXEC SQL INCLUDE SQLCA;

EXEC SQL INCLUDE "../../negocio/clienteCmm/include/MotivoDevolucao.h";

#include "../include/MotivoDevolucaoExclui.h"
#include "../../negocio/clienteCmm/include/Messages.h"
#include <tuxfw.h>

DECLARE_TUXEDO_SERVICE(MotDevExc);

void implMotDevExc::Execute(DOMNode* dnode, XMLGen* xml_g) {

    CMotivoDevolucao oMotDev;
    char* pcIdMotDev;
    int iIdMotDev;

    ULOG_START( "implMotDevExc::Execute()" );

    // Navega o XML e recupera as informacoes obrigatorias
    pcIdMotDev = walkTree(dnode, XML_IN_ID_TIPO, 0);
    if (pcIdMotDev == NULL) {
        ERROR(NRO_MOT_DEV_ID_NE);
        TAG_INEXISTENTE(XML_IN_ID_TIPO);
        throw new TuxBasicSvcException(sNrMsg, sMsg);
    }
    if (!*pcIdMotDev) {
        ERROR(NRO_MOT_DEV_ID_VV);
        TAG_VALOR_VAZIO(XML_IN_ID_TIPO);
        XMLString::release(&pcIdMotDev);    
        throw new TuxBasicSvcException(sNrMsg, sMsg);
    }
    if ((iIdMotDev = atoi(pcIdMotDev)) <= 0) {
        ERROR(NRO_MOT_DEV_ID_VI);
        TAG_VALOR_INVALIDO(XML_IN_ID_TIPO);
        XMLString::release(&pcIdMotDev);    
        throw new TuxBasicSvcException(sNrMsg, sMsg);
    }
    
    // Monta o objeto de MotivoDevolucao
    oMotDev.setIdMotivoDevolucao(iIdMotDev);

    XMLString::release(&pcIdMotDev);    

    // Exclui o objeto no banco de dados
    if (oMotDev.checaExclusaoPossivel())
        xml_g->addItem(XML_OUT_MENSAGEM, XML_VAL_REMOCAO_NOK);
    else
        oMotDev.exclui();

    ULOG_END( "implMotDevExc::Execute()" );

    // Execução OK.
    INFORMATION(NRO_OK);
    setStatusCode(sNrMsg, MSG_OK);
}

