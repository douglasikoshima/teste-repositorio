///////////////////////////////////////////////////////////////////////////////
/**
 * @modulo  Sincronismo
 * @usecase LinhaConta
 * @author  Renato Striitzel Russo
 * @author  Carlos Eduardo Barbosa Braga
 * @version $Revision: 1.1 $
 * @CVS     $Author: a5110702 $ - $Date: 2009/07/31 15:33:17 $
 **/
///////////////////////////////////////////////////////////////////////////////

#undef SQLCA
#define SQLCA_NONE
#include <sqlca.h>
#include <sqlda.h>

#include <tuxfw.h>
#include "../include/Exception.h"
#include "../include/LinhaContapc.h"

EXEC SQL BEGIN	DECLARE SECTION;
#include "../include/Global.h"
EXEC SQL END	DECLARE SECTION;

/****************************************************************************************/
void CLinhaContapc::proCInsereLinhaConta(TLinhaConta *ptLinhaConta)
{
    ULOG_START("CLinhaContapc::proCInsereLinhaConta()");
    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdLinhaConta[LEN_IDLINHACONTA];
        VARCHAR oszIdLinhaTelefonica[LEN_IDLINHATELEFONICA];
        VARCHAR oszIdConta[LEN_IDCONTA];
        VARCHAR oszIdTipoRelacionamento[LEN_IDTIPORELACIONAMENTO];
        VARCHAR oszDtLinhaConta[LEN_DTLINHACONTA];
        VARCHAR oszInLinhaMaster[LEN_INLINHAMASTER];
        VARCHAR oszTsSincronismo[LEN_TSSINCRONISMO];
        VARCHAR oszSqSincronismo[LEN_SQSINCRONISMO];
//        VARCHAR oszDtExpiracao[LEN_DTEXPIRACAO];
        VARCHAR oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAO];
//        VARCHAR oszDtUltimaAlteracao[LEN_DTULTIMAALTERACAO];
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    

    /* copia os valores passados como parametro para as variaveis pro-c */
//    STRCPY_TO_ORA(oszIdLinhaConta, ptLinhaConta->szIdLinhaConta);
    STRCPY_TO_ORA(oszIdLinhaTelefonica, ptLinhaConta->szIdLinhaTelefonica);
    STRCPY_TO_ORA(oszIdConta, ptLinhaConta->szIdConta);
    STRCPY_TO_ORA(oszIdTipoRelacionamento, ptLinhaConta->szIdTipoRelacionamento);
    STRCPY_TO_ORA(oszDtLinhaConta, ptLinhaConta->szDtLinhaConta);
    STRCPY_TO_ORA(oszInLinhaMaster, ptLinhaConta->szInLinhaMaster);
    STRCPY_TO_ORA(oszTsSincronismo, ptLinhaConta->szTsSincronismo);
    STRCPY_TO_ORA(oszSqSincronismo, ptLinhaConta->szSqSincronismo);
//    STRCPY_TO_ORA(oszDtExpiracao, ptLinhaConta->szDtExpiracao);
    STRCPY_TO_ORA(oszIdUsuarioAlteracao, ID_USUARIO_ALTERACAO);
//    STRCPY_TO_ORA(oszDtUltimaAlteracao, ptLinhaConta->szDtUltimaAlteracao);

    EXEC SQL WHENEVER SQLERROR goto erro;

	EXEC SQL SELECT to_char(Customer.LinhaContaSq.Nextval) INTO :oszIdLinhaConta FROM dual;

    /* copia o valor da sequence para o ponteiro passado como parametro */
    STRCPY_FROM_ORA(ptLinhaConta->szIdLinhaConta, oszIdLinhaConta);

	EXEC SQL INSERT INTO Customer.LinhaConta
    (
        idlinhaconta,
        idlinhatelefonica,
        idconta,
        idtiporelacionamento,
        dtlinhaconta,
        inlinhamaster,
        tssincronismo,
        sqsincronismo,
        dtexpiracao,
        idusuarioalteracao,
        dtultimaalteracao
    )
	VALUES
    (
        to_number(:oszIdLinhaConta),
        to_number(:oszIdLinhaTelefonica),
        to_number(:oszIdConta),
        to_number(:oszIdTipoRelacionamento),
        SYSDATE,
        to_number(:oszInLinhaMaster),
        to_number(:oszTsSincronismo),
        to_number(:oszSqSincronismo),
        NULL,
        to_number(:oszIdUsuarioAlteracao),
        SYSDATE
    );

    ULOG_END("CLinhaContapc::proCInsereLinhaConta()");
    return;

	erro:
	    ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
        ULOG_END("CLinhaContapc::proCInsereLinhaConta()");
		throw TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

/****************************************************************************************/
bool CLinhaContapc::proCBuscaLinhaConta(TLinhaConta *ptLinhaConta)
{
    ULOG_START("CLinhaContapc::proCBuscaLinhaConta()");
    
    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdLinhaConta[LEN_IDLINHACONTA];
        VARCHAR oszIdLinhaTelefonica[LEN_IDLINHATELEFONICA];
        VARCHAR oszIdConta[LEN_IDCONTA];
        VARCHAR oszIdTipoRelacionamento[LEN_IDTIPORELACIONAMENTO];
        VARCHAR oszDtLinhaConta[LEN_DTLINHACONTA];
        VARCHAR oszInLinhaMaster[LEN_INLINHAMASTER];
        VARCHAR oszTsSincronismo[LEN_TSSINCRONISMO];
        VARCHAR oszSqSincronismo[LEN_SQSINCRONISMO];
        VARCHAR oszDtExpiracao[LEN_DTEXPIRACAO];
        VARCHAR oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAO];
        VARCHAR oszDtUltimaAlteracao[LEN_DTULTIMAALTERACAO];

        short iIdLinhaConta = 0;
        short iIdLinhaTelefonica = 0;
        short iIdConta = 0;
        short iIdTipoRelacionamento = 0;
        short iDtLinhaConta = 0;
        short iInLinhaMaster = 0;
        short iTsSincronismo = 0;
        short iSqSincronismo = 0;
        short iDtExpiracao = 0;
        short iIdUsuarioAlteracao = 0;
        short iDtUltimaAlteracao = 0;
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    

    STRCPY_TO_ORA(oszIdLinhaTelefonica, ptLinhaConta->szIdLinhaTelefonica);
    STRCPY_TO_ORA(oszIdTipoRelacionamento, ptLinhaConta->szIdTipoRelacionamento);

	EXEC SQL WHENEVER SQLERROR goto erro;
	EXEC SQL WHENEVER NOT FOUND goto naoexiste;

    EXEC SQL
	    SELECT
            to_char(idlinhaconta),
            to_char(idlinhatelefonica),
            to_char(idconta),
            to_char(idtiporelacionamento),
            to_char(dtlinhaconta, 'YYYYMMDDHH24MISS'),
            to_char(inlinhamaster),
            to_char(tssincronismo),
            to_char(sqsincronismo),
            to_char(dtexpiracao, 'YYYYMMDDHH24MISS'),
            to_char(idusuarioalteracao),
            to_char(dtultimaalteracao, 'YYYYMMDDHH24MISS')
        INTO
            oszIdLinhaConta:iIdLinhaConta,
            oszIdLinhaTelefonica:iIdLinhaTelefonica,
            oszIdConta:iIdConta,
            oszIdTipoRelacionamento:iIdTipoRelacionamento,
            oszDtLinhaConta:iDtLinhaConta,
            oszInLinhaMaster:iInLinhaMaster,
            oszTsSincronismo:iTsSincronismo,
            oszSqSincronismo:iSqSincronismo,
            oszDtExpiracao:iDtExpiracao,
            oszIdUsuarioAlteracao:iIdUsuarioAlteracao,
            oszDtUltimaAlteracao:iDtUltimaAlteracao
        FROM Customer.LinhaConta
        WHERE idlinhatelefonica = to_number(:oszIdLinhaTelefonica)
		AND idtiporelacionamento in ( 1, 2 ) 
		and rownum = 1; 

		/*
        AND idtiporelacionamento = to_number(:oszIdTipoRelacionamento);
		*/



    /* copia os dados obtidos para a estrutura passada como parametro */
    if(iIdLinhaConta != -1) {
        STRCPY_FROM_ORA(ptLinhaConta->szIdLinhaConta, oszIdLinhaConta);
    }
    if(iIdLinhaTelefonica != -1) {
        STRCPY_FROM_ORA(ptLinhaConta->szIdLinhaTelefonica, oszIdLinhaTelefonica);
    }
    if(iIdConta != -1) {
        STRCPY_FROM_ORA(ptLinhaConta->szIdConta, oszIdConta);
    }
    if(iIdTipoRelacionamento != -1) {
        STRCPY_FROM_ORA(ptLinhaConta->szIdTipoRelacionamento, oszIdTipoRelacionamento);
    }
    if(iDtLinhaConta != -1) {
        STRCPY_FROM_ORA(ptLinhaConta->szDtLinhaConta, oszDtLinhaConta);
    }
    if(iInLinhaMaster != -1) {
        STRCPY_FROM_ORA(ptLinhaConta->szInLinhaMaster, oszInLinhaMaster);
    }
    if(iTsSincronismo != -1) {
        STRCPY_FROM_ORA(ptLinhaConta->szTsSincronismo, oszTsSincronismo);
    }
    if(iSqSincronismo != -1) {
        STRCPY_FROM_ORA(ptLinhaConta->szSqSincronismo, oszSqSincronismo);
    }
    if(iDtExpiracao != -1) {
        STRCPY_FROM_ORA(ptLinhaConta->szDtExpiracao, oszDtExpiracao);
    }
    if(iIdUsuarioAlteracao != -1) {
        STRCPY_FROM_ORA(ptLinhaConta->szIdUsuarioAlteracao, oszIdUsuarioAlteracao);
    }
    if(iDtUltimaAlteracao != -1) {
        STRCPY_FROM_ORA(ptLinhaConta->szDtUltimaAlteracao, oszDtUltimaAlteracao);
    }


    ULOG_END("CLinhaContapc::proCBuscaLinhaConta()");
    return true;

    erro:
        ULOG_END("CLinhaContapc::proCBuscaLinhaConta()");
        ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
		throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);

    naoexiste:
        ULOG_END("CLinhaContapc::proCBuscaLinhaConta()");
        ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
		throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
        return false;
}

/****************************************************************************************/
void CLinhaContapc::proCAtualizaLinhaConta(TLinhaConta tLinhaConta)
{
    ULOG_START("CLinhaContapc::proCAtualizaLinhaConta()");
    
    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdLinhaConta[LEN_IDLINHACONTA];
        VARCHAR oszIdLinhaTelefonica[LEN_IDLINHATELEFONICA];
        VARCHAR oszIdConta[LEN_IDCONTA];
        VARCHAR oszIdTipoRelacionamento[LEN_IDTIPORELACIONAMENTO];
        VARCHAR oszDtLinhaConta[LEN_DTLINHACONTA];
        VARCHAR oszInLinhaMaster[LEN_INLINHAMASTER];
        VARCHAR oszTsSincronismo[LEN_TSSINCRONISMO];
        VARCHAR oszSqSincronismo[LEN_SQSINCRONISMO];
//        VARCHAR oszDtExpiracao[LEN_DTEXPIRACAO];
        VARCHAR oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAO];
//        VARCHAR oszDtUltimaAlteracao[LEN_DTULTIMAALTERACAO];
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    
    STRCPY_TO_ORA(oszIdLinhaConta, tLinhaConta.szIdLinhaConta);
    STRCPY_TO_ORA(oszIdLinhaTelefonica, tLinhaConta.szIdLinhaTelefonica);
    STRCPY_TO_ORA(oszIdConta, tLinhaConta.szIdConta);
    STRCPY_TO_ORA(oszIdTipoRelacionamento, tLinhaConta.szIdTipoRelacionamento);
    STRCPY_TO_ORA(oszDtLinhaConta, tLinhaConta.szDtLinhaConta);
    STRCPY_TO_ORA(oszInLinhaMaster, tLinhaConta.szInLinhaMaster);
    STRCPY_TO_ORA(oszTsSincronismo, tLinhaConta.szTsSincronismo);
    STRCPY_TO_ORA(oszSqSincronismo, tLinhaConta.szSqSincronismo);
//    STRCPY_TO_ORA(oszDtExpiracao, tLinhaConta.szDtExpiracao);
    STRCPY_TO_ORA(oszIdUsuarioAlteracao, ID_USUARIO_ALTERACAO);
//    STRCPY_TO_ORA(oszDtUltimaAlteracao, tLinhaConta.szDtUltimaAlteracao);

    EXEC SQL WHENEVER SQLERROR goto erro;
    EXEC SQL WHENEVER NOT FOUND goto erro;

    EXEC SQL UPDATE Customer.LinhaConta
        SET
            idlinhaconta = to_number(:oszIdLinhaConta),
            idlinhatelefonica = to_number(:oszIdLinhaTelefonica),
            idconta = to_number(:oszIdConta),
            idtiporelacionamento = to_number(:oszIdTipoRelacionamento),
            dtlinhaconta = to_date(:oszDtLinhaConta, 'YYYYMMDDHH24MISS'),
            inlinhamaster = to_number(:oszInLinhaMaster),
            tssincronismo = to_number(:oszTsSincronismo),
            sqsincronismo = to_number(:oszSqSincronismo),
            idusuarioalteracao = to_number(:oszIdUsuarioAlteracao),
            dtultimaalteracao = SYSDATE
        WHERE idLinhaConta = to_number(:oszIdLinhaConta);

    ULOG_END("CLinhaContapc::proCAtualizaLinhaConta()");
    return;

    erro:
    
        
        ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
        ULOG_END("CLinhaContapc::proCAtualizaLinhaConta()");
        throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

/****************************************************************************************/
void CLinhaContapc::proCApagaLinhaConta(TLinhaConta tLinhaConta)
{
    ULOG_START("CLinhaContapc::proCApagaLinhaConta()");
    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdLinhaConta[LEN_IDLINHACONTA];
        VARCHAR oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAO];
        VARCHAR oszSqSincronismo[LEN_SQSINCRONISMO];
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    

    STRCPY_TO_ORA(oszIdLinhaConta, tLinhaConta.szIdLinhaConta);
    STRCPY_TO_ORA(oszIdUsuarioAlteracao, ID_USUARIO_ALTERACAO);
    STRCPY_TO_ORA(oszSqSincronismo, tLinhaConta.szSqSincronismo);

    EXEC SQL WHENEVER SQLERROR goto erro;

    EXEC SQL UPDATE Customer.LinhaConta
        SET     dtexpiracao        = SYSDATE,
                idusuarioalteracao = to_number(:oszIdUsuarioAlteracao),
                sqsincronismo      = to_number(:oszSqSincronismo)
    	WHERE idlinhaconta = to_number(:oszIdLinhaConta);

    ULOG_END("CLinhaContapc::proCApagaLinhaConta()");
    return;

    erro:
        ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
        ULOG_END("CLinhaContapc::proCApagaLinhaConta()");
        throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
