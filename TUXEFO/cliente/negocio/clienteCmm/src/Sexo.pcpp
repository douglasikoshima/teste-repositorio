/**
  * @modulo  Cliente
  * @usecase SEXO
  * @author  Robinson Vieira
  * @version $Revision: 1.1 $
  * @CVS     $Author: a5110702 $ - $Date: 2009/07/31 15:33:17 $
  **/

#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <tuxfw.h>
#include "../include/Global.h"
EXEC SQL INCLUDE "../include/Sexo.h";

//
// Construtor e Destrutor
CSexo::CSexo() {
}

CSexo::CSexo(int iIdTipoCorr) {
	struct sqlca sqlca;

	iIdSexo = iIdTipoCorr;

	// Marca ponto de controle de erro
	EXEC SQL WHENEVER SQLERROR GOTO sqlErrorConstrutor;

	EXEC SQL SELECT
	 DsSexo,
	 IdSexo
	INTO
	 :cDsSexo,
	 :iIdSexo
	FROM
	 apoio.Sexo
	WHERE
	 IdSexo = :iIdSexo;

	// ID não existe. Seta o ID para -1.
	if (sqlca.sqlcode == NO_DATA_FOUND)
		iIdSexo = -1;

	return;

	sqlErrorConstrutor:
	    ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
		throw TuxBasicOraException(sqlca.sqlcode);
}

CSexo::~CSexo() {
}

//
// Metodos getter
int CSexo::getIdSexo(){
	return iIdSexo;
}

char* CSexo::getDsSexo(){
	if (iIdSexo < 0)
		return NULL;
	else
		return cDsSexo;
}

//
// Metodos setter
void CSexo::setIdSexo(int value){
	iIdSexo = value;
}

void CSexo::setDsSexo(char* value){
	if (value != NULL) {
		strncpy(cDsSexo, value, 255);
		cDsSexo[255]='\0';
	}
}

// Metodos para acessar a base de dados
CSexo* CSexo::lista(int* iNroObjetos){
    ULOG_START("CSexo::lista()");
	struct sqlca sqlca;
	CSexo* listaTipo = NULL;
	int iNroObjLocal = 1;

	EXEC SQL BEGIN DECLARE SECTION;
		int iIdSexot;
		char cDsSexot[256];
	EXEC SQL END DECLARE SECTION;
	// Marca ponto de controle de erro
	EXEC SQL WHENEVER SQLERROR GOTO sqlErrorLista;

	// Declara e abre o cursor
	EXEC SQL DECLARE tabTemp CURSOR FOR
	SELECT
	 IdSexo,
	 DsSexo
	FROM
	 apoio.Sexo
	WHERE
	 IdSexo > 0;
	EXEC SQL OPEN tabTemp;

	// Corre os dados e monta a lista de objetos
	EXEC SQL WHENEVER NOT FOUND DO break;
	for (;; iNroObjLocal++) {
		
		EXEC SQL FETCH tabTemp INTO
		 :iIdSexot,
		 :cDsSexot;

		// Aloca memória para o objeto atual.
		if ((listaTipo = (CSexo*) realloc((void *)listaTipo, 
			(sizeof(CSexo) * iNroObjLocal))) != NULL) {
			// Coloca os dados do objeto atual.
			listaTipo[iNroObjLocal-1].setIdSexo(iIdSexot);
			listaTipo[iNroObjLocal-1].setDsSexo(cDsSexot);
		} else {
			if (listaTipo)
				free(listaTipo);
		    ULOG_END("CSexo::lista()");
			throw new TuxBasicSvcException(NRO_ERR_MEMORIA,MSG_ERR_MEMORIA);
		}
	}

	*iNroObjetos = iNroObjLocal - 1;
	ULOG_END("CSexo::lista()");
	return listaTipo;

	// Tratamento de erro - Lança excessão com o código oracle do erro.
	sqlErrorLista:
	    ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
	    ULOG_END("CSexo::lista()");
		throw TuxBasicOraException(sqlca.sqlcode);
}
