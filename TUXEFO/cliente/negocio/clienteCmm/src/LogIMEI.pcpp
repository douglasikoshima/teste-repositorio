#undef SQLCA
#define SQLCA_NONE
#include <sqlca.h>
#include <sqlda.h>

#include "../include/LogIMEI.h"
#include <tuxfw.h>

EXEC SQL BEGIN DECLARE SECTION;
#include "../include/Global.h"
EXEC SQL END DECLARE SECTION;

LogIMEI::LogIMEI(void)
{
}

LogIMEI::~LogIMEI(void)
{
}

/*******************************************************************************************************/
void LogIMEI::setIdLinhaTelefonica(char *pszIdLinhaTelefonica)
{
    strcpy(tLogIMEI.szIdLinhaTelefonica, pszIdLinhaTelefonica);
}

/*******************************************************************************************************/
void LogIMEI::setNrProtocolo(char *pszNrProtocolo)
{
    strcpy(tLogIMEI.szNrProtocolo, pszNrProtocolo);
}

/*******************************************************************************************************/
void LogIMEI::setDsMarca(char *pszDsMarca)
{
    strcpy(tLogIMEI.szDsMarca, pszDsMarca);
}

/*******************************************************************************************************/
void LogIMEI::setDsModelo(char *pszDsModelo)
{
    strcpy(tLogIMEI.szDsModelo, pszDsModelo);
}

/*******************************************************************************************************/
void LogIMEI::setNmLoja(char *pszNmLoja)
{
    strcpy(tLogIMEI.szNmLoja, pszNmLoja);
}

/*******************************************************************************************************/
void LogIMEI::setIMEI(char *pszIMEI)
{
    strcpy(tLogIMEI.szIMEI, pszIMEI);
}

/*******************************************************************************************************/
void LogIMEI::setIdUsuarioAlteracao(char *pszIdUsuarioAlteracao)
{
    strcpy(tLogIMEI.szIdUsuarioAlteracao, pszIdUsuarioAlteracao);
}

/*******************************************************************************************************/
void LogIMEI::insereLogIMEI(void)
{
    ULOG_START("LogIMEI::insereLogIMEI");
    
    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdLogIMEI[LEN_IDLOGIMEI];
        VARCHAR oszIdLinhaTelefonica[LEN_IDLINHATELEFONICA];
        VARCHAR oszNrProtocolo[LEN_NRPROTOCOLO];
        VARCHAR oszDsMarca[LEN_DSMARCA];
        VARCHAR oszDsModelo[LEN_DSMODELO];
        VARCHAR oszNmLoja[LEN_NMLOJA];
        VARCHAR oszIMEI[LEN_IMEI];
        VARCHAR oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAO];
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    STRCPY_TO_ORA(oszIdLinhaTelefonica, tLogIMEI.szIdLinhaTelefonica);
    STRCPY_TO_ORA(oszNrProtocolo, tLogIMEI.szNrProtocolo);
    STRCPY_TO_ORA(oszDsMarca, tLogIMEI.szDsMarca);
    STRCPY_TO_ORA(oszDsModelo, tLogIMEI.szDsModelo);
    STRCPY_TO_ORA(oszNmLoja, tLogIMEI.szNmLoja);
    STRCPY_TO_ORA(oszIMEI, tLogIMEI.szIMEI);
    STRCPY_TO_ORA(oszIdUsuarioAlteracao, tLogIMEI.szIdUsuarioAlteracao);

    EXEC SQL WHENEVER SQLERROR goto erro;

    EXEC SQL SELECT customer.logimeisq.nextval INTO :oszIdLogIMEI FROM DUAL;

    EXEC SQL INSERT INTO customer.logimei
                       ( idlogimei
                       , idlinhatelefonica
                       , nrprotocolo
                       , dsmarca
                       , dsmodelo
                       , nmloja
                       , imei 
                       , idusuarioalteracao
                       , dtultimaalteracao )
                VALUES ( :oszIdLogIMEI
                       , :oszIdLinhaTelefonica
                       , :oszNrProtocolo
                       , :oszDsMarca
                       , :oszDsModelo
                       , :oszNmLoja
                       , :oszIMEI
                       , :oszIdUsuarioAlteracao
                       , SYSDATE);


    ULOGI("Finalizando LogIMEI::insereLogIMEI <OK>");
    ULOG_END("LogIMEI::insereLogIMEI");
    return;

    erro:
        ULOGE("Finalizando LogIMEI::insereLogIMEI <ERROR>");
        throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
