///////////////////////////////////////////////////////////////////////////////
/**
 * @modulo  Sincronismo
 * @usecase PessoaLinhaHistorico
 * @author  Renato Striitzel Russo
 * @author  Carlos Eduardo Barbosa Braga
 * @version $Revision: 1.1 $
 * @CVS     $Author: a5110702 $ - $Date: 2009/07/31 15:33:17 $
 **/
///////////////////////////////////////////////////////////////////////////////

#undef SQLCA
#define SQLCA_NONE
#include <sqlca.h>
#include <sqlda.h>

#include <tuxfw.h>
#include "../include/PessoaLinhaHistoricopc.h"
#include "../include/Exception.h"


EXEC SQL BEGIN	DECLARE SECTION;
#include "../include/Global.h"
EXEC SQL END	DECLARE SECTION;

/******************************************************************************************/
void CPessoaLinhaHistoricopc::proCInserePessoaLinhaHistorico(TPessoaLinhaHistorico* ptPessoaLinhaHistorico)
{
    ULOG_START("CPessoaLinhaHistoricopc::proCInserePessoaLinhaHistorico()");
    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdPessoaLinhaHistorico[LEN_IDPESSOALINHAHISTORICO];
        VARCHAR oszDtRelacionamento[LEN_DTRELACIONAMENTO];
        VARCHAR oszCdAreaRegistro[LEN_CDAREAREGISTRO];
        VARCHAR oszNrLinha[LEN_NRLINHA];
        VARCHAR oszIdTipoRelacionamento[LEN_IDTIPORELACIONAMENTO];
        VARCHAR oszIdPessoaDePara[LEN_IDPESSOADEPARA];
        VARCHAR oszIdLinhaTelefonica[LEN_IDLINHATELEFONICA];
        VARCHAR oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAO];
//        VARCHAR oszDtUltimaAlteracao[LEN_DTULTIMAALTERACAO];
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    

    EXEC SQL WHENEVER SQLERROR goto erro;

    STRCPY_TO_ORA(oszDtRelacionamento, ptPessoaLinhaHistorico->szDtRelacionamento);
    STRCPY_TO_ORA(oszCdAreaRegistro, ptPessoaLinhaHistorico->szCdAreaRegistro);
    STRCPY_TO_ORA(oszNrLinha, ptPessoaLinhaHistorico->szNrLinha);
    STRCPY_TO_ORA(oszIdTipoRelacionamento, ptPessoaLinhaHistorico->szIdTipoRelacionamento);
    STRCPY_TO_ORA(oszIdPessoaDePara, ptPessoaLinhaHistorico->szIdPessoaDePara);
    STRCPY_TO_ORA(oszIdLinhaTelefonica, ptPessoaLinhaHistorico->szIdLinhaTelefonica);
    STRCPY_TO_ORA(oszIdUsuarioAlteracao, ID_USUARIO_ALTERACAO);
//    STRCPY_TO_ORA(oszDtUltimaAlteracao, ptPessoaLinhaHistorico->szDtUltimaAlteracao);


    EXEC SQL SELECT to_char(Customer.PessoaLinhaHistoricoSq.Nextval)
            INTO :oszIdPessoaLinhaHistorico FROM DUAL;

    STRCPY_FROM_ORA(ptPessoaLinhaHistorico->szIdPessoaLinhaHistorico, oszIdPessoaLinhaHistorico);

    EXEC SQL
        INSERT INTO Customer.PessoaLinhaHistorico
        (
            idpessoalinhahistorico,
            dtrelacionamento,
            cdarearegistro,
            nrlinha,
            idtiporelacionamento,
            idpessoadepara,
            idlinhatelefonica,
            idusuarioalteracao,
            dtultimaalteracao
        )
        VALUES
        (
            to_number(:oszIdPessoaLinhaHistorico),
            to_date(:oszDtRelacionamento, 'YYYYMMDDHH24MISS'),
            to_number(:oszCdAreaRegistro),
            to_number(:oszNrLinha),
            to_number(:oszIdTipoRelacionamento),
            to_number(:oszIdPessoaDePara),
            to_number(:oszIdLinhaTelefonica),
            to_number(:oszIdUsuarioAlteracao),
            SYSDATE
        );

    ULOG_END("CPessoaLinhaHistoricopc::proCInserePessoaLinhaHistorico()");
    return;

    erro:
        ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
        ULOG_END("CPessoaLinhaHistoricopc::proCInserePessoaLinhaHistorico()");
        throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);
}
