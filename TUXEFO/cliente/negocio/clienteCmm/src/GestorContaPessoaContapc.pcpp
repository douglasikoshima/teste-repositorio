#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>

#include "tuxfw.h"
#include "GestorContaPessoaContapc.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "../include/Global.h"
EXEC SQL END DECLARE SECTION;

/****************************************************************************************/
void CGestorContaPessoaContapc::proCApagaGestorContaPessoaConta(TGestorContaPessoaConta *ptGestorContaPessoaConta)
{
    ULOG_START("CGestorContaPessoaContapc::proCApagaGestorContaPessoaConta()");
    
    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdNrCPF[LEN_IDNRCPF];
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszIdNrCPF, ptGestorContaPessoaConta->szIdNrCPF);

	EXEC SQL WHENEVER SQLERROR goto erro;

	EXEC SQL
        DELETE
            FROM
                customer.gestorcontapessoaconta
            WHERE
                idnrcpf = :oszIdNrCPF;

    ULOG_END("CGestorContaPessoaContapc::proCApagaGestorContaPessoaConta()");
    return;

	erro:
        ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s", sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc);
        ULOG_END("CGestorContaPessoaContapc::proCApagaGestorContaPessoaConta()");
		throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

/****************************************************************************************/
void CGestorContaPessoaContapc::proCInsereGestorContaPessoaConta(TGestorContaPessoaConta *ptGestorContaPessoaConta)
{
    ULOG_START("CGestorContaPessoaContapc::proCInsereGestorContaPessoaConta()");
    
    EXEC SQL BEGIN DECLARE SECTION;

        VARCHAR oszIdNrCPF[LEN_IDNRCPF];
        VARCHAR oszIdPessoaConta[LEN_IDPESSOACONTA];
        VARCHAR oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAO];
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszIdNrCPF, ptGestorContaPessoaConta->szIdNrCPF);
	STRCPY_TO_ORA(oszIdPessoaConta, ptGestorContaPessoaConta->szIdPessoaConta);
	STRCPY_TO_ORA(oszIdUsuarioAlteracao, ptGestorContaPessoaConta->szIdUsuarioAlteracao);

	EXEC SQL WHENEVER SQLERROR goto erro;

	EXEC SQL INSERT INTO Customer.GestorContaPessoaConta
    (
        idnrcpf,
        idpessoaconta,
        idusuarioalteracao,
        dtultimaalteracao
    )
    VALUES
    (
        :oszIdNrCPF,
        :oszIdPessoaConta,
        :oszIdUsuarioAlteracao,
        SYSDATE
    );

    ULOG_END("CGestorContaPessoaContapc::proCInsereGestorContaPessoaConta()");
    return;

	erro:
        ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s", sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc);
        ULOG_END("CGestorContaPessoaContapc::proCInsereGestorContaPessoaConta()");
		throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

/****************************************************************************************/
void CGestorContaPessoaContapc::proCAtualizaGestorContaPessoaConta(TGestorContaPessoaConta *ptGestorContaPessoaConta)
{
    ULOG_START("CGestorContaPessoaContapc::proCAtualizaGestorContaPessoaConta()");
    
    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdNrCPF[LEN_IDNRCPF];
        VARCHAR oszIdPessoaConta[LEN_IDPESSOACONTA];
        VARCHAR oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAO];
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszIdNrCPF, ptGestorContaPessoaConta->szIdNrCPF);
	STRCPY_TO_ORA(oszIdPessoaConta, ptGestorContaPessoaConta->szIdPessoaConta);
	STRCPY_TO_ORA(oszIdUsuarioAlteracao, ptGestorContaPessoaConta->szIdUsuarioAlteracao);

	EXEC SQL WHENEVER SQLERROR goto erro;

	EXEC SQL
        UPDATE Customer.GestorContaPessoaConta
            SET
                idnrcpf = :oszIdNrCPF,
                idpessoaconta = :oszIdPessoaConta,
                idusuarioalteracao = :oszIdUsuarioAlteracao,
                dtultimaalteracao = SYSDATE
            WHERE
                idnrcpf = :oszIdNrCPF;

    ULOG_END("CGestorContaPessoaContapc::proCAtualizaGestorContaPessoaConta()");
    return;

	erro:
        ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s", sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc);
        ULOG_END("CGestorContaPessoaContapc::proCAtualizaGestorContaPessoaConta()");
		throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

/****************************************************************************************/
bool CGestorContaPessoaContapc::proCBuscaGestorContaPessoaConta(TGestorContaPessoaConta *ptGestorContaPessoaConta)
{
    ULOG_START("CGestorContaPessoaContapc::proCBuscaGestorContaPessoaConta");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdNrCPF[LEN_IDNRCPF];
        VARCHAR oszIdPessoaConta[LEN_IDPESSOACONTA];

        short oiIdNrCPF = 0;
        short oiIdPessoaConta = 0;
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszIdNrCPF, ptGestorContaPessoaConta->szIdNrCPF);

	EXEC SQL WHENEVER SQLERROR	goto erro;
	EXEC SQL WHENEVER NOT FOUND goto naoexiste;


	EXEC SQL
        SELECT
            cgcpc.idnrcpf,
            cgcpc.idpessoaconta
        INTO
            :oszIdNrCPF:oiIdNrCPF,
            :oszIdPessoaConta:oiIdPessoaConta
        FROM
            customer.gestorcontapessoaconta cgcpc
        WHERE
            cgcpc.idnrcpf = :oszIdNrCPF;


    if(oiIdNrCPF != -1) {
        STRCPY_FROM_ORA(ptGestorContaPessoaConta->szIdNrCPF, oszIdNrCPF);
    }
    if(oiIdPessoaConta != -1) {
        STRCPY_FROM_ORA(ptGestorContaPessoaConta->szIdPessoaConta, oszIdPessoaConta);
    }


    ULOGI("Finalizando proCBuscaGestorContaPessoaConta <FOUND>");
    ULOG_END("CGestorContaPessoaContapc::proCBuscaGestorContaPessoaConta");
    return true;

    naoexiste:
        ULOGI("Finalizando proCBuscaGestorContaPessoaConta <NOT FOUND>");
        ULOG_END("CGestorContaPessoaContapc::proCBuscaGestorContaPessoaConta");
        return false;

    erro:
        ULOGE("Finalizando proCBuscaGestorContaPessoaConta <ERROR>");
        throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
