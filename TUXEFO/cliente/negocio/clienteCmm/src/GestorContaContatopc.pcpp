#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>

#include "tuxfw.h"
#include "GestorContaContatopc.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "../include/Global.h"
EXEC SQL END DECLARE SECTION;

/****************************************************************************************/
void CGestorContaContatopc::proCApagaGestorContaContato(TGestorContaContato *ptGestorContaContato)
{
    ULOG_START("CGestorContaContatopc::proCApagaGestorContaContato()");
    
    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdNrCPF[LEN_IDNRCPF];
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszIdNrCPF, ptGestorContaContato->szIdNrCPF);

	EXEC SQL WHENEVER SQLERROR goto erro;

	EXEC SQL
        DELETE
            FROM
                customer.gestorcontacontato
            WHERE
                idnrcpf = :oszIdNrCPF;

    ULOG_END("CGestorContaContatopc::proCApagaGestorContaContato()");
    return;

	erro:
        ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s", sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc);
        ULOG_END("CGestorContaContatopc::proCApagaGestorContaContato()");
		throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

/****************************************************************************************/
void CGestorContaContatopc::proCInsereGestorContaContato(TGestorContaContato *ptGestorContaContato)
{
    ULOG_START("CGestorContaContatopc::proCInsereGestorContaContato()");
    
    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdNrLinha[LEN_IDNRLINHA];
        VARCHAR oszNrRamal[LEN_NRRAMAL];
        VARCHAR oszIdNrCPF[LEN_IDNRCPF];
        VARCHAR oszCdAreaRegistro[LEN_CDAREAREGISTROGC];
        VARCHAR oszIdTipoComunicacao[LEN_IDTIPOCOMUNICACAO];
        VARCHAR oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAO];
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszIdNrLinha, ptGestorContaContato->szIdNrLinha);
	STRCPY_TO_ORA(oszNrRamal, ptGestorContaContato->szNrRamal);
	STRCPY_TO_ORA(oszIdNrCPF, ptGestorContaContato->szIdNrCPF);
	STRCPY_TO_ORA(oszCdAreaRegistro, ptGestorContaContato->szCdAreaRegistro);
	STRCPY_TO_ORA(oszIdTipoComunicacao, ptGestorContaContato->szIdTipoComunicacao);
	STRCPY_TO_ORA(oszIdUsuarioAlteracao, ptGestorContaContato->szIdUsuarioAlteracao);

	EXEC SQL WHENEVER SQLERROR goto erro;

	EXEC SQL INSERT INTO Customer.GestorContaContato
    (
        idnrlinha,
        nrramal,
        idnrcpf,
        cdarearegistro,
        idtipocomunicacao,
        idusuarioalteracao,
        dtultimaalteracao
    )
    VALUES
    (
        :oszIdNrLinha,
        :oszNrRamal,
        :oszIdNrCPF,
        :oszCdAreaRegistro,
        :oszIdTipoComunicacao,
        :oszIdUsuarioAlteracao,
        SYSDATE
    );

    ULOG_END("CGestorContaContatopc::proCInsereGestorContaContato()");
    return;

	erro:
        ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s", sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc);
        ULOG_END("CGestorContaContatopc::proCInsereGestorContaContato()");
		throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

/****************************************************************************************/
void CGestorContaContatopc::proCAtualizaGestorContaContato(TGestorContaContato *ptGestorContaContato)
{
    ULOG_START("CGestorContaContatopc::proCAtualizaGestorContaContato()");
    
    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdNrLinha[LEN_IDNRLINHA];
        VARCHAR oszNrRamal[LEN_NRRAMAL];
        VARCHAR oszIdNrCPF[LEN_IDNRCPF];
        VARCHAR oszCdAreaRegistro[LEN_CDAREAREGISTROGC];
        VARCHAR oszIdTipoComunicacao[LEN_IDTIPOCOMUNICACAO];
        VARCHAR oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAO];
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszIdNrLinha, ptGestorContaContato->szIdNrLinha);
	STRCPY_TO_ORA(oszNrRamal, ptGestorContaContato->szNrRamal);
	STRCPY_TO_ORA(oszIdNrCPF, ptGestorContaContato->szIdNrCPF);
	STRCPY_TO_ORA(oszCdAreaRegistro, ptGestorContaContato->szCdAreaRegistro);
	STRCPY_TO_ORA(oszIdTipoComunicacao, ptGestorContaContato->szIdTipoComunicacao);
	STRCPY_TO_ORA(oszIdUsuarioAlteracao, ptGestorContaContato->szIdUsuarioAlteracao);

	EXEC SQL WHENEVER SQLERROR goto erro;

	EXEC SQL
        UPDATE Customer.GestorContaContato
            SET
                idnrlinha = :oszIdNrLinha,
                nrramal = :oszNrRamal,
                idnrcpf = :oszIdNrCPF,
                cdarearegistro = :oszCdAreaRegistro,
                idtipocomunicacao = :oszIdTipoComunicacao,
                idusuarioalteracao = :oszIdUsuarioAlteracao,
                dtultimaalteracao = SYSDATE
            WHERE
                idnrcpf = :oszIdNrCPF;

    ULOG_END("CGestorContaContatopc::proCAtualizaGestorContaContato()");
    return;

	erro:
        ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s", sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc);
        ULOG_END("CGestorContaContatopc::proCAtualizaGestorContaContato()");
		throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

/****************************************************************************************/
bool CGestorContaContatopc::proCBuscaGestorContaContato(TGestorContaContato *ptGestorContaContato)
{
    ULOG_START("CGestorContaContatopc::proCBuscaGestorContaContato");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdNrLinha[LEN_IDNRLINHA];
        VARCHAR oszNrRamal[LEN_NRRAMAL];
        VARCHAR oszIdNrCPF[LEN_IDNRCPF];
        VARCHAR oszCdAreaRegistro[LEN_CDAREAREGISTROGC];
        VARCHAR oszIdTipoComunicacao[LEN_IDTIPOCOMUNICACAO];

        short oiIdNrLinha = 0;
        short oiNrRamal = 0;
        short oiIdNrCPF = 0;
        short oiCdAreaRegistro = 0;
        short oiIdTipoComunicacao = 0;
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszIdNrCPF, ptGestorContaContato->szIdNrCPF);

	EXEC SQL WHENEVER SQLERROR	goto erro;
	EXEC SQL WHENEVER NOT FOUND goto naoexiste;

	EXEC SQL
        SELECT
            cgcc.idnrlinha,
            cgcc.nrramal,
            cgcc.idnrcpf,
            cgcc.cdarearegistro,
            cgcc.idtipocomunicacao
        INTO
            :oszIdNrLinha:oiIdNrLinha,
            :oszNrRamal:oiNrRamal,
            :oszIdNrCPF:oiIdNrCPF,
            :oszCdAreaRegistro:oiCdAreaRegistro,
            :oszIdTipoComunicacao:oiIdTipoComunicacao
        FROM
            customer.gestorcontacontato cgcc
        WHERE
            cgcc.idnrcpf = :oszIdNrCPF;


    if(oiIdNrLinha != -1) {
        STRCPY_FROM_ORA(ptGestorContaContato->szIdNrLinha, oszIdNrLinha);
    }
    if(oiNrRamal != -1) {
        STRCPY_FROM_ORA(ptGestorContaContato->szNrRamal, oszNrRamal);
    }
    if(oiIdNrCPF != -1) {
        STRCPY_FROM_ORA(ptGestorContaContato->szIdNrCPF, oszIdNrCPF);
    }
    if(oiCdAreaRegistro != -1) {
        STRCPY_FROM_ORA(ptGestorContaContato->szCdAreaRegistro, oszCdAreaRegistro);
    }
    if(oiIdTipoComunicacao != -1) {
        STRCPY_FROM_ORA(ptGestorContaContato->szIdTipoComunicacao, oszIdTipoComunicacao);
    }


    ULOGI("Finalizando proCBuscaGestorContaContato <FOUND>");
    ULOG_END("CGestorContaContatopc::proCBuscaGestorContaContato");
    return true;

    naoexiste:
        ULOGI("Finalizando proCBuscaGestorContaContato <NOT FOUND>");
        ULOG_END("CGestorContaContatopc::proCBuscaGestorContaContato");
        return false;

    erro:
        ULOGE("Finalizando proCBuscaGestorContaContato <ERROR>");
        throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
