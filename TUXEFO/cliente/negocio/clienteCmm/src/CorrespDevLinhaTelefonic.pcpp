#undef SQLCA
#define SQLCA_NONE

// CorrespDevLinhaTelefonic.pcpp: implementation for the 
// CCorrespDevLinhaTelefonic class.
//////////////////////////////////////////////////////////////////////

#include <sqlca.h>
#include <tuxfw.h>
EXEC SQL INCLUDE "../include/CorrespDevLinhaTelefonic.h";

//
// Construtor e Destrutor
CCorrespDevLinhaTelefonic::CCorrespDevLinhaTelefonic() {

	memset(sIdUsuarioAlteracao,0,256);
}

CCorrespDevLinhaTelefonic::~CCorrespDevLinhaTelefonic() {
}

//
// Metodos getter
int CCorrespDevLinhaTelefonic::getIdCorrespDevolvidaLinhaTelefon(){
	return iIdCorrespDevolvidaLinhaTelefon;
}

int CCorrespDevLinhaTelefonic::getIdCorrespondenciaDevolvida(){
	return iIdCorrespondenciaDevolvida;
}

int CCorrespDevLinhaTelefonic::getIdLinhaTelefonica(){
	return iIdLinhaTelefonica;
}

//
// Metodos setter
void CCorrespDevLinhaTelefonic::setIdCorrespDevolvidaLinhaTelefon(int value){
	iIdCorrespDevolvidaLinhaTelefon = value;
}

void CCorrespDevLinhaTelefonic::setIdCorrespondenciaDevolvida(int value){
	iIdCorrespondenciaDevolvida = value;
}

void CCorrespDevLinhaTelefonic::setIdLinhaTelefonica(int value){
	iIdLinhaTelefonica = value;
}

// Usuário de alteração
void CCorrespDevLinhaTelefonic::setUsuarioAlteracao(char* value) {
	if (value != NULL) {
		strncpy(sIdUsuarioAlteracao,value, 255);
		sIdUsuarioAlteracao[255]='\0';
	}
}

// Métodos de acesso a banco de dados
void CCorrespDevLinhaTelefonic::inclui()
{

	ULOG_START("CCorrespDevLinhaTelefonic::inclui()");
	struct sqlca sqlca;

	EXEC SQL BEGIN DECLARE SECTION;
		int iNovoId;
	EXEC SQL END DECLARE SECTION;

	// Marca ponto de controle de erro
	EXEC SQL WHENEVER SQLERROR GOTO sqlErrorInc;

	// Busca o novo ID da sequence.
	EXEC SQL
		SELECT correspondencia.CorrespDevLinhaTelefonicSQ.NEXTVAL
		INTO :iNovoId
		FROM DUAL;
	if (sqlca.sqlcode)
	{
	    ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
	    ULOG_END("CCorrespDevLinhaTelefonic::inclui()");
		throw TuxBasicOraException(sqlca.sqlcode);
	}

	iIdCorrespDevolvidaLinhaTelefon = iNovoId;

	// Insere no banco de dados
	EXEC SQL
	INSERT INTO correspondencia.CorrespDevLinhaTelefonic
	(IdCorLinhaTelefon,
	 IdCorrespondenciaDevolvida,
	 IdLinhaTelefonica,
	 IdUsuarioAlteracao,
	 DtUltimaAlteracao)
	VALUES
	(:iIdCorrespDevolvidaLinhaTelefon,
	 :iIdCorrespondenciaDevolvida,
	 :iIdLinhaTelefonica,
	 :sIdUsuarioAlteracao,
	 SYSDATE);

	// Inserção OK, coloca o ID no objeto
	iIdCorrespDevolvidaLinhaTelefon = iNovoId;
	
    ULOG_END("CCorrespDevLinhaTelefonic::inclui()");
	return;

	// Tratamento de erro - Lança excessão com o código oracle do erro.
	sqlErrorInc:
	    ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
	    ULOG_END("CCorrespDevLinhaTelefonic::inclui()");
		throw TuxBasicOraException(sqlca.sqlcode);
}

void CCorrespDevLinhaTelefonic::exclui()
{

	ULOG_START("CCorrespDevLinhaTelefonic::exclui()");
	struct sqlca sqlca;

	// Marca ponto de controle de erro
	EXEC SQL WHENEVER SQLERROR GOTO sqlErrorExc;

	// Remove do banco de dados
	EXEC SQL
	DELETE correspondencia.CorrespDevLinhaTelefonic
	WHERE IdCorLinhaTelefon = :iIdCorrespDevolvidaLinhaTelefon;

	// Remoção OK, seta ID do objeto para -1
	iIdCorrespDevolvidaLinhaTelefon = -1;

	ULOG_END("CCorrespDevLinhaTelefonic::exclui()");
	return;

	// Tratamento de erro - Lança excessão com o código oracle do erro.
	sqlErrorExc:
	    ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
	    ULOG_END("CCorrespDevLinhaTelefonic::exclui()");
		throw TuxBasicOraException(sqlca.sqlcode);
}

void CCorrespDevLinhaTelefonic::altera()
{

	ULOG_START("CCorrespDevLinhaTelefonic::altera()");
	struct sqlca sqlca;

	// Marca ponto de controle de erro
	EXEC SQL WHENEVER SQLERROR GOTO sqlErrorAlt;

	// Altera no banco de dados para os dados atuais
	EXEC SQL
	UPDATE correspondencia.CorrespDevLinhaTelefonic
	SET
	 IdCorrespondenciaDevolvida = :iIdCorrespondenciaDevolvida,
	 IdLinhaTelefonica = :iIdLinhaTelefonica,
	 IdUsuarioAlteracao = :sIdUsuarioAlteracao,
	 DtUltimaAlteracao = SYSDATE
	WHERE
	 IdCorLinhaTelefon = :iIdCorrespDevolvidaLinhaTelefon;

	ULOG_END("CCorrespDevLinhaTelefonic::altera()");
	return;

	// Tratamento de erro - Lança excessão com o código oracle do erro.
	sqlErrorAlt:
	    ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
	    ULOG_END("CCorrespDevLinhaTelefonic::altera()");
		throw TuxBasicOraException(sqlca.sqlcode);
}

