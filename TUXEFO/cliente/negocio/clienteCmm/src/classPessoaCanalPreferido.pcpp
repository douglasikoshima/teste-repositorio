#undef SQLCA
#define SQLCA_NONE
#include <sqlca.h>
#include <sqlda.h>


#undef MSG_NONE
#define MSG_NONE
#include "../include/Messages.h"

#include <tuxfw.h>
#include "../include/Exception.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "../include/Global.h"
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE "../include/classPessoaCanalPreferido.h";


// Usuário de alteração
void CPessoaCanalPreferido::setUsuarioAlteracao(char* value) {
	if (value != NULL) {
		strncpy(sIdUsuarioAlteracao,value, 255);
		sIdUsuarioAlteracao[255]='\0';
	}
}

CPessoaCanalPreferido::CPessoaCanalPreferido()
{
    memset(&tTabela, 0x00, sizeof(tTabela));

	memset(sIdUsuarioAlteracao,0,256);
}
CPessoaCanalPreferido::~CPessoaCanalPreferido()
{
}

void CPessoaCanalPreferido::setIdPessoaCanalPreferido(char *pDado)
{
    if ( pDado == NULL )
    {
        tTabela.iIdPessoaCanalPreferido_ora = -1;
    }
    else
    {
        STRCPY_TO_ORA(tTabela.sIdPessoaCanalPreferido, pDado);
        tTabela.iIdPessoaCanalPreferido_ora = 0;
    }
}

void CPessoaCanalPreferido::setIdPessoa(char *pDado)
{
    if ( pDado == NULL )
    {
        tTabela.iIdPessoa_ora = -1;
    }
    else
    {
        STRCPY_TO_ORA(tTabela.sIdPessoa, pDado);
        tTabela.iIdPessoa_ora = 0;
    }
}

void CPessoaCanalPreferido::setIdCanal(char *pDado)
{
    if ( pDado == NULL )
    {
        tTabela.iIdCanal_ora = -1;
    }
    else
    {
        STRCPY_TO_ORA(tTabela.sIdCanal, pDado);
        tTabela.iIdCanal_ora = 0;
    }
}
void CPessoaCanalPreferido::setDescricao(char *pDado)
{
    if ( pDado == NULL )
    {
        tTabela.iDescricao_ora = -1;
    }
    else
    {
        STRCPY_TO_ORA(tTabela.sDescricao, pDado);
        tTabela.iDescricao_ora = 0;
    }
}

//Get
char* CPessoaCanalPreferido::getIdPessoaCanalPreferido()
{
        return ((char*)tTabela.sIdPessoaCanalPreferido.arr);
}
char* CPessoaCanalPreferido::getIdPessoa()
{
        return ((char*)tTabela.sIdPessoa.arr);
}
char* CPessoaCanalPreferido::getIdCanal()
{
        return ((char*)tTabela.sIdCanal.arr);
}
char* CPessoaCanalPreferido::getDescricao()
{
        return ((char*)tTabela.sDescricao.arr);
}

// Metodos que operam com o Banco de Dados

//-----------------------------------------------------------------------------------------
//* Especificacion:
//*     Nome:
//*     Parametro:
//*     Retorno: OK = 
//*              sqlca.sqlcode = codigo de erro do proprio Oracle
//*
//-----------------------------------------------------------------------------------------
//* Purpose:
//*     
//*
//-----------------------------------------------------------------------------------------
//* Process:
//*     
//*
//-----------------------------------------------------------------------------------------
int CPessoaCanalPreferido::Incluir()
{
    ULOG_START("CPessoaCanalPreferido::Incluir()");    
    struct sqlca sqlca;

    /* Obtendo a sequence */
    EXEC SQL SELECT customer.pessoacanalpreferidosq.NEXTVAL 
               INTO :tTabela.sIdPessoaCanalPreferido:tTabela.iIdPessoaCanalPreferido_ora
               FROM dual;


	EXEC SQL WHENEVER SQLERROR	goto sqlErrorLista;

    EXEC SQL 
        INSERT INTO customer.pessoacanalpreferido
                    ( 
                         IDPESSOACANALPREFERIDO
                        ,IDPESSOA
                        ,IDCANAL
						,IDUSUARIOALTERACAO
						,DTULTIMAALTERACAO
                    )
            VALUES ( 
                        :tTabela.sIdPessoaCanalPreferido:tTabela.iIdPessoaCanalPreferido_ora,
                        :tTabela.sIdPessoa:tTabela.iIdPessoa_ora,
                        :tTabela.sIdCanal:tTabela.iIdCanal_ora,
						:sIdUsuarioAlteracao,
						SYSDATE
                    );
                    
    ULOG_END("CPessoaCanalPreferido::Incluir()");
    
    if (sqlca.sqlerrd[2] == 0 )
        return NOK;
    else
        return OK;

	sqlErrorLista:
	    ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
	    ULOG_END("CPessoaCanalPreferido::Incluir()");
		throw TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

//-----------------------------------------------------------------------------------------
//* Especificacion:
//*     Nome:
//*     Parametro:
//*     Retorno: OK = 
//*              sqlca.sqlcode = codigo de erro do proprio Oracle
//*
//-----------------------------------------------------------------------------------------
//* Purpose:
//*
//-----------------------------------------------------------------------------------------
//* Process:
//*     
//-----------------------------------------------------------------------------------------
int CPessoaCanalPreferido::Excluir()
{
    ULOG_END("CPessoaCanalPreferido::Excluir()");
    struct sqlca sqlca;

	EXEC SQL WHENEVER SQLERROR	goto sqlErrorLista;

    /* Deleta os pais */
    EXEC SQL DELETE FROM customer.pessoacanalpreferido
                   WHERE idpessoacanalpreferido = :tTabela.sIdPessoaCanalPreferido;
  
    ULOG_END("CPessoaCanalPreferido::Excluir()");
    if (sqlca.sqlerrd[2] == 0 )
        return NOK;
    else
        return OK;

	sqlErrorLista:
	    ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
		ULOG_END("CPessoaCanalPreferido::Excluir()");
		throw TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}


//-----------------------------------------------------------------------------------------
//* Especificacion:
//*     Nome:
//*     Parametro:
//*     Retorno: OK = 
//*              sqlca.sqlcode = codigo de erro do proprio Oracle
//*
//-----------------------------------------------------------------------------------------
//* Purpose:
//*     
//*
//-----------------------------------------------------------------------------------------
//* Process:
//*     
//*
//-----------------------------------------------------------------------------------------
int CPessoaCanalPreferido::Alterar()
{
    return OK;
}


//-----------------------------------------------------------------------------------------
//* Especificacion:
//*     Nome: RecuperarTodos
//*     Parametro: iNroObjetos = numero de objetos alocados.
//*     Retorno: objeto = ponteiro com os objetos alocados
//*              sqlca.sqlcode = codigo de erro do proprio Oracle
//*
//-----------------------------------------------------------------------------------------
//* Purpose: Lista todas as linhas da tabela PessoaCanalPreferido.
//*
//-----------------------------------------------------------------------------------------
//* Process: Lista todas as linha da tabela e retorna um ponteiro com os objetos
//*          utilizando a view PessoaCanalPreferido;.
//*
//-----------------------------------------------------------------------------------------
CPessoaCanalPreferido* CPessoaCanalPreferido::RecuperarTodos(int* iNroObjetos)
{
    ULOG_START("CPessoaCanalPreferido::RecuperarTodos()");
    struct sqlca sqlca;

	CPessoaCanalPreferido* oLocal = NULL;
	int iNroObjLocal = 1;

	EXEC SQL BEGIN DECLARE SECTION;
        TTABELA_PCP tSt;
	EXEC SQL END DECLARE SECTION;

    memset(&tSt, 0x00, sizeof(tSt));

	// Marca ponto de controle de erro
	EXEC SQL WHENEVER SQLERROR GOTO sqlErrorLista;

	// Declara e abre o cursor
	EXEC SQL DECLARE cPRMC CURSOR FOR
            SELECT idpessoacanalpreferido
                  ,idpessoa
                  ,idcanal
              FROM customer.pessoacanalpreferido;

	EXEC SQL OPEN cPRMC;
	EXEC SQL WHENEVER NOT FOUND DO break;

	for (;; iNroObjLocal++) 
    {
		
		EXEC SQL FETCH cPRMC 
                  INTO :tSt.sIdPessoaCanalPreferido:tSt.iIdPessoaCanalPreferido_ora
                      ,:tSt.sIdPessoa:tSt.iIdPessoa_ora
                      ,:tSt.sIdCanal:tSt.iIdCanal_ora;

		// Aloca memória para o objeto atual.
		if ((oLocal = (CPessoaCanalPreferido*) realloc((void *)oLocal, (sizeof(CPessoaCanalPreferido) * iNroObjLocal))) != NULL)
        {
			oLocal[iNroObjLocal-1].setIdPessoaCanalPreferido((char*)tSt.sIdPessoaCanalPreferido.arr);
			oLocal[iNroObjLocal-1].setIdPessoa((char*)tSt.sIdPessoa.arr);
			oLocal[iNroObjLocal-1].setIdCanal((char*)tSt.sIdCanal.arr);
		} 
        else 
        {
			if (oLocal) free(oLocal);
            ERROR(NRO_MEMORIA)
			throw TuxBasicSvcException(sNrMsg,MSG_MEMORIA);
            EXEC SQL CLOSE cPRMC;
		}
	}

    EXEC SQL CLOSE cPRMC;

	*iNroObjetos = iNroObjLocal - 1;
    ULOG_END("CPessoaCanalPreferido::RecuperarTodos()");
	return oLocal;

	// Tratamento de erro - Lança excessão com o código oracle do erro.
	sqlErrorLista:
	    ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
	    ULOG_END("CPessoaCanalPreferido::RecuperarTodos()");
		throw TuxBasicOraException(sqlca.sqlcode);
}

//-----------------------------------------------------------------------------------------
//* Especificacion:
//*     Nome: RecuperarPorIdPessoa
//*     Parametro: iNroObjetos = numero de objetos alocados.
//*                pParam = IdPessoa da tabela.
//*     Retorno: objeto = ponteiro com os objetos alocados
//*              sqlca.sqlcode = codigo de erro do proprio Oracle
//*
//-----------------------------------------------------------------------------------------
//* Purpose: Lista todas as linhas da view PessoaCanalPreferidob01.
//*
//-----------------------------------------------------------------------------------------
//* Process: Lista todas as linha da tabela por idPessoa e retorna um ponteiro com os objetos
//*          utilizando a view PessoaCanalPreferidob01;.
//*
//-----------------------------------------------------------------------------------------
CPessoaCanalPreferido* CPessoaCanalPreferido::RecuperarPorIdPessoa(int* iNroObjetos, char* pParam)
{
    ULOG_START("CPessoaCanalPreferido::RecuperarPorIdPessoa()");
    struct sqlca sqlca;

    CPessoaCanalPreferido* oLocal = NULL;
    int iNroObjLocal = 1;

	EXEC SQL BEGIN DECLARE SECTION;
        TTABELA_PCP tSt;
        VARCHAR sId[LEN_NUMBER + LEN_EOS];
	EXEC SQL END DECLARE SECTION;

    STRCPY_TO_ORA(sId, pParam);

	// Marca ponto de controle de erro
	EXEC SQL WHENEVER SQLERROR GOTO sqlErrorLista;

	// Declara e abre o cursor
	EXEC SQL DECLARE cC1 CURSOR FOR
	SELECT
	    CANAL.IDCANAL,
	    CANAL.NMCANAL
	FROM
	    CUSTOMER.PESSOACANALPREFERIDO PESSOACANALPREFERIDO,
	    APOIO.CANAL CANAL
	WHERE PESSOACANALPREFERIDO.IDCANAL = CANAL.IDCANAL
	AND   PESSOACANALPREFERIDO.IDPESSOA = :sId;

	EXEC SQL OPEN cC1;
	EXEC SQL WHENEVER NOT FOUND DO break;

	for (;; iNroObjLocal++) 
    {
        memset(&tSt, 0x00, sizeof(tSt));
		EXEC SQL FETCH cC1 
                  INTO :tSt.sIdCanal:tSt.iIdCanal_ora
                      ,:tSt.sDescricao:tSt.iDescricao_ora;

		// Aloca memória para o objeto atual.
		if ((oLocal = (CPessoaCanalPreferido*) realloc((void *)oLocal, (sizeof(CPessoaCanalPreferido) * iNroObjLocal))) != NULL)
        {
			oLocal[iNroObjLocal-1].setIdCanal((char*)tSt.sIdCanal.arr);
			oLocal[iNroObjLocal-1].setDescricao((char*)tSt.sDescricao.arr);
		} 
        else 
        {
			if (oLocal) 
				free(oLocal);

            ERROR(NRO_MEMORIA)
			throw TuxBasicSvcException(sNrMsg,MSG_MEMORIA);
            EXEC SQL CLOSE cC1;
		}
	}

    EXEC SQL CLOSE cC1;

	*iNroObjetos = iNroObjLocal - 1;
    ULOG_END("CPessoaCanalPreferido::RecuperarPorIdPessoa()");
	return oLocal;

	// Tratamento de erro - Lança excessão com o código oracle do erro.
	sqlErrorLista:
	    ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
	    ULOG_END("CPessoaCanalPreferido::RecuperarPorIdPessoa()");
		throw TuxBasicOraException(sqlca.sqlcode);
}


//-----------------------------------------------------------------------------------------
//* Especificacion:
//*     Nome: ExcluirPorPessoa
//*     Parametro: sDado = ponteiro de char contendo o Id Pessoa
//*     Retorno: OK = delecao na base ocorrida com sucesso
//*              sqlca.sqlcode = codigo de erro do proprio Oracle
//*
//-----------------------------------------------------------------------------------------
//* Purpose: Deleta registro(s) tabela PessoaCanalPreferido
//*
//-----------------------------------------------------------------------------------------
//* Process: Deleta registro a partir de um IdPessoa da tabela PessoaCanalPreferido
//*          utilizando a view pessoacanalpreferido
//*
//-----------------------------------------------------------------------------------------
int CPessoaCanalPreferido::ExcluirPorPessoa(char* sDado)
{
    ULOG_START("CPessoaCanalPreferido::ExcluirPorPessoa()");
    struct sqlca sqlca;

    EXEC SQL BEGIN DECLARE SECTION;
    VARCHAR sIdPessoa[LEN_NUMBER + LEN_EOS];
    EXEC SQL END DECLARE SECTION;

    STRCPY_TO_ORA(sIdPessoa, sDado);

	EXEC SQL WHENEVER SQLERROR	goto sqlErrorLista;
  	EXEC SQL WHENEVER NOT FOUND CONTINUE;

    /* Deleta os pais */
    EXEC SQL DELETE FROM customer.pessoacanalpreferido
                   WHERE idpessoa = :sIdPessoa;
  
    ULOG_END("CPessoaCanalPreferido::ExcluirPorPessoa()");
    if (sqlca.sqlerrd[2] == 0 )
        return NOK;
    else
        return OK;

	// Tratamento de erro - Lança excessão com o código oracle do erro.
	sqlErrorLista:
	    ULOGE("ERRO ORACLE -> sqlcode=%d,sqlerrmc=%.70s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
	    ULOG_END("CPessoaCanalPreferido::ExcluirPorPessoa()");
		throw TuxBasicOraException(sqlca.sqlcode);
}
