#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>

#include "tuxfw.h"
#include "TipoPessoapcPORT.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "PPGlobalPORT.h"
EXEC SQL END DECLARE SECTION;

/****************************************************************************************/
bool CTipoPessoapc::proCBuscaTipoPessoa(TTipoPessoa *ptTipoPessoa)
{
    ULOG_START("CTipoPessoapc::proCBuscaTipoPessoa");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdTipoPessoa[LEN_IDTIPOPESSOA];
        VARCHAR oszSgTipoPessoa[LEN_SGTIPOPESSOA];
        VARCHAR oszDsTipoPessoa[LEN_DSTIPOPESSOA];

        short iIdTipoPessoa = 0;
        short iSgTipoPessoa = 0;
        short iDsTipoPessoa = 0;
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszSgTipoPessoa, ptTipoPessoa->szSgTipoPessoa);

	EXEC SQL WHENEVER SQLERROR	goto erro;
	EXEC SQL WHENEVER NOT FOUND goto naoexiste;

	EXEC SQL
        SELECT
            atp.idtipopessoa,
            atp.sgtipopessoa,
            atp.dstipopessoa
        INTO
            :oszIdTipoPessoa:iIdTipoPessoa,
            :oszSgTipoPessoa:iSgTipoPessoa,
            :oszDsTipoPessoa:iDsTipoPessoa
        FROM
            apoio.tipopessoa atp
        WHERE
            atp.sgtipopessoa = :oszSgTipoPessoa;



    if(iIdTipoPessoa != -1) {
        STRCPY_FROM_ORA(ptTipoPessoa->szIdTipoPessoa, oszIdTipoPessoa);
    }
    if(iSgTipoPessoa != -1) {
        STRCPY_FROM_ORA(ptTipoPessoa->szSgTipoPessoa, oszSgTipoPessoa);
    }
    if(iDsTipoPessoa != -1) {
        STRCPY_FROM_ORA(ptTipoPessoa->szDsTipoPessoa, oszDsTipoPessoa);
    }

    ULOGI("Finalizando proCBuscaTipoPessoa <OK>");
    ULOG_END("CTipoPessoapc::proCBuscaTipoPessoa");
    return true;

    naoexiste:
        ULOGI("Finalizando proCBuscaTipoPessoa <NOT FOUND>");
        ULOG_END("CTipoPessoapc::proCBuscaTipoPessoa");
        return false;

    erro:
        ULOGE("Finalizando proCBuscaTipoPessoa <ERROR>");
        throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
