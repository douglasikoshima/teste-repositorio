#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>

#include "tuxfw.h"
#include "SexopcPORT.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "PPGlobalPORT.h"
EXEC SQL END DECLARE SECTION;

/****************************************************************************************/
bool CSexopc::proCBuscaSexo(TSexo *ptSexo)
{
    ULOG_START("CSexopc::proCBuscaSexo");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdSexo[LEN_IDSEXO];
        VARCHAR oszSgSexo[LEN_SGSEXO];
        VARCHAR oszDsSexo[LEN_DSSEXO];

        short iIdSexo = 0;
        short iSgSexo = 0;
        short iDsSexo = 0;
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszSgSexo, ptSexo->szSgSexo);

	EXEC SQL WHENEVER SQLERROR	goto erro;
	EXEC SQL WHENEVER NOT FOUND goto naoexiste;

	EXEC SQL
        SELECT
            asex.idsexo,
            asex.sgsexo,
            asex.dssexo
        INTO
            :oszIdSexo:iIdSexo,
            :oszSgSexo:iSgSexo,
            :oszDsSexo:iDsSexo
        FROM
            apoio.sexo asex
        WHERE
            asex.sgsexo = :oszSgSexo;



    if(iIdSexo != -1) {
        STRCPY_FROM_ORA(ptSexo->szIdSexo, oszIdSexo);
    }
    if(iSgSexo != -1) {
        STRCPY_FROM_ORA(ptSexo->szSgSexo, oszSgSexo);
    }
    if(iDsSexo != -1) {
        STRCPY_FROM_ORA(ptSexo->szDsSexo, oszDsSexo);
    }

    ULOGI("Finalizando proCBuscaSexo <OK>");
    ULOG_END("CSexopc::proCBuscaSexo");
    return true;

    naoexiste:
        ULOGI("Finalizando proCBuscaSexo <NOT FOUND>");
        ULOG_END("CSexopc::proCBuscaSexo");
        return false;

    erro:
        ULOGE("Finalizando proCBuscaSexo <ERROR>");
        throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
