#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>

#include "tuxfw.h"
#include "TipoCarteirapcPORT.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "PPGlobalPORT.h"
EXEC SQL END DECLARE SECTION;

/****************************************************************************************/
bool CTipoCarteirapc::proCBuscaTipoCarteira(TTipoCarteira *ptTipoCarteira)
{
    ULOG_START("CTipoCarteirapc::proCBuscaTipoCarteira");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdTipoCarteira[LEN_IDTIPOCARTEIRA];
        VARCHAR oszSgTipoCarteira[LEN_SGTIPOCARTEIRA];
        VARCHAR oszDsTipoCarteira[LEN_DSTIPOCARTEIRA];

        short iIdTipoCarteira = 0;
        short iSgTipoCarteira = 0;
        short iDsTipoCarteira = 0;
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszSgTipoCarteira, ptTipoCarteira->szSgTipoCarteira);

	EXEC SQL WHENEVER SQLERROR	goto erro;
	EXEC SQL WHENEVER NOT FOUND goto naoexiste;

	EXEC SQL
        SELECT
            atc.idtipocarteira,
            atc.sgtipocarteira,
            atc.dstipocarteira
        INTO
            :oszIdTipoCarteira:iIdTipoCarteira,
            :oszSgTipoCarteira:iSgTipoCarteira,
            :oszDsTipoCarteira:iDsTipoCarteira
        FROM
            apoio.tipocarteira atc
        WHERE
            atc.sgtipocarteira = :oszSgTipoCarteira;



    if(iIdTipoCarteira != -1) {
        STRCPY_FROM_ORA(ptTipoCarteira->szIdTipoCarteira, oszIdTipoCarteira);
    }
    if(iSgTipoCarteira != -1) {
        STRCPY_FROM_ORA(ptTipoCarteira->szSgTipoCarteira, oszSgTipoCarteira);
    }
    if(iDsTipoCarteira != -1) {
        STRCPY_FROM_ORA(ptTipoCarteira->szDsTipoCarteira, oszDsTipoCarteira);
    }

    ULOGI("Finalizando proCBuscaTipoCarteira <OK>");
    ULOG_END("CTipoCarteirapc::proCBuscaTipoCarteira");
    return true;

    naoexiste:
        ULOGI("Finalizando proCBuscaTipoCarteira <NOT FOUND>");
        ULOG_END("CTipoCarteirapc::proCBuscaTipoCarteira");
        return false;

    erro:
        ULOGE("Finalizando proCBuscaTipoCarteira <ERROR>");
        throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
