#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>

#include "tuxfw.h"
#include "CFOPpcPORT.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "PPGlobalPORT.h"
EXEC SQL END DECLARE SECTION;

/****************************************************************************************/
bool CCFOPpc::proCBuscaCFOP(TCFOP *ptCFOP)
{
    ULOG_START("CCFOPpc::proCBuscaCFOP");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdCFOP[LEN_IDCFOP];
        VARCHAR oszSgCFOP[LEN_SGCFOP];
        VARCHAR oszDsCFOP[LEN_DSCFOP];

        short iIdCFOP = 0;
        short iSgCFOP = 0;
        short iDsCFOP = 0;
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszSgCFOP, ptCFOP->szSgCFOP);

	EXEC SQL WHENEVER SQLERROR	goto erro;
	EXEC SQL WHENEVER NOT FOUND goto naoexiste;

	EXEC SQL
        SELECT
            cfop.idcfop,
            cfop.sgcfop,
            cfop.dscfop
        INTO
            :oszIdCFOP:iIdCFOP,
            :oszSgCFOP:iSgCFOP,
            :oszDsCFOP:iDsCFOP
        FROM
            apoio.cfop cfop
        WHERE
            cfop.sgcfop = :oszSgCFOP;



    if(iIdCFOP != -1) {
        STRCPY_FROM_ORA(ptCFOP->szIdCFOP, oszIdCFOP);
    }
    if(iSgCFOP != -1) {
        STRCPY_FROM_ORA(ptCFOP->szSgCFOP, oszSgCFOP);
    }
    if(iDsCFOP != -1) {
        STRCPY_FROM_ORA(ptCFOP->szDsCFOP, oszDsCFOP);
    }

    ULOGI("Finalizando proCBuscaCFOP <OK>");
    ULOG_END("CCFOPpc::proCBuscaCFOP");
    return true;

    naoexiste:
        ULOGI("Finalizando proCBuscaCFOP <NOT FOUND>");
        ULOG_END("CCFOPpc::proCBuscaCFOP");
        return false;

    erro:
        ULOGE("Finalizando proCBuscaCFOP <ERROR>");
        throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
