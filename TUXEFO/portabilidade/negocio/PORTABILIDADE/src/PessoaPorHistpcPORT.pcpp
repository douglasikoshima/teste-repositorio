#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>

#include "tuxfw.h"
#include "PessoaPorHistpcPORT.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "PPGlobalPORT.h"
EXEC SQL END DECLARE SECTION;

/****************************************************************************************/
void CPessoaPortabilidadeHistpc::proCInserePessoaPortabilidadeHist(TPessoaPortabilidadeHist *ptPessoaPortabilidadeHist)
{
    ULOG_START("CPessoaPortabilidadeHistpc::proCInserePessoaPortabilidadeHist");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdPessoaPortabilidadeHist[LEN_IDPESSOAPORTABILIDADEHISTPORT];
        VARCHAR oszIdTipoLinha[LEN_IDTIPOLINHAPORT];
        VARCHAR oszCdAreaRegistro[LEN_CDAREAREGISTROPORT];
        VARCHAR oszNrLinha[LEN_NRLINHAPORT];
        VARCHAR oszIdTipoPessoa[LEN_IDTIPOPESSOAPORT];
        VARCHAR oszNmPessoa[LEN_NMPESSOAPORT];
        VARCHAR oszIdTipoDocumento[LEN_IDTIPODOCUMENTOPORT];
        VARCHAR oszNrDocumento[LEN_NRDOCUMENTOPORT];
        VARCHAR oszIdTipoEndereco[LEN_IDTIPOENDERECOPORT];
        VARCHAR oszNmTipoLogradouro[LEN_NMTIPOLOGRADOUROPORT];
        VARCHAR oszNmLogradouro[LEN_NMLOGRADOUROPORT];
        VARCHAR oszNrEndereco[LEN_NRENDERECOPORT];
        VARCHAR oszNmMunicipio[LEN_NMMUNICIPIOPORT];
        VARCHAR oszNmBairro[LEN_NMBAIRROPORT];
        VARCHAR oszNrCep[LEN_NRCEPPORT];
        VARCHAR oszDsAcaoPortabilidade[LEN_DSACAOPORTABILIDADEPORT];
        VARCHAR oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAOPORT];
        VARCHAR oszSgTipoPortabilidade[LEN_SGTIPOPORTABILIDADEPORT];
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

    EXEC SQL WHENEVER SQLERROR goto erro;

	STRCPY_TO_ORA(oszIdTipoLinha, ptPessoaPortabilidadeHist->szIdTipoLinha);
	STRCPY_TO_ORA(oszCdAreaRegistro, ptPessoaPortabilidadeHist->szCdAreaRegistro);
	STRCPY_TO_ORA(oszNrLinha, ptPessoaPortabilidadeHist->szNrLinha);
	STRCPY_TO_ORA(oszIdTipoPessoa, ptPessoaPortabilidadeHist->szIdTipoPessoa);
	STRCPY_TO_ORA(oszNmPessoa, ptPessoaPortabilidadeHist->szNmPessoa);
	STRCPY_TO_ORA(oszIdTipoDocumento, ptPessoaPortabilidadeHist->szIdTipoDocumento);
	STRCPY_TO_ORA(oszNrDocumento, ptPessoaPortabilidadeHist->szNrDocumento);
	STRCPY_TO_ORA(oszIdTipoEndereco, ptPessoaPortabilidadeHist->szIdTipoEndereco);
	STRCPY_TO_ORA(oszNmTipoLogradouro, ptPessoaPortabilidadeHist->szNmTipoLogradouro);
	STRCPY_TO_ORA(oszNmLogradouro, ptPessoaPortabilidadeHist->szNmLogradouro);
	STRCPY_TO_ORA(oszNrEndereco, ptPessoaPortabilidadeHist->szNrEndereco);
	STRCPY_TO_ORA(oszNmMunicipio, ptPessoaPortabilidadeHist->szNmMunicipio);
	STRCPY_TO_ORA(oszNmBairro, ptPessoaPortabilidadeHist->szNmBairro);
	STRCPY_TO_ORA(oszNrCep, ptPessoaPortabilidadeHist->szNrCep);
	STRCPY_TO_ORA(oszDsAcaoPortabilidade, ptPessoaPortabilidadeHist->szDsAcaoPortabilidade);
	STRCPY_TO_ORA(oszIdUsuarioAlteracao, ptPessoaPortabilidadeHist->szIdUsuarioAlteracao);
	STRCPY_TO_ORA(oszSgTipoPortabilidade, ptPessoaPortabilidadeHist->szSgTipoPortabilidade);

    EXEC SQL SELECT customer.pessoaportabilidadehistsq.nextval INTO :oszIdPessoaPortabilidadeHist FROM DUAL;

    STRCPY_FROM_ORA(ptPessoaPortabilidadeHist->szIdPessoaPortabilidadeHist, oszIdPessoaPortabilidadeHist);

    EXEC SQL INSERT INTO customer.pessoaportabilidadehist
        ( 
            idpessoaportabilidadehist,
            idtipolinha,
            cdarearegistro,
            nrlinha,
            idtipopessoa,
            nmpessoa,
            idtipodocumento,
            nrdocumento,
            idtipoendereco,
            nmtipologradouro,
            nmlogradouro,
            nrendereco,
            nmmunicipio,
            nmbairro,
            nrcep,
            dsacaoportabilidade,
            idusuarioalteracao,
            dtultimaalteracao,
            sgtipoportabilidade
        )
        VALUES
        (
            :oszIdPessoaPortabilidadeHist,
            :oszIdTipoLinha,
            :oszCdAreaRegistro,
            :oszNrLinha,
            :oszIdTipoPessoa,
            :oszNmPessoa,
            :oszIdTipoDocumento,
            :oszNrDocumento,
            :oszIdTipoEndereco,
            :oszNmTipoLogradouro,
            :oszNmLogradouro,
            :oszNrEndereco,
            :oszNmMunicipio,
            :oszNmBairro,
            :oszNrCep,
            :oszDsAcaoPortabilidade,
            :oszIdUsuarioAlteracao,
            SYSDATE,
            :oszSgTipoPortabilidade
        );


    ULOGI("Finalizando proCInserePessoaPortabilidadeHist <OK>");
    ULOG_END("CPessoaPortabilidadeHistpc::proCInserePessoaPortabilidadeHist");
    return;

    erro:
        ULOGE("Finalizando proCInserePessoaPortabilidadeHist <ERROR>");
        throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
