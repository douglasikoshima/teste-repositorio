#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>

#include "tuxfw.h"
#include "FilaSetClientInfopcPORT.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "PPGlobalPORT.h"
EXEC SQL END DECLARE SECTION;

/****************************************************************************************/
bool CFilaSetClientInfopc::proCExisteFilaSetClientInfo(TFilaSetClientInfo tFilaSetClientInfo)
{
    ULOG_START("CFilaSetClientInfopc::proCExisteFilaSetClientInfo");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdLinhaTelefonica[LEN_IDLINHATELEFONICA];
        int iCount;
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    EXEC SQL WHENEVER SQLERROR goto erro;


    /* atribui valores para as variaveis ProC */
    STRCPY_TO_ORA(oszIdLinhaTelefonica, tFilaSetClientInfo.szIdLinhaTelefonica);

    EXEC SQL
        SELECT
            COUNT(1)
        INTO
            :iCount
        FROM
            infra.filasetclientinfo
        WHERE
            idlinhatelefonica = :oszIdLinhaTelefonica;


    ULOG("iCount(%d)", iCount);
    ULOG_END("CFilaSetClientInfopc::proCExisteFilaSetClientInfo");

    if(iCount > 0)
        return true;
     else
        return false;

    erro:
        ULOGE("Finalizando proCExisteFilaSetClientInfo <ERROR>");
        throw TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

/****************************************************************************************/
void CFilaSetClientInfopc::proCIncluiFilaSetClientInfo(TFilaSetClientInfo *ptFilaSetClientInfo)
{
    ULOG_START("CFilaSetClientInfopc::proCIncluiFilaSetClientInfo");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdLinhaTelefonica[LEN_IDLINHATELEFONICA];
        VARCHAR oszIdFilaSetClientInfo[LEN_IDFILASETCLIENTINFO];
        VARCHAR oszXml1[LEN_XML];
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    EXEC SQL WHENEVER SQLERROR goto erro;

    /* obtem sequence */
    EXEC SQL SELECT infra.filasetclientinfosq.nextval INTO :oszIdFilaSetClientInfo FROM DUAL;

    STRCPY_FROM_ORA(ptFilaSetClientInfo->szIdFilaSetClientInfo, oszIdFilaSetClientInfo);
    STRCPY_TO_ORA(oszIdLinhaTelefonica, ptFilaSetClientInfo->szIdLinhaTelefonica);
    STRCPY_TO_ORA(oszXml1, ptFilaSetClientInfo->szXml);


    EXEC SQL
        INSERT INTO infra.filasetclientinfo
        (
            idfilasetclientinfo,
            idlinhatelefonica,
            dttimestamp,
            xml1,
            interceptado
        )
        VALUES
        (
            :oszIdFilaSetClientInfo,
            :oszIdLinhaTelefonica,
            SYSDATE,
            :oszXml1,
            1
        );


    ULOGI("Finalizando proCIncluiFilaSetClientInfo <OK>");
    ULOG_END("CFilaSetClientInfopc::proCIncluiFilaSetClientInfo");
    return;

    erro:
        ULOGE("Finalizando proCIncluiFilaSetClientInfo <ERROR>");
        throw TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}

/****************************************************************************************/
void CFilaSetClientInfopc::proCAtualizaXmlFilaSetClientInfo(TFilaSetClientInfo tFilaSetClientInfo)
{
    ULOG_START("CFilaSetClientInfopc::proCAtualizaXmlFilaSetClientInfo");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdLinhaTelefonica[LEN_IDLINHATELEFONICA];
        VARCHAR oszXml1[LEN_XML];
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    EXEC SQL WHENEVER SQLERROR goto erro;


    /* atribui valores para as variaveis ProC */
    STRCPY_TO_ORA(oszIdLinhaTelefonica, tFilaSetClientInfo.szIdLinhaTelefonica);
    STRCPY_TO_ORA(oszXml1, tFilaSetClientInfo.szXml);

    EXEC SQL UPDATE infra.filasetclientinfo
        SET
            dttimestamp = SYSDATE,
            cderro = NULL,
            dserro = NULL,
            dterro = NULL,
            xml1 = :oszXml1
        WHERE
            idlinhatelefonica = :oszIdLinhaTelefonica;


    ULOGI("Finalizando proCAtualizaXmlFilaSetClientInfo <OK>");
    ULOG_END("CFilaSetClientInfopc::proCAtualizaXmlFilaSetClientInfo");
    return;

    erro:
        ULOGE("Finalizando proCAtualizaXmlFilaSetClientInfo <ERROR>");
        throw TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
