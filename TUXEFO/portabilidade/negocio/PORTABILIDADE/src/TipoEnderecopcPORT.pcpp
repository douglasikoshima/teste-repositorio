#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>

#include "tuxfw.h"
#include "TipoEnderecopcPORT.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "PPGlobalPORT.h"
EXEC SQL END DECLARE SECTION;

/****************************************************************************************/
bool CTipoEnderecopc::proCBuscaTipoEndereco(TTipoEndereco *ptTipoEndereco)
{
    ULOG_START("CTipoEnderecopc::proCBuscaTipoEndereco");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdTipoEndereco[LEN_IDTIPOENDERECO];
        VARCHAR oszSgTipoEndereco[LEN_SGTIPOENDERECO];
        VARCHAR oszDsTipoEndereco[LEN_DSTIPOENDERECO];

        short iIdTipoEndereco = 0;
        short iSgTipoEndereco = 0;
        short iDsTipoEndereco = 0;
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszSgTipoEndereco, ptTipoEndereco->szSgTipoEndereco);

	EXEC SQL WHENEVER SQLERROR	goto erro;
	EXEC SQL WHENEVER NOT FOUND goto naoexiste;

	EXEC SQL
        SELECT
            ate.idtipoendereco,
            ate.sgtipoendereco,
            ate.dstipoendereco
        INTO
            :oszIdTipoEndereco:iIdTipoEndereco,
            :oszSgTipoEndereco:iSgTipoEndereco,
            :oszDsTipoEndereco:iDsTipoEndereco
        FROM
            apoio.tipoendereco ate
        WHERE
            ate.sgtipoendereco = :oszSgTipoEndereco;



    if(iIdTipoEndereco != -1) {
        STRCPY_FROM_ORA(ptTipoEndereco->szIdTipoEndereco, oszIdTipoEndereco);
    }
    if(iSgTipoEndereco != -1) {
        STRCPY_FROM_ORA(ptTipoEndereco->szSgTipoEndereco, oszSgTipoEndereco);
    }
    if(iDsTipoEndereco != -1) {
        STRCPY_FROM_ORA(ptTipoEndereco->szDsTipoEndereco, oszDsTipoEndereco);
    }

    ULOGI("Finalizando proCBuscaTipoEndereco <OK>");
    ULOG_END("CTipoEnderecopc::proCBuscaTipoEndereco");
    return true;

    naoexiste:
        ULOGI("Finalizando proCBuscaTipoEndereco <NOT FOUND>");
        ULOG_END("CTipoEnderecopc::proCBuscaTipoEndereco");
        return false;

    erro:
        ULOGE("Finalizando proCBuscaTipoEndereco <ERROR>");
        throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
