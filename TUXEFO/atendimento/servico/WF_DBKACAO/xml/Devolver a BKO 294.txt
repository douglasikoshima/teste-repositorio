
// DBKACAO - Devolver a BKO - Script 294
                        
//Imports;
#import WFUsuario:PsqUsuario;					*
#import WFAtdUsuAtual:WFAtdUsAExcluir;			*
#import WFAtdUsuAtual:WFAtdUsAAlterar;			*
#import WFAtdUsuAtual:WFAtdUsAIncluir;			*
#import WFAtdUsuAtual:WFAtdUsAConsultar;		*
#import WFAtdGrupoAtual:WFAtdGrAAlterar;		*
#import WFAndamento:WFAndameIncluir;			*
#import WFAtdAndAtual:WFAtdAnAAlterar;			*
#import WFAndObservacao:WFAndObsIncluir;		*
#import WFAtdNivel:WFAtdNivIncluir;				*
#import WFAtdGrpDevol:WFAtdGrDExcluir;			*+
#import WFAtdGrpDevol:WFAtdGrDConsultar;		*+
#import WFAtdUsrDevol:WFAtdUsDExcluir;			*+
#import WFAtdUsrDevol:WFAtdUsDConsultar;		*+
#import WFAtendimento:WFAtendiAlterar;			*++
#import WFAndMotivo:WFAndMotIncluir;			*
#import WFAtdBaixaAtual:WFAtdBxAExcluir;		*+
#import WFAndTrf:WFAndTrfIncluir;				*
#import WFAndTrf:WFAndTrfAlterar;				*
#import WFAndTrf:WFObtemAndTrf;					*

//Definições;
DOMNODE domScript;
DOMNODE domWorkflow;
DOMNODE domTratWf;
DOMNODE domGrupo;
DOMNODE domMotivo;
DOMNODE paramAtdUs;
DOMNODE parametro;
DOMNODE paramAtdGr;
DOMNODE paramAtdNv;
DOMNODE parametroAnd;
DOMNODE parametroAndAt;
DOMNODE parametroAndOb;
DOMNODE paramAtd;
DOMNODE parametroAndMt;
DOMNODE paramProxAnd;
DOMNODE paramUltAnd;

XMLGen xmlObtemAtGrAt;
XMLGen xmlObtemAtUsAt;
XMLGen AtdUsrAt;
XMLGen AtdGrpAt;
XMLGen AtdNivel;
XMLGen AndAtual;
XMLGen AndamentoIns;
XMLGen Observacao;
XMLGen AtdGrpRecep;
XMLGen AtdUsrRecep;
XMLGen xmlAtendimento;
XMLGen usuario;
XMLGen Motivo;
XMLGen AtdBxaAt;
XMLGen AtdActUsrAt;
XMLGen xmlAltAndTrf;
XMLGen xmlIncAndTrf;
XMLGen xmlUltAndTrf;


string txt;
string urlDestino;
string txtProxAnd;
string txtUltAnd;

int proxAndamento;
int UsuarioAtual;
int idAgrEstTPrAt;
int idAgrEstTPrFt;
int idAtividade;
int idAtendimento;
int idGrupoAtual;
int idFaseSig;
int idAndamentoIns;
int idUsuAtual;
int estadoUsuario;
int idFase;

SQL SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI') DATAATUAL FROM DUAL;
SQL SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') DATAANDAMENTO FROM DUAL;
SQL SELECT VALORPARAMETRO PARAMETRO FROM APOIO.PARAMETROB00 WHERE IDPARAMETRO = 1;

domScript = XML:ScriptExecucaoVO;

UsuarioAtual = domScript:idPessoaUsuario;
idAtendimento = domScript:idAtendimento;
idAgrEstTPrFt = domScript:idAgrupamentoEstadoTProcFut;
idAgrEstTPrAt = domScript:idAgrupamentoEstadoTProcAt;
idAtividade = domScript:idAtividade;
urlDestino = domScript:nmUrlDestino;
idFase = domScript:idFase;

domTratWf = XML:AtendimentoWorkflowVO;
domWorkflow = domTratWf:AtendimentoWorkflowComumVO;
domMotivo = domWorkflow:WFMotivoVO;

//-------------

txt = "<EncaminhaFilaVO>\n";
txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
txt += "</EncaminhaFilaVO>\n";
parametro = txt;

// Obteniendo Grupo Receptor;
xmlObtemAtGrAt=WFAtdGrpDevol.WFAtdGrDConsultar(parametro);

if(xmlObtemAtGrAt)
	domGrupo = xmlObtemAtGrAt;
	idGrupoAtual = domGrupo:idGrupo;
fi;

// Eliminar el Usuario Atual;
Clean(txt);
// Gerando Entrada Inclusao;
txt = "<AtendimentoUsuarioAtualVO>\n";
txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
txt += "</AtendimentoUsuarioAtualVO>\n";
	
paramAtdUs = txt;
	
// Obteniendo Grupo Receptor; *****************************************
xmlObtemAtUsAt=WFAtdUsrDevol.WFAtdUsDConsultar(parametro);

if(xmlObtemAtUsAt)
	
	idUsuAtual = xmlObtemAtUsAt:idPessoaUsuario;

	Clean(txt);
	//** Consulta Estado do Atendente **;
	//;
	// Gerando Parametro de Entrada para Metodo de Consulta;
   	txt = "<EncaminhaFilaVO>\n";
   	txt += "<idPessoaUsuario>" + idUsuAtual + "</idPessoaUsuario>\n";
   	txt += "</EncaminhaFilaVO>\n";
   	parametro = txt;

   	// Consulta Estado do Atendente;
   	usuario = WFUsuario.PsqUsuario(parametro);
   	estadoUsuario = usuario:inDisponivelWF;
	
	Clean(txt);
	// Gerando Entrada Inclusao;
	txt = "<AtendimentoUsuarioAtualVO>\n";
	txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
	txt += "</AtendimentoUsuarioAtualVO>\n";
	
	paramAtdUs = txt;

  	if ( estadoUsuario > 2 )
	   	// Atendente Nao Logado;
		AtdUsrAt = WFAtdUsuAtual.WFAtdUsAExcluir(paramAtdUs);
	else
		
	 	// Inclui o Atendimento Transferencia;
		AtdUsrAt = WFAtdUsuAtual.WFAtdUsAConsultar(paramAtdUs);
	
	  	Clean(txt);
		// Gerando Entrada Inclusao;
		txt = "<AtendimentoUsuarioAtualVO>\n";
		txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
		txt += "<idPessoaUsuario>" + idUsuAtual + "</idPessoaUsuario>\n";
		txt += "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n";
		txt += "<inPausaAtendimento>0</inPausaAtendimento>\n";
		txt += "</AtendimentoUsuarioAtualVO>\n";
	
		paramAtdUs = txt;
		proxAndamento = 1;
		if (AtdUsrAt)
		 	// Atualiza o Usuario Atual;
			AtdActUsrAt = WFAtdUsuAtual.WFAtdUsAAlterar(paramAtdUs);
			
			// Atualiza o ultimo Andamento Transferencia
			xmlUltAndTrf = WFAndTrf.WFObtemAndTrf(paramAtdUs);
			
			if (xmlUltAndTrf)
				txtUltAnd = "<AtendimentoTransferenciaVO>\n";
				txtUltAnd += "<idAndamento>" + xmlUltAndTrf:idAndamento + "</idAndamento>\n";
				txtUltAnd += "<dtFinTransferencia>" + DATAATUAL + "</dtFinTransferencia>\n";
				txtUltAnd += "</AtendimentoTransferenciaVO>\n";
				
				paramUltAnd = txtUltAnd;
				xmlAltAndTrf = WFAndTrf.WFAndTrfAlterar(paramUltAnd);
			fi;
		
		else
			AtdActUsrAt = WFAtdUsuAtual.WFAtdUsAIncluir(paramAtdUs);
		fi;
				
	fi;
fi;

if (idGrupoAtual > 0)
	// Atualizando Grupo Atual;
	Clean(txt);
		
	// Gerando Entrada Inclusao;
	txt = "<AtendimentoGrupoAtualVO>\n";
	txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
	txt += "<idGrupo>" + idGrupoAtual + "</idGrupo>\n";
	txt += "<dtEntradaFila>" + DATAATUAL + "</dtEntradaFila>\n";
	txt += "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n";
	txt += "</AtendimentoGrupoAtualVO>\n";
		
	paramAtdGr = txt;
		
	// Inclui o Atendimento Transferencia;
	AtdGrpAt = WFAtdGrupoAtual.WFAtdGrAAlterar(paramAtdGr);
	
	// Inseriendo Nivel do Processo;
	Clean(txt);
	
	// Gerando Entrada Inclusao;
	txt = "<AtendimentoNivelVO>\n";
	txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
	txt += "<idGrupo>" + idGrupoAtual + "</idGrupo>\n";
	txt += "<idPessoaUsuario>" + UsuarioAtual + "</idPessoaUsuario>\n";
	txt += "<idFase>" + idFase + "</idFase>\n";
	txt += "<idAtividade>" + idAtividade + "</idAtividade>\n";
	txt += "<nrNivel>0</nrNivel>\n";
	txt += "<dtNivel>" + DATAATUAL + "</dtNivel>\n";
	txt += "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n";
	txt += "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n";
	txt += "</AtendimentoNivelVO>\n";
	
	paramAtdNv = txt;
	
	// Inclui o Atendimento Nivel;
	AtdNivel = WFAtdNivel.WFAtdNivIncluir(paramAtdNv);
	
	// Exclui o Atendimento Grupo Receptor;
	AtdGrpRecep = WFAtdGrpDevol.WFAtdGrDExcluir(paramAtdNv);
	
	// Exclui o Atendimento Usuario Receptor;
	AtdUsrRecep = WFAtdUsrDevol.WFAtdUsDExcluir(paramAtdNv);
	
	// Exclui o Atendimento Baixa Atual;
	AtdBxaAt = WFAtdBaixaAtual.WFAtdBxAExcluir(paramAtdNv);
fi;

// Atualizando Atendimento;
Clean(txt);

idFaseSig = idFase;
idFaseSig--;

// Gerando Entrada Inclusao;
txt = "<AtendimentoVO>\n";
txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
txt += "<idFase>" + idFaseSig + "</idFase>\n";
txt += "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n";
txt += "</AtendimentoVO>\n";

paramAtd = txt;

// Atualizando Atendimento;
xmlAtendimento = WFAtendimento.WFAtendiAlterar(paramAtd);

//;
//************* Inclusao do Andamento ********************;
//;
Clean(txt);

// Gerando Parametro de Entrada para Metodo de Inclusao;
txt = "<AndamentoVO>\n";
txt += "<idAtividade>" + idAtividade + "</idAtividade>\n";
txt += "<idAgrupamentoEstadoTpProc>" + idAgrEstTPrFt + "</idAgrupamentoEstadoTpProc>\n";
txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
txt += "<idPessoaUsuario>" + UsuarioAtual + "</idPessoaUsuario>\n";
txt += "<dtAndamento>" + DATAANDAMENTO + "</dtAndamento>\n";
txt += "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n";
txt += "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n";
txt += "</AndamentoVO>\n";

parametroAnd = txt;

// Inclui o atendimento;
AndamentoIns = WFAndamento.WFAndameIncluir(parametroAnd);
idAndamentoIns = AndamentoIns:idAndamento;

//;
//************* Atualiza Andamento Atual ********************;
//;
Clean(txt);

// Entrada para Alteracao;
txt = "<AndamentoAtualVO>";
txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
txt += "<idAndamento>" + idAndamentoIns + "</idAndamento>\n";
txt += "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n";
txt += "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n";
txt += "</AndamentoAtualVO>\n";

parametroAndAt = txt;

// Inclui o atendimento;
AndAtual = WFAtdAndAtual.WFAtdAnAAlterar(parametroAndAt);

//;
//********** Inclusao do Andamento Transferencia *************;
//;
if (proxAndamento > 0)
	txtProxAnd = "<AtendimentoTransferenciaVO>\n";
	txtProxAnd += "<idAndamento>" + idAndamentoIns + "</idAndamento>\n";
	txtProxAnd += "<dtInicioTransferencia>" + DATAATUAL + "</dtInicioTransferencia>\n";
	txtProxAnd += "</AtendimentoTransferenciaVO>\n";

	paramProxAnd = txtProxAnd;
	xmlIncAndTrf = WFAndTrf.WFAndTrfIncluir(paramProxAnd);
fi;

//;
//********** Inclusao do Andamento Observacao *************;
//;
Clean(txt);

// Gerando Entrada Inclusao;
txt = "<AndamentoObservacaoVO>";
txt += "<idAndamento>" + idAndamentoIns + "</idAndamento>\n";
txt += "<dsAndamentoObservacao>" + domWorkflow:dsObservacao + "</dsAndamentoObservacao>\n";
txt += "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n";
txt += "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n";
txt += "</AndamentoObservacaoVO>";

parametroAndOb = txt;

// Inclui o Atendimento Observacao;
Observacao = WFAndObservacao.WFAndObsIncluir(parametroAndOb);

//;
//********** Inclusao do Andamento Motivo *************;
//;
Clean(txt);

// Gerando Entrada Inclusao;
txt = "<AndamentoMotivoVO>";
txt += "<idAndamento>" + idAndamentoIns + "</idAndamento>\n";
txt += "<idMotivo>" + domMotivo:idMotivo + "</idMotivo>\n";
txt += "<idFase>" + idFase + "</idFase>\n";
txt += "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n";
txt += "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n";
txt += "</AndamentoMotivoVO>";

parametroAndMt = txt;

// Inclui o Atendimento Observacao;
Motivo = WFAndMotivo.WFAndMotIncluir(parametroAndMt);

//;
//*** FIM DE PROCESSO ***;
//;
Clean(txt);


//Retorna processamento;
txt = "<WFAcaoRetornoVO xmlns=\"workflow.fo.vivo.com.br/vo\">\n";
txt += "<acaoExecucao>S</acaoExecucao>\n";
txt += "<mensagem>Devolução a BKO Concluída</mensagem>\n";
txt += "<urlDestino>" + urlDestino + "</urlDestino>\n";
txt += "</WFAcaoRetornoVO>\n";


return txt; 
			