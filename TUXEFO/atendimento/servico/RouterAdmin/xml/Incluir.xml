<?xml version="1.0" encoding="ISO-8859-1"?>
<msg>
	<msgHdr>
		<user>02</user>
		<service>CustomService</service>
		<host>spobluis8041</host>
		<version>1.0</version>
		<corrid>000000002123E</corrid>
		<operation>I</operation>
		<entity>0000000001230</entity>
		<sequence>1234567890</sequence>
	</msgHdr>
	<msgBody>
		<data>
				<idRouterScript>104</idRouterScript>
				<nmScript>Cancelar Processo</nmScript>
				<vlScriptSource>
<![CDATA[
//Imports;
#import WFAndamento:WFAndameIncluir;
#import WFAtdAndAtual:WFAtdAnAIncluir;
#import WFAndObservacao:WFAndObsIncluir;
#import WFCancelamentoSolicitado:WFCanSolIncluir;
#import WFAgrEstTpProc:ProxAgrupamento;


//Definições;
string idAtendimento;
string idAtividade;
string Usuario;
string txt;
string idAndamento;
string TpProcIns;



DOMNODE parametro;

XMLGen Andamento;
XMLGen AndamObs;
XMLGen AndamentoAtual;
XMLGen CancelSolic;
//XMLGen Agrpto;




SQL SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI') DATAATUAL FROM DUAL;
Usuario = GetHdrData("user");

idAtividade = XML:idAtividade;
idAtendimento = XML:idAtendimento;


      //;
      //** Consulta Agrupamento Estado Proc **;
      //;
      // Entrada para Metodo de Consulta;
      RECORDSET rs;
      string str;
      
      str = "SELECT idAgrupamentoEstadoTpProc FROM atendimento.atendimentoAndamentoAtualb01 " +
                 "WHERE idAtendimento = " + idAtendimento;
      
      rs = OpenRecordset(str);
      
      txt  = "<CancelaProcessoVO>\n";
      txt += "<idAtividade>" + idAtividade + "</idAtividade>\n";
      txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
      txt += "<idAgrupamentoEstadoTpProc>" + rs.GetValue("idAgrupamentoEstadoTpProc") + "</idAgrupamentoEstadoTpProc>\n";
      txt += "</CancelaProcessoVO>\n";
      
      parametro = txt;
      
      //Agrpto = WFAgrEstTpProc.ProxAgrupamento(parametro);
      //TpProcIns = Agrpto:idAgrupamentoEstadoTpProc;
      TpProcIns = 5;
      
      
      
      //;
      //************* Inclusao do Andamento ********************;
      //;
      Clean(txt);
      
      // Gerando Parametro de Entrada para Metodo de Inclusao;
      txt  = "<CancelaProcessoVO>\n";
      txt += "<idAtividade>" + idAtividade + "</idAtividade>\n";
      txt += "<idAgrupamentoEstadoTpProc>" + TpProcIns + "</idAgrupamentoEstadoTpProc>\n";
      txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
      txt += "<idPessoaUsuario>" + Usuario + "</idPessoaUsuario>\n";
      txt += "<dtAndamento>" + DATAATUAL + "</dtAndamento>\n";
      txt += "<idUsuarioAlteracao>" + Usuario + "</idUsuarioAlteracao>\n";
      txt += "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n";
      txt += "</CancelaProcessoVO>\n";
      
      parametro = txt;
      Andamento = WFAndamento.WFAndameIncluir( parametro );
      idAndamento = Andamento:idAndamento;



      //;
      //************* Inclusao do Andamento Atual ********************;
      //;
      Clean(txt);
      
      // Gerando Parametro de Entrada para Metodo de Inclusao;
      txt  = "<CancelaProcessoVO>\n";
      txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
      txt += "<idAndamento>" + idAndamento + "</idAndamento>\n";
      txt += "<idUsuarioAlteracao>" + Usuario + "</idUsuarioAlteracao>\n";
      txt += "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n";
      txt += "</CancelaProcessoVO>\n";
      
      parametro = txt;
      
      AndamentoAtual = WFAtdAndAtual.WFAtdAnAIncluir( parametro );



      //;
      //********** Inclusao do Andamento Observacao *************;
      //;
      Clean(txt);
      
      // Gerando Entrada Inclusao;
      txt  = "<CancelaProcessoVO>";
      txt += "<idAndamento>" + idAndamento + "</idAndamento>\n";
      txt += "<dsAndamentoObservacao>" + XML:dsAndamentoObservacao + "</dsAndamentoObservacao>\n";
      txt += "<idUsuarioAlteracao>" + Usuario + "</idUsuarioAlteracao>\n";
      txt += "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n";
      txt += "</CancelaProcessoVO>";
      
      parametro = txt;
      
      // Inclui o Atendimento Observacao;
      AndamObs = WFAndObservacao.WFAndObsIncluir(parametro);



      //;
      //********** Inclusao Cancelamento Solicitado *************;
      //;
      Clean(txt);
      
      // Gerando Entrada Inclusao;
      txt  = "<CancelaProcessoVO>\n";
      txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
      txt += "<dtSolicitacaoCancelamento>" + DATAATUAL + "</dtSolicitacaoCancelamento>\n";
      txt += "<idPessoaUsuario>" + Usuario + "</idPessoaUsuario>\n";
      txt += "<idUsuarioAlteracao>" + Usuario + "</idUsuarioAlteracao>\n";
      txt += "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n";
      txt += "</CancelaProcessoVO>\n";
      
      parametro = txt;
      
      // Inclui o Atendimento Observacao;
      CancelSolic = WFCancelamentoSolicitado.WFCanSolIncluir( parametro );





//;
//*** FIM DE PROCESSO ***;
//;

//Retorna processamento;
      txt = "<WFAcaoRetornoVO xmlns="workflow.fo.vivo.com.br/vo">\n";
      txt += "<acaoExecucao>S</acaoExecucao>\n";
      txt += "<mensagem>Operação executada com Sucesso!</mensagem>\n";
      txt += "</WFAcaoRetornoVO>\n";
      return txt;
]]>
				</vlScriptSource>
				<inactive>1</inactive>	
				</data>
	</msgBody>
</msg>
				
				
				