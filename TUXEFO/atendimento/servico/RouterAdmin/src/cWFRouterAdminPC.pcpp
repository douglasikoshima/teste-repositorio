#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>
#include<sqlda.h>

#include"../../../commons/queryMacro.h"


#include "../include/cWFRouterAdmin.h"
#include "../include/stWFRouterAdmin.h"

void sql_error_WFRouterAdmin(sqlca*sqlca);

	// Declara as estruturas compatíveis ao ProC.
    EXEC SQL BEGIN DECLARE SECTION;
		#include "../include/stWFRouterAdmin.h"
    EXEC SQL END DECLARE SECTION;

bool proCIncluirScript(st_RouterAdmin* dados, st_vlRouterAdmin* status, XMLGen* saida)
{

	struct sqlca sqlca;

    EXEC SQL BEGIN DECLARE SECTION;

		struct st_RouterAdmin   oDados;
		struct st_vlRouterAdmin oStatus;

	EXEC SQL END DECLARE SECTION;

	memcpy(&oDados,  dados,  sizeof(oDados));
	memcpy(&oStatus, status, sizeof(oStatus));

    EXEC SQL WHENEVER SQLERROR  DO sql_error_WFRouterAdmin(&sqlca);

	EXEC SQL SELECT workflow.RouterScriptSQ.NEXTVAL INTO :oDados.idRouterScript FROM DUAL;

	EXEC SQL
		INSERT INTO
			workflow.RouterScript
			(
				idRouterScript,
				nmScript,
				vlScriptSource,
				inactive
			)
			VALUES
			(
				:oDados.idRouterScript,
				:oDados.nmScript,
				:oDados.vlScriptSource,
				:oDados.inactive
			);

	saida->createTag("WFRouterAdminVO");
		saida->addItem("idRouterScript", oDados.idRouterScript);
	saida->closeTag();

	return true;
}

bool proCAlterarScript(st_RouterAdmin* dados, st_vlRouterAdmin* status, XMLGen* saida)
{

	struct sqlca sqlca;

    EXEC SQL BEGIN DECLARE SECTION;

		struct st_RouterAdmin   oDados;
		struct st_vlRouterAdmin oStatus;

	EXEC SQL END DECLARE SECTION;

	memcpy(&oDados,  dados,  sizeof(oDados));
	memcpy(&oStatus, status, sizeof(oStatus));

    EXEC SQL WHENEVER SQLERROR  DO sql_error_WFRouterAdmin(&sqlca);

	EXEC SQL
		UPDATE
			workflow.RouterScript
		SET
			nmScript = :oDados.nmScript,
			vlScriptSource = :oDados.vlScriptSource,
			inactive = :oDados.inactive
		WHERE
			idRouterScript = :oDados.idRouterScript;

	saida->createTag("WFRouterAdminVO");
		saida->addItem("idRouterScript", oDados.idRouterScript);
	saida->closeTag();

	return true;
}


void sql_error_WFRouterAdmin(sqlca*sqlca)
{
    ULOGE("sql_error_WFAtdInBoxAdq:sqlcode=%d,sqlerrmc=%.70s"
                            ,sqlca->sqlcode
                            ,sqlca->sqlerrm.sqlerrmc);

    throw new TuxBasicOraException(sqlca->sqlcode,sqlca->sqlerrm.sqlerrmc,sqlca->sqlerrm.sqlerrml);
}
