 /**
 * @modulo  Atendimento
 * @author  Unknowed
 * @version $Revision: 1.1 $
 * @CVS     $Author: a5110702 $ - $Date: 2009/07/31 15:33:36 $
 **/

#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>
#include<sqlda.h>

#include <tuxfw.h>

#include"../../../commons/queryMacro.h"

void sql_error_WFPesquisaTabelaSegmentacao( sqlca * sqlca );

bool proCPesquisaTabelaSegmentacao( DOMNode*entrada,XMLGen* saida )
{
	TuxHelper tx;
    char *p = entrada ? tx.walkTree( entrada, "idTabelaSegmentacao", 0 ) : 0;
	struct sqlca sqlca;

   EXEC SQL BEGIN DECLARE SECTION;

		int idTabelaSegmentacao = 0;

		int idSegmentacao;
		VARCHAR dsSegmentacao[256];

		short i_idSegmentacao;
		short i_dsSegmentacao;
		
      char query[1025];

   EXEC SQL END DECLARE SECTION;

   if ( p )
   {
      idTabelaSegmentacao = atoi(p);
      XMLString::release(&p);
   }

   if ( idTabelaSegmentacao > 0 )
   {
      strcpy( query, "SELECT idSegmentacao, dsSegmentacao "
                       "FROM Apoio.Segmentacao "
                      "WHERE idSegmentacao = :idTabelaSegmentacao "
                      "ORDER BY UPPER(dsSegmentacao)");
   }
   else
   {
      strcpy( query, "SELECT idSegmentacao, dsSegmentacao "
                       "FROM Apoio.Segmentacao "
                      "WHERE idSegmentacao > 0 "
                      "ORDER BY UPPER(dsSegmentacao)");
   }
   
   EXEC SQL WHENEVER SQLERROR  DO sql_error_WFPesquisaTabelaSegmentacao(&sqlca);
   EXEC SQL WHENEVER NOT FOUND DO BREAK;

   EXEC SQL PREPARE consultaSegmentacao FROM :query;
   EXEC SQL DECLARE consulta CURSOR FOR consultaSegmentacao;
   
   EXEC SQL OPEN consulta;
   while (true)
	{
		EXEC SQL FETCH consulta INTO idSegmentacao:i_idSegmentacao, 
		                             dsSegmentacao:i_dsSegmentacao;

      CONVIND( dsSegmentacao,i_dsSegmentacao );
      
      saida->createTag("WFRelatoriosFiltroSegmentoVO");
      	saida->addItem( "idSegmento",idSegmentacao );
      	saida->addItem( "dsSegmento",(char *)dsSegmentacao.arr );
      saida->closeTag();
   }
   EXEC SQL CLOSE consulta;
      
	return true;

}


void sql_error_WFPesquisaTabelaSegmentacao( sqlca * sqlca )
{
        ULOGE("sql_error_WFAtdInBoxAdq:sqlcode=%d,sqlerrmc=%.70s"
                            ,sqlca->sqlcode
                            ,sqlca->sqlerrm.sqlerrmc);

	throw new TuxBasicOraException(sqlca->sqlcode,sqlca->sqlerrm.sqlerrmc,sqlca->sqlerrm.sqlerrml);
}
