/**
 * 
 * @modulo  Workflow
 * @usecase Workflow
 * @author  Cassio M Garcia
 * @version $Revision: 1.1 $
 * @CVS     $Author: a5110702 $ - $Date: 2009/07/31 15:34:31 $
 **/

#undef SQLCA
#define SQLCA_NONE
#include <sqlca.h>
#include <sqlda.h>

#include "../../../commons/queryMacro.h"
#include "../../../commons/msgPadrao.h"
#include "../include/cWFAtdDetFsSen.h"

void WFAtdDetFsSen(sqlca*sqlca);

bool proCObterIdTipoLinha(int *_idTipoLinha,char *_idPessoaLinhaHistorico)
{
    ULOG_START("proCObterIdTipoLinha()");

    struct sqlca sqlca;

    *_idTipoLinha = 0;

    EXEC SQL BEGIN DECLARE SECTION;
        char *idPessoaLinhaHistorico = _idPessoaLinhaHistorico;
        int idTipoLinha;
        short i_idTipoLinha;
    EXEC SQL END DECLARE SECTION;

    EXEC SQL WHENEVER NOT FOUND GO TO tipoLinhaNotFound;
    EXEC SQL WHENEVER SQLERROR DO WFAtdDetFsSen(&sqlca);

    ULOG("idPessoaLinhaHistorico=%d",idPessoaLinhaHistorico);

    EXEC SQL 
        SELECT
            LT.IDTIPOLINHA IDTIPOLINHA
        INTO
            idTipoLinha:i_idTipoLinha
        FROM
            CUSTOMER.PESSOALINHAHISTORICO PL
           ,LINHA.LINHATELEFONICA LT
        WHERE
            PL.IDLINHATELEFONICA = LT.IDLINHATELEFONICA
        AND PL.IDPESSOALINHAHISTORICO = :idPessoaLinhaHistorico
        AND ROWNUM < 2;

    *_idTipoLinha = idTipoLinha;

tipoLinhaNotFound:

    ULOG_END("proCObterIdTipoLinha()");;

    return true;
}


void WFAtdDetFsSen(sqlca*sqlca)
{
    EXEC SQL WHENEVER NOT FOUND CONTINUE;

    ULOGE("WFAtdDetFsSen:sqlcode=%d,sqlerrmc=%.70s"
                              ,sqlca->sqlcode
                              ,sqlca->sqlerrm.sqlerrmc);

    throw new TuxBasicOraException(sqlca->sqlcode
                                  ,sqlca->sqlerrm.sqlerrmc
                                  ,sqlca->sqlerrm.sqlerrml);
}
