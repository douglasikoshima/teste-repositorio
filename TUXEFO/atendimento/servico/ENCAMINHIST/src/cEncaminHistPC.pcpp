
#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>
#include<sqlda.h>

#include "../include/cEncaminHist.h"

// Prototipos
void SqlError( sqlca * sqlca );
int proCAtualizaHistorico( const unsigned long idGrupoPrm, char * sMsgOut, const char * sUsuarioPrm );

/*---------------------------------------------------------*/
int proCAtualizaHistorico( const unsigned long idGrupoPrm, char * sMsgOut, const char * sUsuarioPrm )
{
    ULOG_START("proCAtualizaHistorico()");

    struct sqlca sqlca;
	
	EXEC SQL BEGIN DECLARE SECTION;

        unsigned long idGrupo = idGrupoPrm;
        VARCHAR  sMsg[256];
        const char * pUsuario = sUsuarioPrm ? sUsuarioPrm : "";
        short i_sMsg;

	EXEC SQL END DECLARE SECTION;

    EXEC SQL WHENEVER SQLERROR DO SqlError( &sqlca );

    sMsg.arr[0] = 0x0;
    sMsg.len = 0;
    ULOG( "idGrupo [%lu] - Usuario [%s]", idGrupo, pUsuario );
    
    //EXEC SQL CALL ContatoAdm.Encaminhamentopkg.pcEncamGrupos( :idGrupo, :sMsg:i_sMsg, :pUsuario );

    sprintf( sMsgOut, "%.*s",sMsg.len,(char *)&sMsg.arr );

    ULOG_END("proCAtualizaHistorico()");


    return 0;
}



void SqlError( sqlca * sqlca )
{
    ULOGE("SqlError -> sqlcode=%d,sqlerrmc=%.70s",sqlca->sqlcode,sqlca->sqlerrm.sqlerrmc);
	throw new TuxBasicOraException(sqlca->sqlcode
                                  ,sqlca->sqlerrm.sqlerrmc
                                  ,sqlca->sqlerrm.sqlerrml);
}
