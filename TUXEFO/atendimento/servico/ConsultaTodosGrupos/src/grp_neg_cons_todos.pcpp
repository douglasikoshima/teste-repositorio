#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>
#include<sqlda.h>

#include <tuxfw.h>
#include "../../../commons/queryMacro.h"

int Grupo_SelecionarTodos(DOMNode*dnode, XMLGen*xml_g)
{
   ULOG_START("Grupo_SelecionarTodos()");  
	struct sqlca sqlca; TuxHelper tuxHelper; int base = 10;

	EXEC SQL BEGIN DECLARE SECTION;

		struct vo_grupo_struct
        {
			VARCHAR idgrupo[21+1]; 
			VARCHAR nmgrupo[255+1];
		} ORA_sql_grupo;

		struct vo_ind_grupo_struct
        {
		  short idgrupo; 
		  short nmgrupo;
		} ORA_sql_ind_grupo;

		char sql_like[255];
        char query[512];
		
	EXEC SQL END DECLARE SECTION;
	
	char* pcTag;
	char  cnmGrupo[255+1];

	memset( &ORA_sql_ind_grupo, 0, sizeof(vo_ind_grupo_struct));
	memset( cnmGrupo, 0, sizeof(cnmGrupo));

	pcTag = tuxHelper.walkTree(dnode,"nmgrupo",0);
	if( pcTag )
    {
		strcpy( cnmGrupo, pcTag );
        XMLString::release(&pcTag);
    }
	
	sqlca.sqlcode=0;
	
   ULOG("Grupo_SelecionarTodos::cnmGrupo[%s]", cnmGrupo );
	if( strlen( cnmGrupo ) > 0 )
    {
		strcpy( sql_like, cnmGrupo );
		strcat( sql_like, "%" );

        sprintf(query,
		        "SELECT "
			        "IDGRUPO, "
			        "NMGRUPO "
		        "FROM "
		        	"ACESSO.GRUPO "
		        "WHERE "
		        	"UPPER(NMGRUPO) LIKE UPPER('%s') "
		        "AND "
		        	"DTEXCLUSAO IS NULL "
		        "AND "
		        	"IDGRUPO > 0 "
		        "AND "
		        	"IDTIPOGRUPO != ( SELECT IDTIPOGRUPO FROM APOIO.TIPOGRUPO WHERE CDTIPOGRUPO = 'CRI' ) "
	            "ORDER "
	            	"BY UPPER(NMGRUPO) ", sql_like );
	}
    else
    {
		strcpy(query,
		        "SELECT "
			        "IDGRUPO, "
			        "NMGRUPO "
		        "FROM "
		        	"ACESSO.GRUPO "
		        "WHERE "
		        	"DTEXCLUSAO IS NULL "
		        "AND "
		        	"IDGRUPO > 0 "
		        "AND "
		        	"IDTIPOGRUPO != ( SELECT IDTIPOGRUPO FROM APOIO.TIPOGRUPO WHERE CDTIPOGRUPO = 'CRI' ) "
	            "ORDER BY "
	            	"UPPER(NMGRUPO) " );
	}

    ULOG("Grupo_SelecionarTodos[%s]", query );

	EXEC SQL PREPARE query_cons_todos_grupos FROM :query;
	EXEC SQL DECLARE cursor_cons_todos_grupos CURSOR FOR query_cons_todos_grupos;

	EXEC SQL OPEN cursor_cons_todos_grupos;

	EXEC SQL WHENEVER NOT FOUND DO BREAK;
	EXEC SQL WHENEVER SQLERROR GOTO ErrorF;
	
	if(sqlca.sqlcode)
    {
		return 0;
    }
	else
	{
        xml_g->createTag("GrupoProcessoVO");
        xml_g->addProp( "xmlns","admsistemas.fo.vivo.com.br/vo" );
        xml_g->createTag("ArvoreContatoVO");
        xml_g->closeTag();

        for(;;)
        {
			memset( &ORA_sql_grupo, 0, sizeof(vo_grupo_struct));
	        EXEC SQL 
	        FETCH 
	        	cursor_cons_todos_grupos 
            INTO 
            	:ORA_sql_grupo:ORA_sql_ind_grupo;

   	        xml_g->createTag("GrupoVO");
      	        xml_g->addItem("codigo"   ,(char*)ORA_sql_grupo.idgrupo.arr);
      	        xml_g->addItem("descricao",(char*)ORA_sql_grupo.nmgrupo.arr);
   	        xml_g->closeTag();
        }

        xml_g->closeTag();
        EXEC SQL CLOSE cursor_cons_todos_grupos;
        ULOG_END("Grupo_SelecionarTodos()");  
        return 1;
	}

ErrorF:
	throw new TuxBasicOraException(sqlca.sqlcode
                                  ,sqlca.sqlerrm.sqlerrmc
                                  ,sqlca.sqlerrm.sqlerrml);
}
