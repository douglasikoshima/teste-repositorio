#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <sqlda.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <tuxfw.h>

extern int RemoveSkillParametros( const char *pzcIdGrupoSkill );

int RemoveSegmentacao( const char *whereClause )
{
   ULOG_START("RemoveSegmentacao()");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
		int ORA_where;
	EXEC SQL END DECLARE SECTION;
	
	ORA_where = atoi( whereClause );


   EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
   EXEC SQL DELETE FROM contatoadm.SegmentacaoGrupo 
         WHERE idGrupo = :ORA_where;

	if( sqlca.sqlcode )
	{
     if( sqlca.sqlcode != -1403 && sqlca.sqlcode != 1403 )
        throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);
	}
	else
	{
	   ULOG_END("RemoveSegmentacao()");
	   return 1;
	}

UndefinedError:
        if( sqlca.sqlcode != -1403 && sqlca.sqlcode != 1403 )
           throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);
        return 1;
}

int RemoveSkillSegmentacao( const char *pzcIdGrupo )
{
   ULOG_START("RemoveSkillSegmentacao()");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
		int iIdGrupo;
		VARCHAR stidGrupoSkill[21+1];
		short sidGrupoSkill;
		int iTotalAtual;
		int iTotalNovo;
	EXEC SQL END DECLARE SECTION;

	iIdGrupo = atoi( pzcIdGrupo );

	EXEC SQL WHENEVER NOT FOUND DO break;
	EXEC SQL WHENEVER SQLERROR GOTO GotoRemoveSkillSegmentacao;
	
	//Recupera todos os Skills de um grupo
	EXEC SQL
	DECLARE 
		CurRemoveSegmentacao CURSOR FOR
	SELECT
		IDGRUPOSKILL
	FROM
		ACESSO.GRUPOSKILL GRUPOSKILL
	WHERE
		IDGRUPO = :iIdGrupo
	AND
		IDGRUPOSKILL = ( SELECT IDGRUPOSKILL FROM ACESSO.TIPOLINHAGRUPOSKILL WHERE IDGRUPOSKILL = GRUPOSKILL.IDGRUPOSKILL AND ROWNUM < 2);

	//Na busca acima eh realizada uma pesquisa validando se o skill tem ou nao parametros, não precisa
	//verificar todas as tabelas, pois ou ele tem parametros em todas as nove tabelas ou em nenhuma
	//entao eu soh verifico em canalgruposkill, eu escolhi a tabela ACESSO.TIPOLINHAGRUPOSKILL porque
	//ela tem poucos registros em relacao as outras

	EXEC SQL OPEN CurRemoveSegmentacao;
	
	for(;;)
	{
		memset( &stidGrupoSkill, 0, sizeof( stidGrupoSkill ) );
		EXEC SQL
		FETCH
			CurRemoveSegmentacao
		INTO
			:stidGrupoSkill:sidGrupoSkill;
			
		EXEC SQL WHENEVER NOT FOUND CONTINUE;
		iTotalAtual = 0;
		iTotalNovo = 0;
		//Verifica quantas variaveis tem cada Skill
		EXEC SQL
		SELECT
			COUNT(1)
		INTO
			:iTotalAtual
		FROM
			ACESSO.SEGMENTACAOGRUPOSKILL
		WHERE
			IDGRUPOSKILL = :stidGrupoSkill;

		//Verifica quantas variaveis apartir do filtro das variaveis do grupo
		EXEC SQL
		SELECT
			COUNT(1)
		INTO
			:iTotalNovo
		FROM
			ACESSO.SEGMENTACAOGRUPOSKILL
		WHERE
			IDGRUPOSKILL = :stidGrupoSkill
		AND
			IDSEGMENTACAO IN 
			( 
				SELECT
					IDSEGMENTACAO
				FROM
					CONTATOADM.SEGMENTACAOGRUPO
				WHERE
					IDGRUPO = :iIdGrupo
			);

		//se iTotalAtual > iTotalNovo, quer dizer que alguma variável que este perfil
		//utiliza foi apaga do grupo, entao apaga o perfil
		ULOG( "IDGRUPOSKILL[%s]", (char*)stidGrupoSkill.arr );
		ULOG( "iTotalAtual[%d] > iTotalNovo[%d]", iTotalAtual, iTotalNovo );
		if( iTotalAtual > iTotalNovo )
		{
			ULOG( "Removendo os skills RemoveSkillParametros(%s)", (char*)stidGrupoSkill.arr );
			//deletando variáveis de SKILL
			RemoveSkillParametros( (char*)stidGrupoSkill.arr );
		}

	}//for(;;)
	EXEC SQL CLOSE CurRemoveSegmentacao;
	
	ULOG_END("RemoveSkillSegmentacao()");
	return 1;
	
GotoRemoveSkillSegmentacao:
	throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);
}
