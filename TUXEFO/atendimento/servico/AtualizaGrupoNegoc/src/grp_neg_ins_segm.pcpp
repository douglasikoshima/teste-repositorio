#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <sqlda.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <tuxfw.h>

class TuxHelperImpl:public TuxHelper
{
public:
	DOMNode * walkDOMImpl( DOMNode*a , char*b , int*c , int d )
	{
		return walkDOM( a , b , c , d );
	}
};



int InsereSegmentacao( const char * idParam, DOMNode *dnode )
{
   ULOG_START("InsereSegmentacao()");
	DOMNode *pNoCodigo;
	struct sqlca sqlca;
	TuxHelper tuxHelper;
	TuxHelperImpl tuxhelperIMPL;

	char * pCodGrupoTmp;

	EXEC SQL BEGIN DECLARE SECTION;
	struct vo_segmen_struct 
	{
			int idGrupo;
			int idSegmentacao;
	} ORA_sql_segmen;
	EXEC SQL END DECLARE SECTION;

  	memset( &ORA_sql_segmen, 0x0, sizeof(vo_segmen_struct));
	sqlca.sqlcode=0;
    

    ORA_sql_segmen.idGrupo = atoi( idParam );
    EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
    
   /*
	 * Pega todos os codigos de Procedencia
	 */
	int SubnoAtual = 0;
	int Subno = 0;
	for ( ;; )  
	{
	   Subno = 0;
		pNoCodigo = tuxhelperIMPL.walkDOMImpl( dnode,"SegmentacaoVO",&Subno,SubnoAtual++ );
		if ( pNoCodigo == NULL )
		{
		   ULOG_END("InsereSegmentacao() -> pNoCodigo == NULL  return 1");
		   return 1;
		}

      pCodGrupoTmp = tuxHelper.walkTree( pNoCodigo,"codigo",0 );
		if ( pCodGrupoTmp == NULL )
		   break;
      ORA_sql_segmen.idSegmentacao = atoi( pCodGrupoTmp );
      XMLString::release(&pCodGrupoTmp);

		EXEC SQL INSERT INTO contatoadm.SegmentacaoGrupo 
			 ( idSegmentacaoGrupo , idGrupo , idSegmentacao )
		VALUES
			 ( contatoadm.segmentacaogrupoSQ.nextval , :ORA_sql_segmen.idGrupo , :ORA_sql_segmen.idSegmentacao );
		if( sqlca.sqlcode )
		{
		   ULOG_END("InsereSegmentacao() -> sqlca.sqlcode > 0   return 0");
			return 0;
		}
    }
    ULOG_END("InsereSegmentacao() -> return 1");
    return 1;

UndefinedError:
        throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);
			
}
