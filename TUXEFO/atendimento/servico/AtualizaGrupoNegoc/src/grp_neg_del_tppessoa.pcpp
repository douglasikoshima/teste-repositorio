#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <sqlda.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <tuxfw.h>

extern int RemoveSkillParametros( const char *pzcIdGrupoSkill );

int RemoveTipoPessoa( const char * idParam )
{
   ULOG_START("RemoveTipoPessoa()");
   
   struct sqlca sqlca;
   
   EXEC SQL BEGIN DECLARE SECTION;
      int idGrupoParam;
   EXEC SQL END DECLARE SECTION;

   idGrupoParam = atoi( idParam );

   EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
   EXEC SQL DELETE FROM Contatoadm.TipoPessoaGrupo
         WHERE idGrupo = :idGrupoParam;

   if( sqlca.sqlcode )
   {
     if( sqlca.sqlcode != -1403 && sqlca.sqlcode != 1403 )
        throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);
   }
   else
   {
      ULOG_END("RemoveTipoPessoa()");
      return 1;
   }

UndefinedError:
        if( sqlca.sqlcode != -1403 && sqlca.sqlcode != 1403 )
           throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);
        return 1;
}

int RemoveSkillTipoPessoa( const char *pzcIdGrupo )
{
   ULOG_START("RemoveSkillTipoPessoa()");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
		int iIdGrupo;
		VARCHAR stidGrupoSkill[21+1];
		short sidGrupoSkill;
		int iTotalAtual;
		int iTotalNovo;
	EXEC SQL END DECLARE SECTION;

	iIdGrupo = atoi( pzcIdGrupo );

	EXEC SQL WHENEVER NOT FOUND DO break;
	EXEC SQL WHENEVER SQLERROR GOTO GotoRemoveSkillTipoPessoa;
	
	//Recupera todos os Skills de um grupo
	EXEC SQL
	DECLARE 
		CurRemoveSkillTipoPessoa CURSOR FOR
	SELECT
		IDGRUPOSKILL
	FROM
		ACESSO.GRUPOSKILL GRUPOSKILL
	WHERE
		IDGRUPO = :iIdGrupo
	AND
		IDGRUPOSKILL = ( SELECT IDGRUPOSKILL FROM ACESSO.TIPOLINHAGRUPOSKILL WHERE IDGRUPOSKILL = GRUPOSKILL.IDGRUPOSKILL AND ROWNUM < 2);

	//Na busca acima eh realizada uma pesquisa validando se o skill tem ou nao parametros, não precisa
	//verificar todas as tabelas, pois ou ele tem parametros em todas as nove tabelas ou em nenhuma
	//entao eu soh verifico em canalgruposkill, eu escolhi a tabela ACESSO.TIPOLINHAGRUPOSKILL porque
	//ela tem poucos registros em relacao as outras

	EXEC SQL OPEN CurRemoveSkillTipoPessoa;
	
	for(;;)
	{
		memset( &stidGrupoSkill, 0, sizeof( stidGrupoSkill ) );
		EXEC SQL
		FETCH
			CurRemoveSkillTipoPessoa
		INTO
			:stidGrupoSkill:sidGrupoSkill;
			
		EXEC SQL WHENEVER NOT FOUND CONTINUE;
		iTotalAtual = 0;
		iTotalNovo = 0;
		//Verifica quantas variaveis tem cada Skill
		EXEC SQL
		SELECT
			COUNT(1)
		INTO
			:iTotalAtual
		FROM
			ACESSO.TIPOPESSOAGRUPOSKILL
		WHERE
			IDGRUPOSKILL = :stidGrupoSkill;

		//Verifica quantas variaveis apartir do filtro das variaveis do grupo
		EXEC SQL
		SELECT
			COUNT(1)
		INTO
			:iTotalNovo
		FROM
			ACESSO.TIPOPESSOAGRUPOSKILL
		WHERE
			IDGRUPOSKILL = :stidGrupoSkill
		AND
			IDTIPOPESSOA IN 
			( 
				SELECT
					IDTIPOPESSOA
				FROM
					CONTATOADM.TIPOPESSOAGRUPO
				WHERE
					IDGRUPO = :iIdGrupo
			);

		//se iTotalAtual > iTotalNovo, quer dizer que alguma variável que este perfil
		//utiliza foi apaga do grupo, entao apaga o perfil
		ULOG( "IDGRUPOSKILL[%s]", (char*)stidGrupoSkill.arr );
		ULOG( "iTotalAtual[%d] > iTotalNovo[%d]", iTotalAtual, iTotalNovo );
		if( iTotalAtual > iTotalNovo )
		{
			ULOG( "Removendo os skills RemoveSkillParametros(%s)", (char*)stidGrupoSkill.arr );
			//deletando variáveis de SKILL
			RemoveSkillParametros( (char*)stidGrupoSkill.arr );
		}

	}//for(;;)
	EXEC SQL CLOSE CurRemoveSkillTipoPessoa;
	
	ULOG_END("RemoveSkillTipoPessoa()");
	
	return 1;
	
GotoRemoveSkillTipoPessoa:
	throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);
}
