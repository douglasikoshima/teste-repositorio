/**
 * 
 * @modulo  Workflow
 * @usecase Workflow
 * @author  Cassio M Garcia
 * @version $Revision: 1.1.2.1 $
 * @CVS     $Author: a5116174 $ - $Date: 2011/08/12 17:11:19 $
 **/

#undef SQLCA
#define SQLCA_NONE
#include <sqlca.h>
#include <sqlda.h>

#include <tuxfw.h>

#include "../../../commons/queryMacro.h"
#include "../../../commons/msgPadrao.h"

void WFAtdGetMotCanErr(sqlca*sqlca);

void proCObterFaseAtendimento( int _idPessoaUsr,long _idAtendimento,int *idFaseMax )
{
    ULOG_START("proCObterFaseAtendimento()");
    
	struct sqlca sqlca;

    *idFaseMax = -1;
   
	EXEC SQL BEGIN DECLARE SECTION;
        int idPessoaUsr = _idPessoaUsr;
        long idAtendimento = _idAtendimento;
        VARCHAR _idFaseMax[256];
        short i_idFaseMax=-1;
	EXEC SQL END DECLARE SECTION;

	EXEC SQL WHENEVER SQLERROR DO WFAtdGetMotCanErr(&sqlca);

    // ========================================================================
    // Remodelagem de ATENDIMENTO.ATENDIMENTO - Fev/2007 - Cassio
    // Este código desativou o uso da view ATENDIMENTO.WFFASEATENDIMENTOV01
    // pois a mesma era usada somente neste ponto no sistema.
    //    SELECT
    //        MAX(IDFASE) VALORMAXIMO
    //    INTO
    //        :_idFaseMax:i_idFaseMax
    //    FROM
    //        ATENDIMENTO.WFFASEATENDIMENTOV01
    //    WHERE
    //        IDPESSOAUSUARIO = :idPessoaUsr
    //      AND
    //        IDATENDIMENTO =  :idAtendimento;
    // ========================================================================
    //
    EXEC SQL
        SELECT
            MAX(SEQUENCIA.IDTIPOSEQUENCIA)
        INTO
            :_idFaseMax:i_idFaseMax
        FROM
            CONTATOADM.CONTATOGRUPO CONTATOGRUPO
           ,CONTATOADM.SEQUENCIA SEQUENCIA
           ,ATENDIMENTO.ATENDIMENTO ATENDIMENTO
           ,ACESSO.USUARIOGRUPO USUARIOGRUPO
        WHERE
            ATENDIMENTO.IDCONTATO = CONTATOGRUPO.IDCONTATO
        AND CONTATOGRUPO.IDGRUPO = USUARIOGRUPO.IDGRUPO
        AND CONTATOGRUPO.IDCONTATOGRUPO = SEQUENCIA.IDCONTATOGRUPO
        AND USUARIOGRUPO.IDPESSOAUSUARIO = :idPessoaUsr
        AND ATENDIMENTO.IDATENDIMENTO =  :idAtendimento;

    if ( i_idFaseMax >= 0 )
    {
        CONVIND(_idFaseMax,i_idFaseMax);
    }

    if ( _idFaseMax.len < 1 || i_idFaseMax < 0 )
    {
        ULOG("PARAMS:idPessoaUsr=%d,idAtendimento=%d. RESULT:NOT FOUND"
                                ,idPessoaUsr,idAtendimento);
        return;
    }

    *idFaseMax = atoi((char*)_idFaseMax.arr);

    ULOG("PARAMS:idPessoaUsr=%d,idAtendimento=%d. RESULT:idFaseMax=%d"
                            ,idPessoaUsr,idAtendimento,_idFaseMax);
    ULOG_END("proCObterFaseAtendimento()");
}

void WFAtdGetMotCanErr(sqlca*sqlca)
{
    EXEC SQL WHENEVER NOT FOUND CONTINUE;

    ULOGE("WFAtdGetMotCanErr:sqlcode=%d,sqlerrmc=%.70s"
                              ,sqlca->sqlcode
                              ,sqlca->sqlerrm.sqlerrmc);

    throw new TuxBasicOraException(sqlca->sqlcode
                                  ,sqlca->sqlerrm.sqlerrmc
                                  ,sqlca->sqlerrm.sqlerrml);
}
