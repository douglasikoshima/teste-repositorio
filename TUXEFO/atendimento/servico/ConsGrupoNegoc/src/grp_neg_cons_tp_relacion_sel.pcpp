#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <sqlda.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <tuxfw.h>

int ConsultaTipoRelacionamentoSel( const char *idParam,XMLGen *Saida )
{
	ULOG_START("ConsultaTipoRelacionamentoSel()");
	struct sqlca sqlca;
	
	EXEC SQL BEGIN DECLARE SECTION;
		VARCHAR ORA_dsTipoRelacionamento[256];
		int     ORA_idTipoRelacionamento;
		int     idGrupoParam;
	EXEC SQL END DECLARE SECTION;

	sqlca.sqlcode = 0;

   idGrupoParam = atoi(idParam);

   EXEC SQL DECLARE ReadTipoRelacionamento CURSOR FOR 
      SELECT b.nmTipoRelacionamento , b.idTipoRelacionamento 
      FROM Contatoadm.TipoRelacionamentoGrupo a,
           Customer.TipoRelacionamento        b
      WHERE a.idTipoRelacionamento = b.idTipoRelacionamento 
        AND a.idGrupo       = :idGrupoParam
        order by b.nmTipoRelacionamento;

   EXEC SQL OPEN ReadTipoRelacionamento;
   EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
   EXEC SQL WHENEVER NOT FOUND DO break;
   int ret = 1;
	if( sqlca.sqlcode )
		ret = 0;
	else
	{
		for( ;; )
		{
         EXEC SQL FETCH ReadTipoRelacionamento INTO :ORA_dsTipoRelacionamento , :ORA_idTipoRelacionamento;
         Saida->createTag( "TipoPessoaVO" );
         Saida->addProp( "xmlns","http://fidelizacao.fo.vivo.com.br/vo" );
            Saida->addItem( "idtipopessoa",ORA_idTipoRelacionamento );
            ORA_dsTipoRelacionamento.arr[ ORA_dsTipoRelacionamento.len ] = 0x0;
            Saida->addItem( "dstipopessoa",(char*)ORA_dsTipoRelacionamento.arr );
         Saida->closeTag();
         memset( (char *)ORA_dsTipoRelacionamento.arr , 0x0 , sizeof(ORA_dsTipoRelacionamento.arr) );
		}
		EXEC SQL CLOSE ReadTipoRelacionamento;
	}
	ULOG_END("ConsultaTipoRelacionamentoSel()");
	return ret;

UndefinedError:
        throw new TuxBasicOraException( sqlca.sqlcode,
                                        sqlca.sqlerrm.sqlerrmc,
                                        sqlca.sqlerrm.sqlerrml );

}


