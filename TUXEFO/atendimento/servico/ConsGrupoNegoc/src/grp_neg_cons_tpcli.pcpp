#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <sqlda.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include <tuxfw.h>

int ConsultaTipoCliente( const char *whereClause , XMLGen *Saida )
{
   ULOG_START("ConsultaTipoCliente()");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
		VARCHAR ORA_dsTipoLinha[256];
		int     ORA_idTipoLinha;
		int     ORA_where;
	EXEC SQL END DECLARE SECTION;

	sqlca.sqlcode=0;

	memset( (char *)ORA_dsTipoLinha.arr , 0x0 , sizeof(ORA_dsTipoLinha.arr) );
   ORA_where = atoi( whereClause );

   EXEC SQL DECLARE tbTipoLinha CURSOR FOR 
        Select a.dsTipoLinha, a.idTipoLinha
        From apoio.TipoLinha a
        Where a.IdTipoLinha Not In(Select IdTipoLinha From 
        contatoadm.TipoLinhaGrupo Where IdGrupo = :ORA_where)
        order by a.dsTipoLinha;

	EXEC SQL OPEN tbTipoLinha;

   EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
   EXEC SQL WHENEVER NOT FOUND DO break;
   
   int ret = 1 ;
   
	if( sqlca.sqlcode )
		ret = 0;
	else
	{
		for( ;; )
		{
         EXEC SQL FETCH tbTipoLinha INTO :ORA_dsTipoLinha , :ORA_idTipoLinha;
         Saida->createTag( "TipoLinhaVO " );
         Saida->addProp( "xmlns","cliente.fo.vivo.com.br/vo" );
         Saida->addItem( "id",ORA_idTipoLinha );
         ORA_dsTipoLinha.arr[ ORA_dsTipoLinha.len ] = 0x0;
         Saida->addItem( "descricao",(char*)ORA_dsTipoLinha.arr );
         Saida->closeTag();
         memset( (char *)ORA_dsTipoLinha.arr , 0x0 , sizeof(ORA_dsTipoLinha.arr) );
		}
		EXEC SQL CLOSE tbTipoLinha;
	}
	ULOG_END("ConsultaTipoCliente()");
	return ret;

UndefinedError:
        throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);
}

