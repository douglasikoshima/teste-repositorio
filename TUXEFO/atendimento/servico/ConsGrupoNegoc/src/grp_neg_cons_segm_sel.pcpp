#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <sqlda.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <tuxfw.h>

int ConsultaSegmentacaoSel( const char *whereClause,XMLGen *xml )
{
   ULOG_START("ConsultaSegmentacaoSel()");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
		VARCHAR ORA_sgSegm[256];
		int     ORA_idSegm;
		int     ORA_where;
	EXEC SQL END DECLARE SECTION;

	sqlca.sqlcode = 0;
	memset( (char *)ORA_sgSegm.arr , 0x0 , sizeof(ORA_sgSegm.arr) );

   ORA_where = atoi( whereClause );

   EXEC SQL DECLARE tbSegm CURSOR FOR 
      Select b.dsSegmentacao , b.idSegmentacao 
      From contatoadm.SegmentacaoGrupo a,
           apoio.Segmentacao           b
      Where a.IdSegmentacao = b.IdSegmentacao 
        AND a.IdGrupo       = :ORA_where
        order by b.dsSegmentacao;

   EXEC SQL OPEN tbSegm;
   EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
   EXEC SQL WHENEVER NOT FOUND DO break;
   int ret = 1 ;
	if( sqlca.sqlcode )
		ret =0;
	else
	{
		for( ;; )
		{
         EXEC SQL FETCH tbSegm INTO :ORA_sgSegm , :ORA_idSegm;
         xml->createTag( "SegmentacaoVO" );
         xml->addItem( "codigo",ORA_idSegm );
         ORA_sgSegm.arr[ ORA_sgSegm.len ] = 0x0;
         xml->addItem( "descricao",(char*)ORA_sgSegm.arr );
         xml->closeTag();
         memset( (char *)ORA_sgSegm.arr , 0x0 , sizeof(ORA_sgSegm.arr) );
		}
		EXEC SQL CLOSE tbSegm;
	}
	ULOG_END("ConsultaSegmentacaoSel()");
	return ret;

UndefinedError:
        throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);

}


