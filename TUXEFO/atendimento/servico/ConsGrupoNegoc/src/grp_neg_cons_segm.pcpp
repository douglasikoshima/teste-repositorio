#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <sqlda.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <tuxfw.h>

int ConsultaSegmentacao( const char *whereClause,XMLGen *xml )
{
   ULOG_START("ConsultaSegmentacao()");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
		VARCHAR ORA_dsSegm[256];
		int     ORA_idSegme;
		int     ORA_where;
	EXEC SQL END DECLARE SECTION;

	sqlca.sqlcode = 0;
	memset( (char *)ORA_dsSegm.arr , 0x0 , sizeof(ORA_dsSegm.arr) );
   ORA_where = atoi( whereClause );


    EXEC SQL DECLARE tbSegm CURSOR FOR 
      SELECT a.dsSegmentacao,a.idSegmentacao
      FROM apoio.Segmentacao a
      WHERE a.IdSegmentacao NOT IN(SELECT IdSegmentacao 
                                     FROM contatoadm.SegmentacaoGrupo 
                                     WHERE IdGrupo = :ORA_where)
      ORDER BY a.dsSegmentacao;

   EXEC SQL OPEN tbSegm;
   EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
   EXEC SQL WHENEVER NOT FOUND DO break;
   int ret = 1 ;
	if( sqlca.sqlcode )
		ret = 0;
	else
	{
		for( ;; )
		{
            EXEC SQL FETCH tbSegm INTO :ORA_dsSegm, :ORA_idSegme;
            xml->createTag( "SegmentacaoVO" );
            xml->addItem( "codigo",ORA_idSegme );
            ORA_dsSegm.arr[ ORA_dsSegm.len ] = 0x0;
            xml->addItem( "descricao",(char*)ORA_dsSegm.arr );
            xml->closeTag();
            memset( (char *)ORA_dsSegm.arr , 0x0 , sizeof(ORA_dsSegm.arr) );
		}
		EXEC SQL CLOSE tbSegm;
	}
	ULOG_START("ConsultaSegmentacao()");
	return ret ;

UndefinedError:
        throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);

}


