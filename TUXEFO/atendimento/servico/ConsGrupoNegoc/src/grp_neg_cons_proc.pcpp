#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <sqlda.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <tuxfw.h>

int ConsultaProcedencia( const char *whereClause,XMLGen *xml )
{
   ULOG_START("ConsultaProcedencia()");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
		VARCHAR ORA_dsProced[256];
		int     ORA_idProced;
		int     ORA_where;
	EXEC SQL END DECLARE SECTION;
    
	sqlca.sqlcode = 0;
	memset( (char *)ORA_dsProced.arr , 0x0 , sizeof(ORA_dsProced.arr) );
   ORA_where = atoi( whereClause );


    EXEC SQL DECLARE tbProced CURSOR FOR 
        Select a.dsProcedencia, a.idProcedencia
        From apoio.Procedencia a
        Where a.IdProcedencia Not In(Select IdProcedencia From 
        contatoadm.ProcedenciaGrupo Where IdGrupo = :ORA_where)
        order by a.dsProcedencia;

	EXEC SQL OPEN tbProced;
   EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
   EXEC SQL WHENEVER NOT FOUND DO break;
   
   int ret = 1 ;
   
	if( sqlca.sqlcode )
		ret = 0;
	else
	{

		for( ;; )
		{
		   EXEC SQL FETCH tbProced INTO :ORA_dsProced , :ORA_idProced;
           xml->createTag( "ProcedenciaVO" );
           xml->addItem( "codigo",ORA_idProced );
           ORA_dsProced.arr[ ORA_dsProced.len ] = 0x0;
           xml->addItem( "descricao",(char*)ORA_dsProced.arr );
		   xml->closeTag();
           memset( (char *)ORA_dsProced.arr , 0x0 , sizeof(ORA_dsProced.arr) );
		}
		EXEC SQL CLOSE tbProced;
	}
	ULOG_END("ConsultaProcedencia()");
	return ret ;

UndefinedError:
        throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);

}

