#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <sqlda.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <tuxfw.h>

int ConsultaTipoPessoa( const char * idParam, XMLGen * Saida )
{
   ULOG_START("ConsultaTipoPessoa()");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
		VARCHAR ORA_dsTipoPessoa[256];
		int     ORA_idTipoPessoa;
		int     idGrupoParam;
	EXEC SQL END DECLARE SECTION;

	sqlca.sqlcode = 0;
   idGrupoParam = atoi( idParam );


   EXEC SQL DECLARE ReadTipoPessoa CURSOR FOR 
      SELECT dsTipoPessoa , idTipoPessoa
      FROM Apoio.TipoPessoa
      WHERE idTipoPessoa NOT IN(Select idTipoPessoa From 
      Contatoadm.TipoPessoaGrupo Where idGrupo = :idGrupoParam)
      order by dsTipoPessoa;

   EXEC SQL OPEN ReadTipoPessoa;
   EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
   EXEC SQL WHENEVER NOT FOUND DO break;
   int ret = 1 ;
	if( sqlca.sqlcode )
		ret = 0;
	else
	{
		for( ;; )
		{
            EXEC SQL FETCH ReadTipoPessoa INTO :ORA_dsTipoPessoa, :ORA_idTipoPessoa;
            Saida->createTag( "TipoClienteVO" );
               Saida->addItem( "codigo",ORA_idTipoPessoa );
               ORA_dsTipoPessoa.arr[ ORA_dsTipoPessoa.len ] = 0x0;
               Saida->addItem( "descricao",(char*)ORA_dsTipoPessoa.arr );
            Saida->closeTag();
            memset( (char *)ORA_dsTipoPessoa.arr , 0x0 , sizeof(ORA_dsTipoPessoa.arr) );
		}
		EXEC SQL CLOSE ReadTipoPessoa;
	}
	ULOG_END("ConsultaTipoPessoa()");
	return ret;

UndefinedError:
        throw new TuxBasicOraException( sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml );

}


