#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <sqlda.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <tuxfw.h>

int ConsultaTipoClienteSel( const char *whereClause,XMLGen *Saida )
{
   ULOG_START("ConsultaTipoClienteSel()");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
		VARCHAR ORA_sgTipoLinha[256];
		int     ORA_idTipoLinha;
		int     ORA_where;
	EXEC SQL END DECLARE SECTION;

	sqlca.sqlcode=0;

   ORA_where = atoi( whereClause );
   memset( (char *)ORA_sgTipoLinha.arr , 0x0 , sizeof(ORA_sgTipoLinha.arr) );

   EXEC SQL DECLARE tbTipoLinha CURSOR FOR 
      Select b.dsTipoLinha , b.idTipoLinha
      From contatoadm.TipoLinhaGrupo a,
           apoio.TipoLinha           b
      Where a.IdTipoLinha = b.IdTipoLinha 
        AND a.IdGrupo = :ORA_where
        order by b.dsTipoLinha;




   EXEC SQL OPEN tbTipoLinha;
   EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
   EXEC SQL WHENEVER NOT FOUND DO break;
   
   int ret = 1;
	if( sqlca.sqlcode )
		ret = 0;
	else
	{
		for( ;; )
		{
		   EXEC SQL FETCH tbTipoLinha INTO :ORA_sgTipoLinha , :ORA_idTipoLinha;
         Saida->createTag( "TipoLinhaVO" );
         Saida->addProp( "xmlns","cliente.fo.vivo.com.br/vo" );
            Saida->addItem( "id",ORA_idTipoLinha );
            ORA_sgTipoLinha.arr[ ORA_sgTipoLinha.len ] = 0x0;
            Saida->addItem( "descricao",(char*)ORA_sgTipoLinha.arr );
         Saida->closeTag();
         memset( (char *)ORA_sgTipoLinha.arr , 0x0 , sizeof(ORA_sgTipoLinha.arr) );
		}
		EXEC SQL CLOSE tbTipoLinha;
	}
	
   ULOG_END("ConsultaTipoClienteSel()");
	return ret ;

UndefinedError:
        throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);

}

