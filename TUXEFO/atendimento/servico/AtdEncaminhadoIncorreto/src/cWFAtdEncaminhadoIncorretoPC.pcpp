/**
 * @author  Cassio M Garcia
 * @version $Revision: 1.1.2.1.28.1 $
 * @CVS     $Author: a5114878 $ - $Date: 2011/10/28 13:58:44 $
 **/

#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>
#include<sqlda.h>

#include"../../../commons/queryMacro.h"
#include"../../../commons/msgPadrao.h"

#include "../include/cWFAtdEncaminhadoIncorreto.h"
#include "../include/stWFAtdEncaminhadoIncorreto.h"

void sql_error_WFAtdEncaminhadoIncorreto(sqlca*sqlca);

// Declara as estruturas compatíveis ao ProC.
EXEC SQL BEGIN DECLARE SECTION;
    #include "../include/stWFAtdEncaminhadoIncorreto.h"
EXEC SQL END DECLARE SECTION;

void proCIncluirWFAtdEncaminhadoIncorreto(st_AtdEncaminhadoIncorreto* dados, st_vlAtdEncaminhadoIncorreto* status)
{
    ULOG_START("proCIncluirWFAtdEncaminhadoIncorreto()");

    struct sqlca sqlca;

    EXEC SQL BEGIN DECLARE SECTION;

        struct st_AtdEncaminhadoIncorreto *oDados = dados;
        struct st_vlAtdEncaminhadoIncorreto *oStatus = status;
        int counter;

    EXEC SQL END DECLARE SECTION;

    EXEC SQL WHENEVER SQLERROR DO sql_error_WFAtdEncaminhadoIncorreto(&sqlca);
    EXEC SQL WHENEVER NOT FOUND CONTINUE;

    ULOG("             idCanal=%d",oDados->idCanal);
    ULOG("           idContato=%d",oDados->idContato);
    ULOG("             idGrupo=%d",oDados->idGrupo);
    ULOG("     idGrupoAbertura=%d",oDados->idGrupoAbertura);
    ULOG("       idProcedencia=%d",oDados->idProcedencia);
    ULOG("       idSegmentacao=%d",oDados->idSegmentacao);
    ULOG("      idTipoCarteira=%d",oDados->idTipoCarteira);
    ULOG("         idTipoLinha=%d",oDados->idTipoLinha);
    ULOG("        idTipoPessoa=%d",oDados->idTipoPessoa);
    ULOG("idTipoRelacionamento=%d",oDados->idTipoRelacionamento);
    ULOG("          dtAbertura='%s'",oDados->dtAbertura);

    if ( oDados->idTipoLinha )
    {
        EXEC SQL
            SELECT
                COUNT(1)
            INTO
                :counter
            FROM
                ATENDIMENTO.ATDENCAMINHADOINCORRETO
            WHERE
                IDCANAL = :oDados->idCanal
            AND IDCONTATO = :oDados->idContato
            AND IDGRUPO = :oDados->idGrupo
            AND IDGRUPOABERTURA = :oDados->idGrupoAbertura
            AND IDPROCEDENCIA = :oDados->idProcedencia
            AND IDSEGMENTACAO = :oDados->idSegmentacao
            AND IDTIPOCARTEIRA = :oDados->idTipoCarteira
            AND IDTIPOLINHA = :oDados->idTipoLinha
            AND IDTIPOPESSOA = :oDados->idTipoPessoa
            AND IDTIPORELACIONAMENTO = :oDados->idTipoRelacionamento
            AND DTABERTURA = trunc(to_date(:oDados->dtAbertura,'DD/MM/YYYY HH24:MI:SS'));
    }
    else
    { // Sem o idTipoLinha
        EXEC SQL
            SELECT
                COUNT(1)
            INTO
                :counter
            FROM
                ATENDIMENTO.ATDENCAMINHADOINCORRETO
            WHERE
                IDCANAL = :oDados->idCanal
            AND IDCONTATO = :oDados->idContato
            AND IDGRUPO = :oDados->idGrupo
            AND IDGRUPOABERTURA = :oDados->idGrupoAbertura
            AND IDPROCEDENCIA = :oDados->idProcedencia
            AND IDSEGMENTACAO = :oDados->idSegmentacao
            AND IDTIPOCARTEIRA = :oDados->idTipoCarteira
            AND IDTIPOLINHA IS NULL
            AND IDTIPOPESSOA = :oDados->idTipoPessoa
            AND IDTIPORELACIONAMENTO = :oDados->idTipoRelacionamento
            AND DTABERTURA = TRUNC(TO_DATE(:oDados->dtAbertura,'DD/MM/YYYY HH24:MI:SS'));
    }

    if ( counter )
    {
        ULOG("UPDATE em ATENDIMENTO.ATDENCAMINHADOINCORRETO");

        if ( oDados->idTipoLinha )
        {
            EXEC SQL
                UPDATE
                    ATENDIMENTO.ATDENCAMINHADOINCORRETO
                SET
                    QTINCORRETOS = QTINCORRETOS + 1,
                    DTULTIMAALTERACAO = SYSDATE,
                    IDUSUARIOALTERACAO = :oDados->idUsuarioAlteracao
                WHERE
                    IDCANAL = :oDados->idCanal
                AND IDCONTATO = :oDados->idContato
                AND IDGRUPO = :oDados->idGrupo
                AND IDGRUPOABERTURA = :oDados->idGrupoAbertura
                AND IDPROCEDENCIA = :oDados->idProcedencia
                AND IDSEGMENTACAO = :oDados->idSegmentacao
                AND IDTIPOCARTEIRA = :oDados->idTipoCarteira
                AND IDTIPOLINHA = :oDados->idTipoLinha
                AND IDTIPOPESSOA = :oDados->idTipoPessoa
                AND IDTIPORELACIONAMENTO = :oDados->idTipoRelacionamento
                AND DTABERTURA = TRUNC(TO_DATE(:oDados->dtAbertura,'DD/MM/YYYY HH24:MI:SS'));
        }
        else
        {
            EXEC SQL
                UPDATE
                    ATENDIMENTO.ATDENCAMINHADOINCORRETO
                SET
                    QTINCORRETOS = QTINCORRETOS + 1,
                    DTULTIMAALTERACAO = SYSDATE,
                    IDUSUARIOALTERACAO = :oDados->idUsuarioAlteracao
                WHERE
                    IDCANAL = :oDados->idCanal
                AND IDCONTATO = :oDados->idContato
                AND IDGRUPO = :oDados->idGrupo
                AND IDGRUPOABERTURA = :oDados->idGrupoAbertura
                AND IDPROCEDENCIA = :oDados->idProcedencia
                AND IDSEGMENTACAO = :oDados->idSegmentacao
                AND IDTIPOCARTEIRA = :oDados->idTipoCarteira
                AND IDTIPOLINHA IS NULL
                AND IDTIPOPESSOA = :oDados->idTipoPessoa
                AND IDTIPORELACIONAMENTO = :oDados->idTipoRelacionamento
                AND DTABERTURA = TRUNC(TO_DATE(:oDados->dtAbertura,'DD/MM/YYYY HH24:MI:SS'));
        }
    }
    else
    {
        ULOG("INSERT em ATENDIMENTO.ATDENCAMINHADOINCORRETO");

        EXEC SQL 
            INSERT INTO
                ATENDIMENTO.ATDENCAMINHADOINCORRETO
                (
                    IDCANAL,
                    IDCONTATO,
                    IDGRUPO,
                    IDGRUPOABERTURA,
                    IDPROCEDENCIA,
                    IDSEGMENTACAO,
                    IDTIPOCARTEIRA,
                    IDTIPOLINHA,
                    IDTIPOPESSOA,
                    IDTIPORELACIONAMENTO,
                    IDUSUARIOALTERACAO,
                    QTINCORRETOS,
                    DTABERTURA,
                    DTULTIMAALTERACAO
                )
                VALUES
                (
                    :oDados->idCanal,
                    :oDados->idContato,
                    :oDados->idGrupo,
                    :oDados->idGrupoAbertura,
                    :oDados->idProcedencia,
                    :oDados->idSegmentacao,
                    :oDados->idTipoCarteira,
                    DECODE(:oDados->idTipoLinha,0,NULL,:oDados->idTipoLinha),
                    :oDados->idTipoPessoa,
                    :oDados->idTipoRelacionamento,
                    DECODE(:oStatus->idUsuarioAlteracao,-1,NULL,:oDados->idUsuarioAlteracao),
                    1,
                    DECODE(:oStatus->dtAbertura,-1,TRUNC(SYSDATE),TO_DATE(SUBSTR(:oDados->dtAbertura,1,10),'DD/MM/YYYY')),
                    SYSDATE
                );
    }

    ULOG_END("proCIncluirWFAtdEncaminhadoIncorreto()");
}

void sql_error_WFAtdEncaminhadoIncorreto(sqlca*sqlca)
{
    throw new TuxBasicOraException(sqlca->sqlcode
                                  ,sqlca->sqlerrm.sqlerrmc
                                  ,sqlca->sqlerrm.sqlerrml);
}
