#undef SQLCA
#define SQLCA_NONE
#include <sqlca.h>
#include <sqlda.h>
#include <ctype.h>

#include "../include/cWFInclChamTel.h"

// Prototipo
void sql_error_cWFInclChamTel( sqlca * sqlca );

void cWFInclChamTel::GetTime( char *sData, int iFormato )
{
   struct sqlca sqlca;

   EXEC SQL BEGIN DECLARE SECTION;
      char sDataSQL[25];
   EXEC SQL END DECLARE SECTION;

   sDataSQL[0] = 0x0;

   EXEC SQL WHENEVER SQLERROR DO sql_error_cWFInclChamTel( &sqlca );

   if ( iFormato == 0 )
   {
        EXEC SQL
            SELECT
                TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI')
            INTO
                :sDataSQL
            FROM DUAL;
        sprintf( sData,"%.16s",sDataSQL );
   }
   else
   {
        EXEC SQL
            SELECT
                TO_CHAR( SYSDATE,'DD/MM/YYYY HH24:MI:SS' )
            INTO
                :sDataSQL
            FROM DUAL;
        sprintf( sData,"%.19s",sDataSQL );
   }


}

void cWFInclChamTel::AtualizaChamada( unsigned long idChamadaParam, int idGrauParam )
{
    struct sqlca sqlca;

    EXEC SQL BEGIN DECLARE SECTION;

        unsigned long idChamada = idChamadaParam;
        int idGrauSatisfacao = idGrauParam;

    EXEC SQL END DECLARE SECTION;

    EXEC SQL WHENEVER SQLERROR DO sql_error_cWFInclChamTel( &sqlca );

    EXEC SQL
        UPDATE
            ATENDIMENTO.CHAMADATELEFONICA
        SET
            IDGRAUSATISFACAO = :idGrauSatisfacao
        WHERE
            IDCHAMADATELEFONICA = :idChamada;
}

void cWFInclChamTel::AtualizaGrupoAtual( unsigned long idChamadaParam )
{
    struct sqlca sqlca;

    EXEC SQL BEGIN DECLARE SECTION;

        unsigned long idChamada = idChamadaParam;
        long idAtendimentoChamada = -1;

    EXEC SQL END DECLARE SECTION;

    EXEC SQL DECLARE Atualiza CURSOR FOR
        SELECT
            IDATENDIMENTO 
        FROM
            ATENDIMENTO.CHAMADAATENDIMENTO
        WHERE
            IDCHAMADATELEFONICA = :idChamada;

    EXEC SQL WHENEVER SQLERROR DO sql_error_cWFInclChamTel( &sqlca );
    EXEC SQL WHENEVER NOT FOUND DO BREAK;

    EXEC SQL OPEN Atualiza;
    for( ;; )
    {
        EXEC SQL FETCH Atualiza INTO :idAtendimentoChamada;

        EXEC SQL
            UPDATE
                ATENDIMENTO.ATENDIMENTOGRUPOBKO
            SET
                DTENTRADAFILA = SYSDATE
            WHERE
                IDATENDIMENTO = :idAtendimentoChamada;

    }

    EXEC SQL CLOSE Atualiza;
}

void sql_error_cWFInclChamTel( sqlca * sqlca )
{
    ULOGE( "sql_error_cWFInclChamTel:sqlcode = [%d],sqlerrmc = [%.70s]"
                              ,sqlca->sqlcode
                              ,sqlca->sqlerrm.sqlerrmc);

    throw new TuxBasicOraException(  sqlca->sqlcode
                                    ,sqlca->sqlerrm.sqlerrmc
                                    ,sqlca->sqlerrm.sqlerrml
                                  );

}
