// AtendimentoTipoNota.cpp: implementation of the AtendimentoTipoNota class.
//
//////////////////////////////////////////////////////////////////////
#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>
#include<sqlda.h>
#include "../include/AtendimentoTipoNota.h"

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

AtendimentoTipoNota::AtendimentoTipoNota()
{

}

AtendimentoTipoNota::~AtendimentoTipoNota()
{

}
int AtendimentoTipoNota::listNotas(XMLGen*xml)
{
	ULOG_START("AtendimentoTipoNota::listNotas()");
	struct sqlca sqlca;
	EXEC SQL BEGIN DECLARE SECTION;
		struct nmParam{
			VARCHAR idTipoNota[21+1];
			VARCHAR dsTipoNota[255+1];
		}m_nmParam;
		struct inmParam{
			short idTipoNota;
			short dsTipoNota;
		}m_inmParam;
	EXEC SQL END DECLARE SECTION;


	EXEC SQL WHENEVER SQLERROR GOTO Error;
	EXEC SQL WHENEVER NOT FOUND DO BREAK;
	
	EXEC SQL DECLARE CURSOR1 CURSOR FOR
		SELECT IDTIPONOTAATENDIMENTO,DSTIPONOTA
		FROM APOIO.TIPONOTAATENDIMENTO
		ORDER BY IDTIPONOTAATENDIMENTO ASC;
	EXEC SQL OPEN CURSOR1;

	for(;;)
	{
		memset(&m_nmParam,0,sizeof(nmParam));
		memset(&m_inmParam,0,sizeof(inmParam));
		EXEC SQL FETCH CURSOR1 INTO :m_nmParam:m_inmParam;
		xml->createTag("WFAtdTipoNotaVO");
		xml->addItem("idTipoNota",(char*)m_nmParam.idTipoNota.arr);
		xml->addItem("dsTipoNota",(char*)m_nmParam.dsTipoNota.arr);
		xml->closeTag();
	}
	EXEC SQL CLOSE CURSOR1;
	
	ULOG_END("AtendimentoTipoNota::listNotas()");
	
	return 1;
Error:
	ULOG("\nAtendimentoTipoNota::listNotas sqlca.sqlcode = %d",sqlca.sqlcode);
	throw TuxBasicOraException(sqlca.sqlcode);
}
