#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <sqlda.h>
#include <tuxfw.h>

int ConsultaTpCarteiraSel( const char *idContatoParam , const char *idRetorno, XMLGen *Saida )
{
   
    ULOG_START("ConsultaTpCarteiraSel()");
    
    struct sqlca sqlca;
    sqlca.sqlcode=0 ;

    EXEC SQL BEGIN DECLARE SECTION;

        VARCHAR dsTipoCarteira[256];
        unsigned long idTipoCarteira;
        unsigned long idContato = atol(idContatoParam );
        unsigned long ORA_idRetorno = atol( idRetorno );

        short   i_dsTipoCarteira;

    EXEC SQL END DECLARE SECTION;

    EXEC SQL DECLARE ReadSelSegment CURSOR FOR 
        SELECT 
            b.idTipoCarteira, 
            b.dsTipoCarteira
        FROM 
            ContatoAdm.TipoRetornoTipoCarteira   a,
            Apoio.TipoCarteira                   b,
            ContatoAdm.ContatoTipoRetorno        c
        WHERE
            a.idTipoCarteira > 0
        AND
            a.idTipoCarteira = b.idTipoCarteira 
        AND 
            a.idContatoTipoRetorno = c.idContatoTipoRetorno
        AND
            c.idContato = :idContato
        AND 
            c.idTipoRetornoContato = :ORA_idRetorno
        ORDER BY b.dsTipoCarteira;


    EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
    EXEC SQL WHENEVER NOT FOUND DO break;

    EXEC SQL OPEN ReadSelSegment;

    for( ;; )
    {
        EXEC SQL FETCH ReadSelSegment INTO :idTipoCarteira, 
                                           :dsTipoCarteira:i_dsTipoCarteira;
        
        if ( i_dsTipoCarteira < 0 )
            dsTipoCarteira.arr[0] = 0x0;
        else
            dsTipoCarteira.arr[ dsTipoCarteira.len ] = 0x0;

        Saida->createTag( "AdmCarteirizacaoVO" );
            Saida->addItem( "idCarteirizacao",idTipoCarteira );
            Saida->addItem( "nmCarteirizacao",(char*)dsTipoCarteira.arr );
        Saida->closeTag();

        memset( (char *)dsTipoCarteira.arr , 0x0 , sizeof(dsTipoCarteira.arr) );
    }

    EXEC SQL CLOSE ReadSelSegment;

    ULOG_END("ConsultaTpCarteiraSel()");
    
    return 1;

UndefinedError:
        throw new TuxBasicOraException( sqlca.sqlcode,
                                        sqlca.sqlerrm.sqlerrmc,
                                        sqlca.sqlerrm.sqlerrml );

}

