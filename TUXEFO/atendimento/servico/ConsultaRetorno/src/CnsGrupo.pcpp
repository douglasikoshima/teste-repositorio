#undef SQLCA
#define SQLCA_NONE

#include <sqlca.h>
#include <sqlda.h>
#include <tuxfw.h>

int ConsultaGrupo( const char *idContatoParam , const char *idRetorno, XMLGen *Saida )
{
    ULOG_START("ConsultaGrupo()");  
    struct sqlca sqlca;
    sqlca.sqlcode=0 ;

    EXEC SQL BEGIN DECLARE SECTION;

        VARCHAR ORA_nmGrupo[256];
        unsigned long ORA_idGrupo;
        unsigned long ORA_idContato = atol( idContatoParam );
        unsigned long ORA_idRetorno = atol( idRetorno );

        short   ORA_i_nmGrupo;

    EXEC SQL END DECLARE SECTION;

    EXEC SQL DECLARE ReadGrupo CURSOR FOR 
        SELECT 
            sq.idSequencia, 
            a.nmGrupo
        FROM 
            Acesso.Grupo             a,
            ContatoAdm.ContatoGrupo cg,
            ContatoAdm.Sequencia    sq
        WHERE 
            a.idGrupo = cg.idGrupo
        AND 
            cg.idContato = :ORA_idContato
        AND 
            sq.idContatoGrupo = cg.idContatoGrupo
        AND 
            sq.idTipoSequencia = 1
        AND 
            a.idGrupo
        NOT IN
        (
            SELECT 
                e.idGrupo 
            FROM 
                ContatoAdm.TipoRetornoSequencia      b ,
                ContatoAdm.ContatoTipoRetorno        c ,
                ContatoAdm.Sequencia                 d ,
                ContatoAdm.ContatoGrupo              e
            WHERE 
                b.idContatoTipoRetorno = c.idContatoTipoRetorno
            AND
                d.idSequencia > 0
            AND
                d.idSequencia = b.idSequencia
            AND
                d.idContatoGrupo = e.idContatoGrupo
            AND
                e.idGrupo = a.idGrupo
            AND
                c.idContato = :ORA_idContato
            AND 
                c.idTipoRetornoContato = :ORA_idRetorno
        )
        ORDER BY a.nmGrupo;
    

    EXEC SQL WHENEVER SQLERROR GOTO UndefinedError;
    EXEC SQL WHENEVER NOT FOUND DO break;

    EXEC SQL OPEN ReadGrupo;

    for( ;; )
    {
        EXEC SQL FETCH ReadGrupo INTO :ORA_idGrupo, 
                                      :ORA_nmGrupo:ORA_i_nmGrupo;

        if ( ORA_i_nmGrupo == -1 )
            ORA_nmGrupo.arr[0] = 0x0;
        else
            ORA_nmGrupo.arr[ ORA_nmGrupo.len ] = 0x0;

        Saida->createTag( "AdmGrupoVO" );
            Saida->addItem( "idGrupo",ORA_idGrupo );
            Saida->addItem( "nmGrupo",(char*)ORA_nmGrupo.arr );
        Saida->closeTag();

        memset( (char *)ORA_nmGrupo.arr , 0x0 , sizeof(ORA_nmGrupo.arr) );
    }

    EXEC SQL CLOSE ReadGrupo;
    
    ULOG_END("ConsultaGrupo()");  

    return 1;

UndefinedError:
        throw new TuxBasicOraException( sqlca.sqlcode,
                                        sqlca.sqlerrm.sqlerrmc,
                                        sqlca.sqlerrm.sqlerrml 
                                      );

}

