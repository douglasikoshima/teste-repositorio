
                        
//Imports;
#import WFAndamento:WFAndameIncluir;
#import WFAtdAndAtual:WFAtdAnAAlterar;
#import WFAndObservacao:WFAndObsIncluir;
#import WFAtdFechamento:WFAtdFchExcluir;
#import WFAtdBaixaAtual:WFAtdBxAExcluir;
#import WFAtendimento:ObtemDetalheAtend;
#import WFAtendimento:WFAtendiAlterar;
#import WFAtdPessoa:ObtemAtendPessoa;
#import WFAtdLinha:ObtemDetalheAtend;
#import WFUsuario:PsUsGrFsVar;
#import WFUsuario:PsUsGrFase;
#import WFAtdGrupoAtual:WFAtdGrAIncluir;

//Definições;
DOMNODE domScript;
DOMNODE domWorkflow;
DOMNODE domTratWf;
DOMNODE parametro;
DOMNODE paramGrupo;
DOMNODE paramAtGrupo;
DOMNODE paramAtd;
DOMNODE parametroAnd;
DOMNODE parametroAndAt;
DOMNODE parametroAndOb;

XMLGen xmlAtendimento;
XMLGen xmlPessoa;
XMLGen xmlLinha;
XMLGen AtdFec;
XMLGen AtdBxaAt;
XMLGen proxGrupo;
XMLGen proxGrupoI;
XMLGen grupoAtual;
XMLGen xmlAtAtd;
XMLGen AndAtual;
XMLGen AndamentoIns;
XMLGen Observacao;

string txt;
string urlDestino;
string sqlLinha;
string query;

int UsuarioAtual;
int idAgrEstTPrAt;
int idAgrEstTPrFt;
int idPesLinha;
int countLinha;
int idTpLinha;
int idGrupo;
int count;
int idSequencia;
int idFaseSig;
int nrNivel;
int idAtividade;
int idAtendimento;
int idAndamentoIns;
int idContato;

RECORDSET rsLinha;
RECORDSET rs;

SQL SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI') DATAATUAL FROM DUAL;
SQL SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') DATAANDAMENTO FROM DUAL;

domScript = XML:ScriptExecucaoVO;

UsuarioAtual  = domScript:idPessoaUsuario;
idAtendimento = domScript:idAtendimento;
idAgrEstTPrFt = domScript:idAgrupamentoEstadoTProcFut;
idAgrEstTPrAt = domScript:idAgrupamentoEstadoTProcAt;
idAtividade   = domScript:idAtividade;
urlDestino    = domScript:nmUrlDestino;

domTratWf = XML:AtendimentoWorkflowVO;
domWorkflow = domTratWf:AtendimentoWorkflowComumVO;

// Obtemos Dados;
txt = "<AtendimentoReaberturaVO>\n";
txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
txt += "</AtendimentoReaberturaVO>\n";
		
parametro = txt;

// Exclui o Fechamento;
AtdFec = WFAtdFechamento.WFAtdFchExcluir(parametro);

// Exclui o Atendimento Baixa Atual;
AtdBxaAt = WFAtdBaixaAtual.WFAtdBxAExcluir(parametro);

// Obter dados de atendimento;
xmlAtendimento = WFAtendimento.ObtemDetalheAtend(parametro);
idContato = xmlAtendimento:idContato;

xmlPessoa = WFAtdPessoa.ObtemAtendPessoa(parametro);

xmlLinha = WFAtdLinha.ObtemDetalheAtend(parametro);
idPesLinha = xmlLinha:idPessoaLinhaHistorico;

if (idPesLinha > 0)
	sqlLinha = "SELECT idTipoLinha " +
		   "FROM ( SELECT LT.idTipoLinha, PL.IDPESSOALINHAHISTORICO FROM CUSTOMER.PESSOALINHAHISTORICOB00 PL, LINHA.LINHATELEFONICAB00 LT "  +
		   "WHERE PL.IDLINHATELEFONICA = LT.IDLINHATELEFONICA) " +
		   "WHERE IDPESSOALINHAHISTORICO = :idPesLinha";

	rsLinha=OpenRecordset(sqlLinha);
			
	countLinha = rsLinha.RowCount();
			
	if (countLinha > 0)
		idTpLinha = rsLinha.GetValue("idTipoLinha");
	fi;
fi;

Clean(txt);

txt = "<ObtemGrupoVO>\n\t" +
	      "<idFase>2</idFase>\n\t" +
	      "<idTipoLinha>" + idTpLinha + "</idTipoLinha>\n\t" +
	      "<idTipoCarteira>" + xmlAtendimento:idTipoCarteira + "</idTipoCarteira>\n\t" +
	      "<idSegmentacao>" + xmlAtendimento:idSegmentacao + "</idSegmentacao>\n\t" +
	      "<idProcedencia>" + xmlAtendimento:idTipoCarteira + "</idProcedencia>\n\t" +
	      "<idTipoRelacionamento>" + xmlPessoa:inRspAbertura + "</idTipoRelacionamento>\n" +
	      "<idTipoPessoa>" + xmlPessoa:idTipoPessoa + "</idTipoPessoa>\n\t" +
	      "<idCanal>" + xmlAtendimento:idCanal + "</idCanal>\n\t" +
	      "<idGrupoAbertura>" + xmlAtendimento:idGrupoAbertura + "</idGrupoAbertura>\n\t" +
	      "<idContato>" + xmlAtendimento:idContato + "</idContato>\n\t" +
     "</ObtemGrupoVO>";

paramGrupo = txt;

// Obtemos el grupo de Tratamento;
proxGrupo = WFUsuario.PsUsGrFsVar(paramGrupo);
idGrupo = proxGrupo:idGrupo;      

if (!proxGrupo)
	proxGrupoI = WFUsuario.PsUsGrFase(paramGrupo);
	idGrupo = proxGrupoI:idGrupo;
fi;

// Obter sequencia de grupo de tratamento;
query = "select TO_CHAR(idSequencia) idSequencia from contatoadm.sequenciab01 where idgrupo = :idGrupo and idcontato = :idContato and idtiposequencia = 2";
rs=OpenRecordset(query);
count = rs.RowCount();

if (count < 1)
	txt = "Não foi possível obter a sequencia do grupo de tratamento.";
	throw("00E0002", txt);
fi;

idSequencia = rs.GetValue("idSequencia");

Clean(txt);

txt = "<GravaGrupoAtual>\n" +
	      "<idAtendimento>" + idAtendimento + "</idAtendimento>\n" +
	      "<idGrupo>" + idGrupo + "</idGrupo>\n" +
	      "<idSequencia>" + idSequencia + "</idSequencia>\n" +
	      "<dtEntradaBKO>" + DATAATUAL + "</dtEntradaBKO>\n" +
	      "<dtEntradaFila>" + DATAATUAL + "</dtEntradaFila>\n" +
	      "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n" +
	      "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n" +
      "</GravaGrupoAtual>\n";

paramAtGrupo = txt;

grupoAtual = WFAtdGrupoAtual.WFAtdGrAIncluir(paramAtGrupo);

// Atualizando Atendimento;
Clean(txt);

idFaseSig = 2;
nrNivel = 0;

// Gerando Entrada Inclusao;
txt = "<AtendimentoVO>\n";
txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
txt += "<idFase>" + idFaseSig + "</idFase>\n";
txt += "<nrNivel>" + nrNivel + "</nrNivel>\n";
txt += "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n";
txt += "</AtendimentoVO>\n";

paramAtd = txt;

// Atualizando Atendimento;
xmlAtAtd = WFAtendimento.WFAtendiAlterar(paramAtd);

//;
//************* Inclusao do Andamento ********************;
//;

// Gerando Parametro de Entrada para Metodo de Inclusao;
txt = "<AndamentoVO>\n";
txt += "<idAtividade>" + idAtividade + "</idAtividade>\n";
txt += "<idAgrupamentoEstadoTpProc>" + idAgrEstTPrFt + "</idAgrupamentoEstadoTpProc>\n";
txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
txt += "<idPessoaUsuario>" + UsuarioAtual + "</idPessoaUsuario>\n";
txt += "<dtAndamento>" + DATAANDAMENTO + "</dtAndamento>\n";
txt += "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n";
txt += "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n";
txt += "</AndamentoVO>\n";

parametroAnd = txt;

// Inclui o atendimento;
AndamentoIns = WFAndamento.WFAndameIncluir(parametroAnd);
idAndamentoIns = AndamentoIns:idAndamento;

//;
//************* Atualiza Andamento Atual ********************;
//;
Clean(txt);

// Entrada para Alteracao;
txt = "<AndamentoAtualVO>";
txt += "<idAtendimento>" + idAtendimento + "</idAtendimento>\n";
txt += "<idAndamento>" + idAndamentoIns + "</idAndamento>\n";
txt += "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n";
txt += "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n";
txt += "</AndamentoAtualVO>\n";

parametroAndAt = txt;

// Inclui o atendimento;
AndAtual = WFAtdAndAtual.WFAtdAnAAlterar(parametroAndAt);

//;
//********** Inclusao do Andamento Observacao *************;
//;
Clean(txt);

// Gerando Entrada Inclusao;
txt = "<AndamentoObservacaoVO>";
txt += "<idAndamento>" + idAndamentoIns + "</idAndamento>\n";
txt += "<dsAndamentoObservacao>" + domWorkflow:dsObservacao + "</dsAndamentoObservacao>\n";
txt += "<idUsuarioAlteracao>" + UsuarioAtual + "</idUsuarioAlteracao>\n";
txt += "<dtUltimaAlteracao>" + DATAATUAL + "</dtUltimaAlteracao>\n";
txt += "</AndamentoObservacaoVO>";

parametroAndOb = txt;

// Inclui o Atendimento Observacao;
Observacao = WFAndObservacao.WFAndObsIncluir(parametroAndOb);

//;
//*** FIM DE PROCESSO ***;
//;
Clean(txt);


//Retorna processamento;
txt = "<WFAcaoRetornoVO xmlns=\"workflow.fo.vivo.com.br/vo\">\n";
txt += "<acaoExecucao>S</acaoExecucao>\n";
txt += "<mensagem>Reabertura Concluida</mensagem>\n";
txt += "<urlDestino>" + urlDestino + "</urlDestino>\n";
txt += "</WFAcaoRetornoVO>\n";


return txt; 
			