/**
 * 
 * @modulo  Workflow
 * @usecase Workflow
 * @author  Cassio M Garcia
 * @version $Revision: 1.1 $
 * @CVS     $Author: a5110702 $ - $Date: 2009/07/31 15:33:29 $
 **/


#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>
#include<sqlda.h>

#include "../include/cWFAtendimentoObservacao.h"
#include "../../../commons/queryMacro.h"

// Declara as estruturas compatíveis ao ProC.
EXEC SQL BEGIN DECLARE SECTION;
    #include "../include/stWFAtendimentoObservacao.h"
EXEC SQL END DECLARE SECTION;

// Prototipos
bool isNULL(const char *pBuffer);
void SqlError_AtendimentoObservacao( sqlca * sqlca );

// Implementação
void proCIncluirWFAtendimentoObservacao(st_AtendimentoObservacao *dados, st_vlAtendimentoObservacao *status, XMLDPR *xmlDpr)
{
    ULOG_START("proCIncluirWFAtendimentoObservacao()");

    if ( isNULL(dados->pdsObservacao) )
    {
        ULOGW("Atendimento %d sem observaçao informada",dados->idAtendimento);
        ULOG_END("proCIncluirWFAtendimentoObservacao()");
        return;
    }

    struct sqlca sqlca;
    
    EXEC SQL BEGIN DECLARE SECTION;
        struct st_AtendimentoObservacao *pDados = dados;
        struct st_vlAtendimentoObservacao *pStatus = status;
    EXEC SQL END DECLARE SECTION;

    EXEC SQL WHENEVER SQLERROR DO SqlError_AtendimentoObservacao( &sqlca );

    EXEC SQL
        INSERT INTO
            ATENDIMENTO.ATENDIMENTOOBSERVACAO
            (
                IDATENDIMENTO,
                DSOBSERVACAO,
                IDUSUARIOALTERACAO,
                DTULTIMAALTERACAO
            )
        VALUES
            (
                :pDados->idAtendimento,
                TRIM(SUBSTR(:pDados->pdsObservacao,1,1000)),
                :pDados->idUsuarioAlteracao,
                SYSDATE
            );

    // ==> SM324--DPR--DEZ/2006--Cassio
    if ( xmlDpr )
    {
        AtendimentoObservacaoDPR atendimentoobservacaodpr;

        atendimentoobservacaodpr.setIdAtendimento(pDados->idAtendimento);
        atendimentoobservacaodpr.setDsObservacao((char*)pDados->pdsObservacao);
        atendimentoobservacaodpr.setOpCode(OPCODE_INSERT);

        xmlDpr->atendimentoobservacaovo.inserir(&atendimentoobservacaodpr);
    }
    // <== SM324--DPR--DEZ/2006--Cassio

    ULOG_END("proCIncluirWFAtendimentoObservacao()");
}

bool isNULL(const char *pBuffer)
{
    if (  pBuffer == 0 ) return true;
    if ( *pBuffer == 0 ) return true;

    const char *p = pBuffer;
    do
    {
        if ( *p != ' ' ) return false;
    } while ( *(++p) );

    return true;
}

void SqlError_AtendimentoObservacao( sqlca * sqlca )
{
    ULOGE( "SqlError_AtendimentoObservacao:sqlcode=%d,sqlerrmc=%.70s"
                              ,sqlca->sqlcode
                              ,sqlca->sqlerrm.sqlerrmc );
    throw new 
        TuxBasicOraException(
            sqlca->sqlcode,
            sqlca->sqlerrm.sqlerrmc,
            sqlca->sqlerrm.sqlerrml
            );
}
