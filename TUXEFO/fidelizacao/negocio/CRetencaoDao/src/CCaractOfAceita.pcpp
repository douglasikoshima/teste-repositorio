#include <CCaractOfAceita.h>


int  DefineOferta( char *sgOferta );
void AnalisaOferta( DOMNode *pdnode, stCaractOferta *pCaractOferta,char *tagBusca[] );
void InsereCaracteristica( stCaractOferta *pCaractOferta );
void IdentificaAparelhoChip( stCaractOferta *pCaractOferta );

int CCaractOfAceita::Inserir( DOMNode *pdnode, char * idUser, char *m_idOfertaRealizada, char *sgOferta )
{

    ULOG_START( "CCaractOfAceita::Inserir()" );

    char *domOfertas[] = { "Pontos",
                           "Suspencao",
                           "Planos",
                           "Migracao",
                           "Aparelhos",
                           "Bonus",
                           0x0 };
    

    char *tagPontos[] = { "qtPontos",
                          0x0 };

    char *tagSuspencao[] = { "dtInicio",
                             "dtFim",
                             0x0 };

    char *tagPlanos[] = { "planoAtual",
                          "novoPlano",
                          "idNovoPlano",
                          0x0 };

    char *tagMigracao[] = { "nrLinhaAtual",
                            "nrLinhaNova",
                            "vlSaldo",
                            "dtInicioVigencia",
                            "dtFinalVigencia",
                            0x0 };

    char *tagAparelhos[] = { "nmModeloAparelho",
                             "nmLoja",
                             "nrOrdemVenda",
                             "vlPrecoReal",
                             "vlPrecoAbs",
                             "nmCor",
                             "inTipoEntrega",
                             "idTipoPagamentoAparelho",
                             "nrParcelas",
                             "vlPercentualDesconto",
                             "vlParcela",
                             "dsEnderecoEntrega",
                             "dsDocumentoTerceiro",
                             "nrContatoTelefone",
                             "cdSapAparelho",
                             "nmTerceiro",
                             "qtdEstoqueLoja",
                             "dtRetirada",
                             0x0 };
  
    char *tagBonus[] = { "nmBonus",
                         "idMatrizBonus",
                         "dtInicioVigencia",
                         "dtFinalVigencia",
                         0x0 };


    int iOferta = -1;
    stCaractOferta pCaractOferta;
    memset( &pCaractOferta,0x0,sizeof(pCaractOferta) );
    pCaractOferta.idUsuario = atoi(idUser);
    pCaractOferta.idOfertaRealizada = atoi(m_idOfertaRealizada);


    // EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
    try
    {

        iOferta = DefineOferta(sgOferta);
        switch( iOferta )
        {

            case 0 : strcpy( pCaractOferta.domCaractOferta,domOfertas[iOferta] );
                     AnalisaOferta( pdnode,&pCaractOferta,tagPontos );
                     break;

            case 1 : strcpy( pCaractOferta.domCaractOferta,domOfertas[iOferta] );
                     AnalisaOferta( pdnode,&pCaractOferta,tagSuspencao );
                     break;

            case 2 : strcpy( pCaractOferta.domCaractOferta,domOfertas[iOferta] );
                     AnalisaOferta( pdnode,&pCaractOferta,tagPlanos );
                     break;

            case 3 : strcpy( pCaractOferta.domCaractOferta,domOfertas[iOferta] );
                     AnalisaOferta( pdnode,&pCaractOferta,tagMigracao );
                     break;

            case 4 : strcpy( pCaractOferta.domCaractOferta,domOfertas[iOferta] );
                     AnalisaOferta( pdnode,&pCaractOferta,tagAparelhos );
                     break;

            case 5 : strcpy( pCaractOferta.domCaractOferta,domOfertas[iOferta] );
                     AnalisaOferta( pdnode,&pCaractOferta,tagBonus );
                     break;
        }

        ULOG_END( "CCaractOfAceita::Inserir()" );
    
        return 1;
    }
    catch ( ... )
    {
        ULOGE( "*** ERROR: ERRO DESCONHECIDO" );
        ULOG_END( "CCaractOfAceita::Inserir()" );

        return 0;
    }

    ULOG_END( "CCaractOfAceita::Inserir()" );
    
}



int DefineOferta( char * sgOferta )
{

    if ( !strcmp(sgOferta,"PT") ) return 0;
    if ( !strcmp(sgOferta,"SP") ) return 1;
    if ( !strcmp(sgOferta,"PL") ) return 2;
    if ( !strcmp(sgOferta,"MIG") ) return 3;
    if ( !strcmp(sgOferta,"AP") ) return 4;
    if ( !strcmp(sgOferta,"BN") ) return 5;

    return -1;

}



void AnalisaOferta( DOMNode *pdnode, stCaractOferta *pCaractOferta,char *tagBusca[] )
{
    ULOG_START( "AnalisaOferta()" );

    char param[256];
    TuxHelper txh;
    DOMNode * dnOferta = NULL;

    ULOG( ">>> Procurando Oferta Aceita [%s]",(char *)pCaractOferta->domCaractOferta );
    dnOferta = txh.walkDOM( pdnode,(char *)pCaractOferta->domCaractOferta,0 );
    if ( dnOferta != NULL ) 
    {
        for ( int i = 0; (char *)tagBusca[i][0] != NULL ; i++ )
        {
            param[0] = 0x0;
            get_tag(param,dnOferta,tagBusca[i],0,-1);
            if ( param[0] != NULL )
            {
                ULOG( "*** Encontrou caracteristica [%s]",tagBusca[i] );
                ULOG( "*** Valor     caracteristica [%s]",param );

                strcpy( pCaractOferta->vlPropriedade,param );
                
                if ( !strcmp(tagBusca[i],"nmModeloAparelho") )
                	strcpy( pCaractOferta->sgCaractOferta,"MDAP" );
                else
                	strcpy( pCaractOferta->sgCaractOferta,tagBusca[i] );
                InsereCaracteristica( pCaractOferta );
            }
        }

    }

    ULOG_END( "AnalisaOferta()" );

}



void InsereCaracteristica( stCaractOferta *pCaractOferta )
{
    ULOG_START( "InsereCaracteristica()" );

    EXEC SQL BEGIN DECLARE SECTION;

        int idOfertaRealizada = pCaractOferta->idOfertaRealizada;
        int idCaracteristicaOferta = 0;
        int idUsuario = pCaractOferta->idUsuario;

        VARCHAR  nmPropriedade[256];
        VARCHAR  vlPropriedade[256];
        VARCHAR  sigla[256];
        VARCHAR  sgBuffer[256];

        short i_idCaracteristicaOferta = -1;
        short i_nmPropriedade = -1;
        short i_sgBuffer = -1;

    EXEC SQL END DECLARE SECTION;

    memset( &nmPropriedade, 0x0, sizeof(nmPropriedade) );
    memset( &vlPropriedade, 0x0, sizeof(vlPropriedade) );
    memset( &sigla        , 0x0, sizeof(sigla) );
    memset( &sgBuffer     , 0x0, sizeof(sgBuffer) );

    try
    {

        ULOG( "*** idOfertaRealizada [%d]",idOfertaRealizada );
        ULOG( "*** idUsuario [%d]",idUsuario );

        strToOra( sigla        ,pCaractOferta->sgCaractOferta );
        ULOG( "*** sigla [%s]",(char *)sigla.arr );

        strToOra( vlPropriedade,pCaractOferta->vlPropriedade );
        ULOG( "*** vlPropriedade [%s]",(char *)vlPropriedade.arr );

        EXEC SQL 
        SELECT 
            IDCARACTERISTICAOFERTA,
            DSCARACTERISTICAOFERTA
        INTO 
            :idCaracteristicaOferta:i_idCaracteristicaOferta,
            :nmPropriedade:i_nmPropriedade
        FROM 
            RETENCAO.CARACTERISTICAOFERTA           
        WHERE 
            ( TRIM(SGCARACTERISTICAOFERTA) = TRIM(UPPER(:sigla) )
        OR  
            TRIM(NMCOLUNA) = TRIM(UPPER(:sigla))) 
        AND 
            ROWNUM < 2;

        if ( i_idCaracteristicaOferta == -1 )
        {
            idCaracteristicaOferta = 666;
            strToOra( nmPropriedade,"não cadastrado" );
        }

        endOraStr( nmPropriedade );

        EXEC SQL
        SELECT
           UPPER(:sigla)
        INTO 
           :sgBuffer:i_sgBuffer
        FROM DUAL;
        endOraStr( sgBuffer );

        if ( !strcmp((char *)sgBuffer.arr,"CDSAPAPARELHO") )
        {
            IdentificaAparelhoChip( pCaractOferta );
        }

        ULOG( "*** idCaracteristicaOferta [%d]",idCaracteristicaOferta );
        ULOG( "*** nmPropriedade [%s]",(char *)nmPropriedade.arr );

        EXEC SQL 
        INSERT INTO RETENCAO.CARACTERISTICAOFERTAACEITA
        (
            IDCARACTERISTICAOFERTAACEITA,
            IDOFERTAREALIZADA, 
            NMPROPRIEDADE,
            VLPROPRIEDADE,
            IDPESSOAUSUARIOINCLUSAO,
            DTINCLUSAO,
            IDPESSOAUSUARIOALTERACAO,
            DTALTERACAO,
            IDUSUARIOALTERACAO,
            DTULTIMAALTERACAO,
            IDCARACTERISTICAOFERTA
        )
        VALUES
        ( 
            RETENCAO.CARACTERISTICAOFERTAACEITASQ.NEXTVAL,
            :idOfertaRealizada,
            :nmPropriedade,
            :vlPropriedade,
            :idUsuario,
            SYSDATE,
            :idUsuario,
            SYSDATE,
            :idUsuario,
            SYSDATE,
            :idCaracteristicaOferta
        );

        ULOG_END( "InsereCaracteristica()" );

    }
    catch( ... )
    {
        char ErrorMsg[2048];
        sprintf( ErrorMsg, "%.*s", sqlca.sqlerrm.sqlerrml-1, sqlca.sqlerrm.sqlerrmc );
        ULOGE( "*** ERROR: %s",ErrorMsg );
        ULOG_END( "InsereCaracteristica()" );
    }

}



void IdentificaAparelhoChip( stCaractOferta *pCaractOferta )
{
    ULOG_START( "IdentificaAparelhoChip()" );

    EXEC SQL BEGIN DECLARE SECTION;

        int idOfertaRealizada = pCaractOferta->idOfertaRealizada;
        int idCaracteristicaOferta = 0;
        int idUsuario = pCaractOferta->idUsuario;
        int idRetencao = -1;

        VARCHAR  cdChip[256];
        VARCHAR  vlChip[256];
        VARCHAR  sigla[256];
        VARCHAR  nmPropriedade[256];
        VARCHAR  vlPropriedade[256];

        short i_cdChip = -1;
        short i_vlChip = -1;
        short i_idRetencao = -1;
        short i_nmPropriedade = -1;
        short i_vlPropriedade = -1;
        short i_idCaracteristicaOferta = -1;

    EXEC SQL END DECLARE SECTION;

    memset( &cdChip       , 0x0, sizeof(cdChip) );
    memset( &vlChip       , 0x0, sizeof(vlChip) );
    memset( &sigla        , 0x0, sizeof(sigla) );
    memset( &nmPropriedade, 0x0, sizeof(nmPropriedade) );
    memset( &vlPropriedade, 0x0, sizeof(vlPropriedade) );

    try
    {

        ULOG( "*** idOfertaRealizada [%d]",idOfertaRealizada );
        ULOG( "*** idUsuario [%d]",idUsuario );

        EXEC SQL
        SELECT
            IDRETENCAO
        INTO
            :idRetencao:i_idRetencao
        FROM
            RETENCAO.OFERTAREALIZADA
        WHERE
            IDOFERTAREALIZADA = :idOfertaRealizada;

        ULOG( "*** idRetencao [%d]",idRetencao );
        
        
        EXEC SQL
        SELECT
            CDCHIP,
            VLCHIP
        INTO
            :cdChip:i_cdChip,
            :vlChip:i_vlChip
        FROM
            RETENCAO.RETENCAOAPARELHO
        WHERE
            IDRETENCAO = :idRetencao;

        if ( i_cdChip < 0 )
        {
            ULOG( ">>> Venda de aparelho sem Chip" );
            ULOG_END( "IdentificaAparelhoChip()" );
            return;
        }

        endOraStr( cdChip );
        endOraStr( vlChip );

        ULOG( "*** cdChip [%d]",idRetencao );
        
        //
        // @Marcelo - Feb/2007
        // Grava o codigo SAP do Chip

        strToOra( sigla,"CDSAPCHIP" );
        ULOG( "*** sigla [%s]",(char *)sigla.arr );

        strToOra( vlPropriedade,(char *)cdChip.arr );
        ULOG( "*** vlPropriedade [%s]",(char *)vlPropriedade.arr );

        EXEC SQL 
        SELECT 
            IDCARACTERISTICAOFERTA,
            DSCARACTERISTICAOFERTA
        INTO 
            :idCaracteristicaOferta:i_idCaracteristicaOferta,
            :nmPropriedade:i_nmPropriedade
        FROM 
            RETENCAO.CARACTERISTICAOFERTA           
        WHERE 
            ( TRIM(SGCARACTERISTICAOFERTA) = TRIM(UPPER(:sigla) )
        OR  
            TRIM(NMCOLUNA) = TRIM(UPPER(:sigla))) 
        AND 
            ROWNUM < 2;

        if ( i_idCaracteristicaOferta == -1 )
        {
            idCaracteristicaOferta = 666;
            strToOra( nmPropriedade,"não cadastrado" );
        }

        endOraStr( nmPropriedade );

        ULOG( "*** idCaracteristicaOferta [%d]",idCaracteristicaOferta );
        ULOG( "*** nmPropriedade [%s]",(char *)nmPropriedade.arr );

        EXEC SQL 
        INSERT INTO RETENCAO.CARACTERISTICAOFERTAACEITA
        (
            IDCARACTERISTICAOFERTAACEITA,
            IDOFERTAREALIZADA, 
            NMPROPRIEDADE,
            VLPROPRIEDADE,
            IDPESSOAUSUARIOINCLUSAO,
            DTINCLUSAO,
            IDPESSOAUSUARIOALTERACAO,
            DTALTERACAO,
            IDUSUARIOALTERACAO,
            DTULTIMAALTERACAO,
            IDCARACTERISTICAOFERTA
        )
        VALUES
        ( 
            RETENCAO.CARACTERISTICAOFERTAACEITASQ.NEXTVAL,
            :idOfertaRealizada,
            :nmPropriedade,
            :vlPropriedade,
            :idUsuario,
            SYSDATE,
            :idUsuario,
            SYSDATE,
            :idUsuario,
            SYSDATE,
            :idCaracteristicaOferta
        );


        //
        // @Marcelo - Feb/2007
        // Grava o valor de venda do Chip

        memset( &nmPropriedade, 0x0, sizeof(nmPropriedade) );
        i_nmPropriedade = -1;

        strToOra( sigla,"VLPRECOCHIP" );
        ULOG( "*** sigla [%s]",(char *)sigla.arr );

        strToOra( vlPropriedade,(char *)vlChip.arr );
        ULOG( "*** vlPropriedade [%s]",(char *)vlPropriedade.arr );

        EXEC SQL 
        SELECT 
            IDCARACTERISTICAOFERTA,
            DSCARACTERISTICAOFERTA
        INTO 
            :idCaracteristicaOferta:i_idCaracteristicaOferta,
            :nmPropriedade:i_nmPropriedade
        FROM 
            RETENCAO.CARACTERISTICAOFERTA           
        WHERE 
            ( TRIM(SGCARACTERISTICAOFERTA) = TRIM(UPPER(:sigla) )
        OR  
            TRIM(NMCOLUNA) = TRIM(UPPER(:sigla))) 
        AND 
            ROWNUM < 2;

        if ( i_idCaracteristicaOferta == -1 )
        {
            idCaracteristicaOferta = 666;
            strToOra( nmPropriedade,"não cadastrado" );
        }

        endOraStr( nmPropriedade );
        
        ULOG( "*** idCaracteristicaOferta [%d]",idCaracteristicaOferta );
        ULOG( "*** nmPropriedade [%s]",(char *)nmPropriedade.arr );

        EXEC SQL 
        INSERT INTO RETENCAO.CARACTERISTICAOFERTAACEITA
        (
            IDCARACTERISTICAOFERTAACEITA,
            IDOFERTAREALIZADA, 
            NMPROPRIEDADE,
            VLPROPRIEDADE,
            IDPESSOAUSUARIOINCLUSAO,
            DTINCLUSAO,
            IDPESSOAUSUARIOALTERACAO,
            DTALTERACAO,
            IDUSUARIOALTERACAO,
            DTULTIMAALTERACAO,
            IDCARACTERISTICAOFERTA
        )
        VALUES
        ( 
            RETENCAO.CARACTERISTICAOFERTAACEITASQ.NEXTVAL,
            :idOfertaRealizada,
            :nmPropriedade,
            :vlPropriedade,
            :idUsuario,
            SYSDATE,
            :idUsuario,
            SYSDATE,
            :idUsuario,
            SYSDATE,
            :idCaracteristicaOferta
        );


        ULOG_END( "IdentificaAparelhoChip()" );

    }
    catch( ... )
    {
        char ErrorMsg[2048];
        sprintf( ErrorMsg, "%.*s", sqlca.sqlerrm.sqlerrml-1, sqlca.sqlerrm.sqlerrmc );
        ULOGE( "*** ERROR: %s",ErrorMsg );
        ULOG_END( "IdentificaAparelhoChip()" );
    }

}

