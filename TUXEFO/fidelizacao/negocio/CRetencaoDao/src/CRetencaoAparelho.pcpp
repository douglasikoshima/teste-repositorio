
#include <CRetencaoAparelho.h>


int CRetencaoAparelho::Inserir(DOMNode *pdnode,char *pidUser,char *pidRetencao)
{
 ULOG_START( "CRetencaoAparelho::Inserir" );

    char parm[255];
    char szSigla[10];
    char szhell[4000];
    char szidContrato[10];

    EXEC SQL BEGIN DECLARE SECTION;
        
        VARCHAR    idPessoaDePara[40];
        VARCHAR    idRetencao[21+1];
        VARCHAR    idUser[21+1];
        VARCHAR    nmModeloAparelho[255];
        VARCHAR    nmLoja[255];
        VARCHAR    nrOrdemVenda[255];
        VARCHAR    vlPrecoReal[255];
        VARCHAR    vlPrecoAbs[255];
        VARCHAR    nmCor[20+1];
        VARCHAR    inTipoEntrega[20+1];
        int        idTipoPagamentoAparelho = 2;
        short      inTipoPagamentoAparelho = -1;
        VARCHAR    dsTipoPagamentoAparelho[255];
        VARCHAR    nrParcelas[20+1];
        VARCHAR    vlPercentualDesconto[20+1];
        VARCHAR    vlParcela[20+1];
        VARCHAR    dsEnderecoEntrega[255+1];
        VARCHAR    dsDocumentoTerceiro[255];
        VARCHAR    idMatrizAparelho[20+1];
        VARCHAR    nrContatoTelefone[255];
        VARCHAR    cdSapAparelho[20+1];
        VARCHAR    nmTerceiro[255]; 
        VARCHAR    qtdEstoqueLoja[20+1];
        VARCHAR    dtRetirada[20+1];
        VARCHAR    idTipoPessoa[21+1];
        VARCHAR    nrLinha[21+1];
        VARCHAR    cdChip[20+1]; 
        VARCHAR    vlChip[20+1];
        VARCHAR    dsTipoAparelho[40+1];
        int        idTipoAparelho=0;

        VARCHAR idMatrizAparelhoTeste[22];
        short i_idMatrizAparelhoTeste = -1;

        VARCHAR idAparelhoTeste[22];
        short i_idAparelhoTeste = -1;

        VARCHAR idSegmentacao[22];
        short i_idSegmentacao = -1;

        VARCHAR idUFOperadora[22];
        short i_idUFOperadora = -1;

        short   i_cdchip=-1;
        short   i_vlchip=-1;

        VARCHAR sgOferta[6];
        VARCHAR idContrato[21+1];
        VARCHAR cdSAPContrato[10];
        short   icdSAPContrato=-1;
        VARCHAR dtDE[16];
        short   idtDE=-1;
        VARCHAR dtATE[16];
        short   idtATE=-1;

    EXEC SQL END DECLARE SECTION;

    EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

    memset( &idMatrizAparelhoTeste,0x0,sizeof(idMatrizAparelhoTeste) );
    memset( &idAparelhoTeste,0x0,sizeof(idAparelhoTeste) );
    memset( &idSegmentacao,0x0,sizeof(idSegmentacao) );
    memset( &idUFOperadora,0x0,sizeof(idUFOperadora) );
    memset( &idContrato,0x0,sizeof(idContrato) );
    memset( &cdSAPContrato,0x0,sizeof(cdSAPContrato) );
    memset( &dtDE,0x0,sizeof(dtDE) );
    memset( &dtATE,0x0,sizeof(dtATE) );
    memset( &idRetencao,0,sizeof(idRetencao));
    memset( &idUser,0,sizeof(idUser));                  
    memset( &nmModeloAparelho,0,sizeof(nmModeloAparelho));           
    memset( &nmLoja,0,sizeof(nmLoja));                   
    memset( &nrOrdemVenda,0,sizeof(nrOrdemVenda));               
    memset( &vlPrecoReal,0,sizeof(vlPrecoReal));               
    memset( &vlPrecoAbs,0,sizeof(vlPrecoAbs));               
    memset( &nmCor,0,sizeof(nmCor));                   
    memset( &inTipoEntrega,0,sizeof(inTipoEntrega));           
    memset( &dsTipoPagamentoAparelho,0,sizeof(dsTipoPagamentoAparelho));    
    memset( &nrParcelas,0,sizeof(nrParcelas));                
    memset( &vlPercentualDesconto,0,sizeof(vlPercentualDesconto));        
    memset( &vlParcela,0,sizeof(vlParcela));                
    memset( &dsEnderecoEntrega,0,sizeof(dsEnderecoEntrega));        
    memset( &dsDocumentoTerceiro,0,sizeof(dsDocumentoTerceiro));        
    memset( &idMatrizAparelho,0,sizeof(idMatrizAparelho));            
    memset( &nrContatoTelefone,0,sizeof(nrContatoTelefone));           
    memset( &cdSapAparelho,0,sizeof(cdSapAparelho));           
    memset( &nmTerceiro,0,sizeof(nmTerceiro));               
    memset( &qtdEstoqueLoja,0,sizeof(qtdEstoqueLoja));          
    memset( &dtRetirada,0,sizeof(dtRetirada));              
    memset( &idTipoPessoa,0,sizeof(idTipoPessoa));            
                                             
    //dados do chip                        
    memset( &nrLinha,0,sizeof(nrLinha));                 
    memset( &cdChip,0,sizeof(cdChip));                  
    memset( &vlChip,0,sizeof(vlChip));                  
    memset( &dsTipoAparelho,0,sizeof(dsTipoAparelho));     

    strToOra(idRetencao,pidRetencao);
    strToOra(idUser,pidUser);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"idPessoaDePara",0,-1); 
    strToOra(idPessoaDePara,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"nmModeloAparelho",0,-1); 
    strToOra(nmModeloAparelho,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"nmLoja",0,-1); 
    strToOra(nmLoja,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"nrOrdemVenda",0,-1); 
    strToOra(nrOrdemVenda,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"vlPrecoReal",0,-1); 
    strToOra(vlPrecoReal,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"vlPrecoAbs",0,-1); 
    strToOra(vlPrecoAbs,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"inTipoEntrega",0,-1); 
    strToOra(inTipoEntrega,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"nmCor",0,-1); 
    strToOra(nmCor,parm);
            
    parm[0] = 0x0;
    //neste caso o valor é enviado para a variavel dsTipoPagamentoAparelho
    get_tag(parm,pdnode,"idTipoPagamentoAparelho",0,-1); 
    idTipoPagamentoAparelho = atoi(parm);
    if ( !idTipoPagamentoAparelho )
    {
        strToOra( dsTipoPagamentoAparelho,parm );
    }

    parm[0] = 0x0;
    get_tag(parm,pdnode,"nrParcelas",0,-1); 
    strToOra(nrParcelas,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"vlPercentualDesconto",0,-1); 
    strToOra(vlPercentualDesconto,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"vlParcela",0,0); 
    strToOra(vlParcela,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"dsEnderecoEntrega",0,-1); 
    strToOra(dsEnderecoEntrega,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"dsDocumentoTerceiro",0,-1); 
    strToOra(dsDocumentoTerceiro,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"idMatrizAparelho",0,-1); 
    strToOra(idMatrizAparelho,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"nrContatoTelefone",0,-1); 
    strToOra(nrContatoTelefone,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"cdSapAparelho",0,-1); 
    strToOra(cdSapAparelho,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"nmTerceiro",0,-1); 
    strToOra(nmTerceiro,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"qtdEstoqueLoja",0,-1); 
    strToOra(qtdEstoqueLoja,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"dtRetirada",0,-1); 
    strToOra(dtRetirada,parm);

    parm[0] = 0x0;
    get_tag(parm,pdnode,"nrLinha",0,-1); 
    strToOra(nrLinha,parm);

    EXEC SQL
    SELECT pessoa.idtipopessoa
      INTO :idTipoPessoa
      FROM customer.pessoadepara pessoadepara, customer.pessoa pessoa
     WHERE pessoa.idpessoa = pessoadepara.idpessoa
       AND pessoadepara.idpessoadepara = :idPessoaDePara
       AND ROWNUM < 2;

    endOraStr(dsTipoAparelho);

    ULOG("Query de Tipo de Aparelho");
    EXEC SQL
    SELECT ta.DSTIPOAPARELHO,
           ta.idtipoaparelho
    INTO    :dsTipoAparelho,
            :idTipoAparelho
    FROM retencao.aparelho ma,
         retencao.aparelho A,
         apoio.tipoaparelho ta,
         retencao.aparelhotipopessoa aptp
    WHERE a.IDAPARELHO=ma.IDAPARELHO
    AND   a.idtipoaparelho=ta.idtipoaparelho
    and   aptp.idaparelho = ma.idaparelho
    AND   aptp.idTipoPessoa = :idTipoPessoa
    AND   ma.IDAPARELHO=:idMatrizAparelho
    AND ROWNUM < 2;

    
    endOraStr(dsTipoAparelho);

    ULOG( "Obteve DSTIPOAPARELHO [%s], idtipoaparelho [%d], idTipoPessoa [%s]",
          (char *)dsTipoAparelho.arr,
          idTipoAparelho,
          (char *)idTipoPessoa.arr 
        );
    
    // if( idTipoAparelho == 3 )
    // {
        // EXEC SQL  
        // SELECT EC.CDSAPCHIPPREPROG,
              // ECS.VLCHIPPREPROG
        // INTO  :cdChip:i_cdchip,
              // :vlChip:i_vlchip
        // FROM  RETENCAO.ESTOQUECHIP EC,
              // RETENCAO.ESTOQUECHIPSAP ECS
        // WHERE  EC.IDESTOQUECHIP=ECS.IDESTOQUECHIP
        // AND    EC.IDAREAREGISTRO = ( SELECT IDAREAREGISTRO FROM APOIO.AREAREGISTRO WHERE CDAREAREGISTRO = SUBSTR(:nrLinha,1,2) )
        // AND    ECS.IDTIPOPESSOA=:idTipoPessoa;

        // endOraStr(cdChip);
        // endOraStr(vlChip);
        // ULOG( "*** Executou busca tipoAparelho = 3, cdChip [%s], vlChip [%s]",(char *)cdChip.arr,(char *)vlChip.arr );
    // }
    // if( idTipoAparelho == 2 )
    // {
        // EXEC SQL    
        // SELECT 
           // EC.CDSAPCHIPAVULSO,
           // ECS.VLCHIPAVULSO
        // INTO 
           // :cdChip:i_cdchip,
           // :vlChip:i_vlchip
        // FROM   
           // RETENCAO.ESTOQUECHIP EC,
           // RETENCAO.ESTOQUECHIPSAP ECS
        // WHERE  
           // EC.IDESTOQUECHIP=ECS.IDESTOQUECHIP
        // AND    
           // EC.IDAREAREGISTRO = ( SELECT IDAREAREGISTRO FROM APOIO.AREAREGISTRO WHERE CDAREAREGISTRO = SUBSTR(:nrLinha,1,2) )
        // AND    
           // ECS.IDTIPOPESSOA=:idTipoPessoa;

        // endOraStr(cdChip);
        // endOraStr(vlChip);

        // ULOG( "*** Executou busca tipoAparelho = 2, cdChip [%s], vlChip [%s]",(char *)cdChip.arr,(char *)vlChip.arr );
    // }
    
    if ( idTipoPagamentoAparelho == 0 )
    {
        EXEC SQL
        SELECT idTipoPagamentoAparelho
        INTO   :idTipoPagamentoAparelho:inTipoPagamentoAparelho
        FROM RETENCAO.TipoPagamentoAparelho
        WHERE dsTipoPagamentoAparelho=:dsTipoPagamentoAparelho;
    }
    
    ULOG( ">>> dsTipoPagamentoAparelho [%s]",(char *)dsTipoPagamentoAparelho.arr );
    ULOG( ">>> idTipoPagamentoAparelho [%d], inTipoPagamentoAparelho [%d]",idTipoPagamentoAparelho,inTipoPagamentoAparelho );

    ULOG("finalizando strings do oracle.");

    ULOG_VAR(cdChip);
    ULOG_VAR(dsTipoAparelho);
    ULOG_VAR(vlChip);
    ULOG_INT(idTipoPagamentoAparelho);
    
    ULOG("Insert RetencaoAParelho");

    ULOG_VAR(idRetencao);
    ULOG_VAR(nmLoja);
    ULOG_VAR(nrOrdemVenda);
    ULOG_VAR(vlPrecoReal);
    ULOG_VAR(vlPrecoAbs);
    ULOG_VAR(nmCor);
    ULOG_VAR(inTipoEntrega);
    ULOG_INT(idTipoPagamentoAparelho);
    ULOG_VAR(nmModeloAparelho);
    ULOG_VAR(nrParcelas);
    ULOG_VAR(vlPercentualDesconto);
    ULOG_VAR(vlParcela);
    ULOG_VAR(dsEnderecoEntrega);
    ULOG_VAR(dsDocumentoTerceiro);
    ULOG_VAR(idMatrizAparelho);
    ULOG_VAR(nrContatoTelefone);
    ULOG_VAR(qtdEstoqueLoja);
    ULOG_VAR(nmTerceiro);
    ULOG_VAR(cdSapAparelho);
    ULOG_VAR(vlChip);
    ULOG_VAR(cdChip);
    ULOG_VAR(dsTipoAparelho);
    ULOG_VAR(idUser);

    memset( szSigla, 0, sizeof(szSigla) );
    get_tag( szSigla, pdnode, "sgTipoPessoa", 0, -1 );

    if ( strcmp(szSigla,"PJ") == 0 )
    {
        memset( szSigla,0,sizeof(szSigla) );
        get_tag(szSigla,pdnode,"sgOfertaAceita",0,-1);
        strToOra(sgOferta,szSigla);
        memset( szidContrato,0,sizeof(szidContrato) );
        get_tag(szidContrato,pdnode,"przVigencia",0,-1);
        strToOra(idContrato,szidContrato);

        EXEC SQL
        SELECT  TPCONT.CDSAPTIPOCONTRATOPJ,
                (CASE WHEN TPCONT.SGOFERTAAPARELHO='APC' THEN
                TO_CHAR(SYSDATE,'DD/MM/YYYY') ELSE ''END)DTDE,
                (CASE WHEN TPCONT.SGOFERTAAPARELHO='APC' THEN
                TO_CHAR((SYSDATE+TPCONT.QTPRAZODIAS),'DD/MM/YYYY') ELSE ''END)DTATE
        INTO    :cdSAPContrato:icdSAPContrato,
                :dtDE:idtDE,
                :dtATE:idtATE
        FROM   RETENCAO.TIPOCONTRATOPJ TPCONT
        WHERE  TPCONT.SGOFERTAAPARELHO=:sgOferta
        AND      TPCONT.IDTIPOCONTRATOPJ=:idContrato;

        endOraStr( cdSAPContrato );
           endOraStr( dtDE );
        endOraStr( dtATE );

        ULOG( "Em Consulta Pessoa Juridica" );
        ULOG( "cdSAPContrato [%s]",(char *)cdSAPContrato.arr );
        ULOG( "dtDE          [%s]",(char *)dtDE.arr );
        ULOG( "dtATE         [%s]",(char *)dtATE.arr );
    }
    EXEC SQL
    INSERT INTO RETENCAO.RETENCAOAPARELHO(IDRETENCAO,
                                            DTRETIRADA,            
                                            NMLOJA,
                                            NRORDEMVENDA,
                                            VLPRECOREAL,
                                            VLPRECOABS,
                                            NMCOR,
                                            INTIPOENTREGA,
                                            IDTIPOPAGAMENTOAPARELHO,
                                            DSMODELO,
                                            NRPARCELAS,
                                            VLPERCENTUALDESCONTO,
                                            VLPARCELA,
                                            DSENDERECOENTREGA,
                                            DSDOCUMENTOTERCEIRO,
                                            DSCONTATOTELEFONE,
                                            QTESTOQUELOJA,
                                            NMPESSOARECEBE,
                                            CDSAPAPARELHO,
                                            VLCHIP,
                                            CDCHIP,
                                            DSCHIP,
                                            IDUSUARIOINCLUSAO,
                                            DTINCLUSAO,
                                            CDSAPPRAZOVIGENCIA,
                                            DTSAPDE,
                                            DTSAPATE
                                            ) 
                                    VALUES(:idRetencao,
                                           SYSDATE,
                                           substr(:nmLoja,1, 60),
                                           substr(:nrOrdemVenda,1, 18),
                                           REPLACE(:vlPrecoReal,',','.'),
                                           REPLACE(:vlPrecoAbs,',','.'),
                                           substr(:nmCor,1, 20),
                                           :inTipoEntrega,
                                           :idTipoPagamentoAparelho,
                                           substr(:nmModeloAparelho,1, 60),
                                           :nrParcelas,
                                           REPLACE(:vlPercentualDesconto,',','.'),
                                           REPLACE(:vlParcela,',','.'),
                                           substr(:dsEnderecoEntrega,1, 120),
                                           substr(:dsDocumentoTerceiro,1, 20),
                                           substr(:nrContatoTelefone,1, 60),
                                           :qtdEstoqueLoja,
                                           substr(:nmTerceiro,1, 60),
                                           substr(:cdSapAparelho,1, 60),
                                           REPLACE(:vlChip,',','.'),
                                           substr(:cdChip,1, 20),
                                           substr(:dsTipoAparelho,1, 20),
                                           :idUser,
                                           SYSDATE,
                                           :idContrato,
                                           to_date(:dtDE,'dd/mm/yyyy'),
                                           to_date(:dtATE,'dd/mm/yyyy'));

    ULOG_END( "CRetencaoAparelho::Inserir" );

    return 1;
}
