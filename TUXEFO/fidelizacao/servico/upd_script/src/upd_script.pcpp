//
// $Id: upd_script.pcpp,v 1.1 2009/07/31 15:33:49 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"

int upd_script(int usuario, DOMNode*dnode, XMLGen*xml)
{
  char parm[50];
  int  i;

  EXEC SQL BEGIN DECLARE SECTION;
  int     operacao;
  int     idResposta1;
  int     idResposta2;
  int     idUsuarioAlteracao;
  int     idUfOperadora;
  int     contador=0;
  int	  idTipoPessoa;
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);


  try
  {
    //  Obtendo dados do xml
    get_tag(parm,dnode,"operacao",0,0);
    operacao = atoi(parm);

    get_tag(parm,dnode,"idIntencao",0,0);
    idResposta1 = atoi(parm);

    get_tag(parm,dnode,"idUfOperadora",0,0);
    idUfOperadora = atoi(parm);

	get_tag(parm,dnode,"idTipoPessoa",0,0);
    idTipoPessoa = atoi(parm);

    // Pegando id do usuario
    idUsuarioAlteracao = usuario;

	
// Update 
	i = 0;
	while( get_tag(parm,dnode,"id",i,-1) != -1 )
	{
		idResposta2 = atoi(parm);
		ULOG_INT(idResposta2);


	if(!operacao)
		{
			//###################################################
			//#	VERIFICANDO SE DADO EXISTE NA MATRIZ DE SCRIPT  #
			//###################################################
			EXEC SQL
		
			SELECT COUNT(1) into :contador 
			FROM retencao.matrizoferta 
			WHERE  idrespostaintencao = :idResposta1
			AND    idrespostadestino=:idResposta2
			AND	   idufoperadora = :idUfOperadora
			AND	   idTipoPessoa  =:idTipoPessoa
			AND inativo=1;
			
				if(contador) 
				{
					throw new TuxBasicSvcException(NOKFID,"Existe Matriz Associada!");
				}
		}				

		EXEC SQL		 
		update retencao.RespostaUnidade
		set    inAtivo = :operacao,
		idUsuarioAlteracao = :idUsuarioAlteracao,
		dtUltimaAlteracao = sysdate 
		where idResposta1 = :idResposta1
		and   idResposta2 = :idResposta2
		and   idUfOperadora = :idUfOperadora
		AND	  idTipoPessoa =:idTipoPessoa;
		i++;
	}
	
 	 // insert OK 
    xml->addItem("descricao","MODIFICADO");
    xml->addItem("valor",i);
  }
  catch(...)
  {
	throw;
  }

  return 1;
}

