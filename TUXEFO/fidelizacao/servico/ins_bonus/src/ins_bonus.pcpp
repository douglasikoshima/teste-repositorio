//
// $Id: ins_bonus.pcpp,v 1.1 2009/07/31 15:34:58 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"

int insert_bonus(int usuario, DOMNode*dnode, XMLGen*xml)
{
  char parm[255];
  int   existeRegistro = 1;
  int iRet=0;

  EXEC SQL BEGIN DECLARE SECTION;
  int     idMatrizBonus;
  int     idUfOperadora;
  int	  idUnidadeOferta;
  int	  idTipoPessoa;
  int	    qtDiasValidade;
  int	    vlBonus;
  int       idCount=0;
  VARCHAR nmBonus[255];
  int     idPessoaUsuarioInclusao;
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

  try{
    //  Obtendo dados do xml
    get_tag(parm, dnode, "idufoperadora", 0, 0);
    idUfOperadora = atoi(parm);
  
    get_tag(parm, dnode, "qtdiasvalidade", 0, 0);
    qtDiasValidade = atoi(parm);
    
    get_tag(parm, dnode, "vlbonus", 0, 0);
    vlBonus = atoi(parm);

	get_tag(parm, dnode, "idUnidadeOferta", 0, 0);
    idUnidadeOferta = atoi(parm);

	get_tag(parm, dnode, "idTipoPessoa", 0, 0);
    idTipoPessoa = atoi(parm);

	get_tag(parm, dnode, "nmbonus", 0, 0);
    strToOra(nmBonus,parm);


    // Pegando id do usuario
    idPessoaUsuarioInclusao = usuario;

	EXEC SQL
	    SELECT COUNT(IDUNIDADEOFERTA)
		INTO idCount
		FROM retencao.OFERTATIPOBONUS
		WHERE IDUNIDADEOFERTA=:idUnidadeOferta;
		
     
  if(!idCount)
  {
	throw new TuxBasicSvcException(NOKFID,"idUnidadeOferta não é um bonus");

  }
  

    //Verificando existencia do registro
   
    EXEC SQL 
      select count(idMatrizBonus)
      into   :idMatrizBonus
      from retencao.matrizBonus
      where inAtivo != 0
      and   idUfOperadora = :idUfOperadora
	  and   idUnidadeOferta=:idUnidadeOferta
	  and   idTipoPessoa   =:idTipoPessoa
      and   UPPER(TRIM(nmBonus)) = UPPER(TRIM(:nmBonus));
	 

    // Insert linha
    if (!idMatrizBonus)
	{ // Nao existe registro igual
     
	EXEC SQL 
	insert 
	into retencao.matrizBonus(idMatrizBonus,
								 nmBonus,
								 vlBonus,
								 qtDiasValidade,
								 idUfOperadora,
								 idPessoaUsuarioInclusao,
								 dtInclusao,
								 idPessoaUsuarioAlteracao,
								 dtAlteracao,
								 idUsuarioAlteracao,
								 dtUltimaAlteracao,
								 inMigracaoPosPre,
								 inAtivo,
								 IDUNIDADEOFERTA,
								 IDTIPOPESSOA
								 )
	values(retencao.matrizBonusSQ.nextval, 
								 :nmBonus, 
								 :vlBonus,
								 :qtDiasValidade,
								 :idUfOperadora,
								 :idPessoaUsuarioInclusao,
								 sysdate,
								 :idPessoaUsuarioInclusao,
								 sysdate,
								 :idPessoaUsuarioInclusao,
								 sysdate,
								 0,
								 1,
								 :idUnidadeOferta,
								 :idTipoPessoa);
		   
      strcpy(parm,"INSERIDO");
	  iRet=sqlca.sqlerrd[2];
    }
	else
	{ // Ja existe registro, fazer update
      
      strcpy(parm,"Ja existe bonus com esta descrição");
	  iRet=-1;
    }

    // insert OK 
    xml->addItem("descricao",parm);
    xml->addItem("valor",iRet);
  }
  catch(...)
  {
	throw;
  }
  
  return 1;
  
}
