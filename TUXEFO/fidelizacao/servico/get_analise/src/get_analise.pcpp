

#include "../../negocio/fidutil/include/retencao.hpp"

void SetXMLFinalizaRetencao( int idRetencao, char *idAparelhoCor, XMLGen *xml ); 
void SelOfertasRealizadas( int idRetencaoPrm, XMLGen *xml );
void GetOferta( int idRetencaoPrm, char *idAparelhoCor, XMLGen *xml );
void GetAnalise( int idRetencao,XMLGen *xml );

int get_analise(int usuario, DOMNode*dnode, XMLGen*xml)
{
  ULOG_START("get_analise()");
  char parm[50];
  
  int  iTipoPessoa=0;

  EXEC SQL BEGIN DECLARE SECTION;
      VARCHAR        idPessoa[30];                //  ENDERECO ALTERADO PELO ATENDENTE RETENCAO
  	  unsigned long  idRetencao; 				    //  CHAVE PRIMARIA   		
      VARCHAR        nmPessoa[255];
	  VARCHAR        nrDocumento[25];
	  VARCHAR        dsRespostaintencao[255];
	  VARCHAR        dsRespostadestino[255]; 
	  VARCHAR        dsModelo[255];
	  VARCHAR        nmCor[255];
	  VARCHAR        vlPrecoabs[255];
	  VARCHAR        dsTipopagamentoaparelho[255];
	  VARCHAR        vlPercentualdesconto[25];
	  VARCHAR        nrParcelas[25];
	  VARCHAR        vlParcela [25];
	  VARCHAR        vlPrecoreal[25];
  	  VARCHAR        nmPessoaUsuaria[255];
	  VARCHAR        nmLoginusuario[255]; 
	  VARCHAR        dsObsAnalise[256];
      VARCHAR        dsRetornoConsulta[3000];
      VARCHAR        inExcecao[3] ;
      VARCHAR        inStatusAvaliacao[3];
	  VARCHAR        dsMotivoErro[150];
      VARCHAR        dtRequisicao[64]; 
      VARCHAR        dtResposta[64];
	  VARCHAR        idRespostaIntencao[21]; 
      VARCHAR        idRespostaDestino[21];
	  VARCHAR		 idSegmentacaoLinha[21];
	  VARCHAR		 nrLinha[21];
	  VARCHAR 		 cdSapAparelho[61];
	  VARCHAR 		 idTipoPagamentoAparelho[10];
	  VARCHAR 		 sgTipoOferta[30];
	  VARCHAR		 idAparelhoCor[21+1];
      // variavei de verificacao
      short        i_nmPessoa=-1;
	  short        i_nrDocumento=-1;
	  short        i_dsRespostaintencao=-1;
	  short        i_dsRespostadestino=-1; 
	  short        i_dsModelo=-1;
	  short        i_nmCor=-1;
	  short        i_vlPrecoabs=-1;
	  short        i_dsTipopagamentoaparelho=-1;
	  short        i_vlPercentualdesconto=-1;
	  short        i_nrParcelas=-1;
	  short        i_vlParcela=-1 ;
	  short        i_vlPrecoreal=-1;
  	  short        i_nmPessoaUsuaria=-1;
	  short        i_nmLoginusuario=-1; 
      short        i_dsObsAnalise=-1;
      short        i_dsRetornoConsulta=-1;
      short        i_inExcecao=-1;
      short        i_inStatusAvaliacao=-1;
      short        i_dtRequisicao=-1; 
      short        i_dtResposta=-1;
      short        i_dsMotivoErro=-1;
      short        i_idPessoa=-1;                //  ENDERECO ALTERADO PELO ATENDENTE RETENCAO
      short        i_cdSapAparelho=-1;
	  short		   i_nrLinha=-1;
	  short        i_idRespostaIntencao=-1; 
      short        i_idRespostaDestino=-1;
      short        i_sgTipoOferta=-1;
      short        i_idTipoPagamentoAparelho=-1;
	  short		   i_idAparelhoCor=-1;

	  VARCHAR      idAparelho[22];
	  short        i_idAparelho = -1;
      VARCHAR      idTipoPessoa[22];    
	  VARCHAR      idSegmentacao[22];   
	  VARCHAR      idUFOperadora[22];   
      short        i_idTipoPessoa = -1;
      short        i_idSegmentacao = -1;
      short        i_idUFOperadora = -1;

  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
  

  try
  {
    
      idRetencao=0 ;
      memset(&idPessoa,0x0,sizeof(idPessoa ));   
      memset(&nmPessoa,0x0,sizeof(nmPessoa )) ; 
	  memset(&nrDocumento,0x0,sizeof(nrDocumento )) ; 
	  memset(&dsRespostaintencao,0x0,sizeof(dsRespostaintencao )) ; 
	  memset(&dsRespostadestino,0x0,sizeof(dsRespostadestino )) ; 
	  memset(&dsModelo,0x0,sizeof(dsModelo )) ; 
	  memset(&nmCor,0x0,sizeof(nmCor )) ; 
	  memset(&vlPrecoabs,0x0,sizeof(vlPrecoabs )) ; 
	  memset(&dsTipopagamentoaparelho,0x0,sizeof(dsTipopagamentoaparelho )) ; 
	  memset(&vlPercentualdesconto,0x0,sizeof(vlPercentualdesconto )) ; 
	  memset(&nrParcelas,0x0,sizeof(nrParcelas )) ; 
	  memset(&vlParcela,0x0,sizeof(vlParcela )) ; 
	  memset(&vlPrecoreal,0x0,sizeof(vlPrecoreal )) ; 
  	  memset(&nmPessoaUsuaria,0x0,sizeof(nmPessoaUsuaria )) ; 
	  memset(&nmLoginusuario,0x0,sizeof(nmLoginusuario )) ; 
	  memset(&dsObsAnalise,0x0,sizeof(dsObsAnalise )) ; 
      memset(&dsRetornoConsulta,0x0,sizeof(dsRetornoConsulta )) ; 
      memset(&inExcecao,0x0,sizeof(inExcecao )) ; 
      memset(&inStatusAvaliacao,0x0,sizeof(inStatusAvaliacao )) ; 
	  memset(&dsMotivoErro,0x0,sizeof(dsMotivoErro )) ; 
      memset(&dtRequisicao,0x0,sizeof(dtRequisicao )) ; 
      memset(&dtResposta,0x0,sizeof(dtResposta )) ; 
	  memset(&idRespostaIntencao,0x0,sizeof(idRespostaIntencao )) ; 
      memset(&idRespostaDestino,0x0,sizeof(idRespostaDestino )) ; 
      memset(&cdSapAparelho,0x0,sizeof(cdSapAparelho )) ; 
      memset(&idTipoPagamentoAparelho,0x0,sizeof(idTipoPagamentoAparelho )) ; 

      memset( &idAparelhoCor,0x0,sizeof(idAparelhoCor));
      memset( &idAparelho,0x0,sizeof(idAparelho));
      memset( &idTipoPessoa,0x0,sizeof(idTipoPessoa));
      memset( &idSegmentacao,0x0,sizeof(idSegmentacao));
      memset( &idUFOperadora,0x0,sizeof(idUFOperadora));

	        memset( &idSegmentacaoLinha,0x0,sizeof(idSegmentacaoLinha));
    
    //  Obtendo dados do xml
      	    // Dados de entrada do Endereco
  	get_tag(parm,dnode,"idRetencao",0,-1);
  	idRetencao=strtoul( parm,0,10 );
 
	

	//EXEC SQL WHENEVER NOT FOUND DO break;
    ULOG("executando Select ");
    
    ULOG("[ SELECT "
	        "  RETENCAOCONSOLIDADA.NMPESSOA "
			" ,RETENCAOANALISE.NRDOCUMENTO "
			" ,RETENCAOCONSOLIDADA.DSRESPOSTAINTENCAO"
			" ,RETENCAOCONSOLIDADA.DSRESPOSTADESTINO "
			" ,RETENCAOAPARELHO.DSMODELO"
			" ,RETENCAOAPARELHO.NMCOR"
			" ,RETENCAOAPARELHO.VLPRECOABS"
            " ,TIPOPAGAMENTOAPARELHO.DSTIPOPAGAMENTOAPARELHO"
			" ,RETENCAOAPARELHO.VLPERCENTUALDESCONTO"
			" ,RETENCAOAPARELHO.NRPARCELAS"
			" ,RETENCAOAPARELHO.VLPARCELA"
			" ,RETENCAOAPARELHO.VLPRECOREAL"
		  	" ,PESSOA.NMPESSOA "
			" ,RETENCAOCONSOLIDADA.NMLOGINUSUARIO "
			" ,RETENCAOANALISE.DSOBSANALISE"
			" ,RELANALISECREDITO.DSRETORNOCONSULTA"
            " ,RETENCAOCONSOLIDADA.INEXCECAO"
            " ,RELANALISECREDITO.INAPROVADOLEGADO"
            " ,RELANALISECREDITO.DTCONSULTA"
            " ,RELANALISECREDITO.DTRETORNO"
            " ,RELANALISECREDITO.DSMOTIVOERRO"
            " ,PESSOA.IDPESSOA"
			" ,RET.IDRESPOSTAINTENCAO"
			" ,RET.IDRESPOSTADESTINO"
			" ,RETENCAOAPARELHO.CDSAPAPARELHO "  
        "  FROM  RETENCAO.RETENCAO RET"            
        "       ,RETENCAO.RETENCAOAPARELHO RETENCAOAPARELHO"
     	"	    ,RETENCAO.RETENCAOCONSOLIDADA RETENCAOCONSOLIDADA"
        "       ,RETENCAO.RETENCAOANALISE RETENCAOANALISE"
        "       ,RETENCAO.RELANALISECREDITO RELANALISECREDITO"
        "       ,RETENCAO.TIPOPAGAMENTOAPARELHO TIPOPAGAMENTOAPARELHO"
        "       ,CUSTOMER.PESSOADEPARA PESSOADEPARA"
        "       ,CUSTOMER.PESSOA"
        "       ,RETENCAOCONSOLIDADA.NRLINHA"
        "  WHERE"
        "       RET.IDRETENCAO = RETENCAOANALISE.IDRETENCAO " 
        "   AND RETENCAOANALISE.IDRETENCAO = RETENCAOCONSOLIDADA.IDRETENCAO"
        "   AND RETENCAOANALISE.IDRETENCAO = RETENCAOAPARELHO.IDRETENCAO"
        "   AND RETENCAOANALISE.IDRETENCAO = RELANALISECREDITO.IDRETENCAO"
        "   AND TIPOPAGAMENTOAPARELHO.IDTIPOPAGAMENTOAPARELHO = RETENCAOAPARELHO.IDTIPOPAGAMENTOAPARELHO"
        "   AND PESSOADEPARA.IDPESSOADEPARA = RET.IDPESSOADEPARA "
        "   AND PESSOADEPARA.IDPESSOA = PESSOA.IDPESSOA"
        "   AND RETENCAOANALISE.IDRETENCAO = %lu ]"

     ,idRetencao);
	  

	//  09-2008 - Marcelo
    //  Com a extincao da tabela Retencao.MatrizAparelho
    //  A unidade de oferta para Aparelhos, passou a ser idAparelho.
    
    // EXEC SQL 
          // SELECT 
	          // PESSOA.NMPESSOA
			 // ,RETENCAOANALISE.NRDOCUMENTO
			 // ,RETENCAOCONSOLIDADA.DSRESPOSTAINTENCAO
			 // ,RETENCAOCONSOLIDADA.DSRESPOSTADESTINO 
			 // ,RETENCAOAPARELHO.DSMODELO
			 // ,RETENCAOAPARELHO.NMCOR
			 // ,RETENCAOAPARELHO.VLPRECOABS
             // ,TIPOPAGAMENTOAPARELHO.DSTIPOPAGAMENTOAPARELHO
			 // ,RETENCAOAPARELHO.VLPERCENTUALDESCONTO
			 // ,RETENCAOAPARELHO.NRPARCELAS
			 // ,RETENCAOAPARELHO.VLPARCELA
			 // ,RETENCAOAPARELHO.VLPRECOREAL
		  	 // ,PESSOA.NMPESSOA 
			 // ,RETENCAOCONSOLIDADA.NMLOGINUSUARIO 
			 // ,RETENCAOANALISE.DSOBSANALISE
			 // ,RELANALISECREDITO.DSRETORNOCONSULTA
             // ,RETENCAOCONSOLIDADA.INEXCECAO
             // ,RELANALISECREDITO.INAPROVADOLEGADO
             // ,RELANALISECREDITO.DTCONSULTA
             // ,RELANALISECREDITO.DTRETORNO
             // ,RELANALISECREDITO.DSMOTIVOERRO
             // ,PESSOA.IDPESSOA
			 // ,RET.IDRESPOSTAINTENCAO
			 // ,RET.IDRESPOSTADESTINO
			 // ,RETENCAOCONSOLIDADA.NRLINHA
			 // ,RETENCAOAPARELHO.CDSAPAPARELHO
			 // ,RETENCAOCONSOLIDADA.SGTIPOOFERTA
			 // ,TIPOPAGAMENTOAPARELHO.IDTIPOPAGAMENTOAPARELHO
			 // ,RETAPARELHOCOR.IDAPARELHOCOR
             // ,RETENCAOAPARELHO.IDMATRIZAPARELHO
			// INTO
              // :nmPessoa:i_nmPessoa
             // ,:nrDocumento:i_nrDocumento
	         // ,:dsRespostaintencao:i_dsRespostaintencao
	         // ,:dsRespostadestino:i_dsRespostadestino 
	         // ,:dsModelo:i_dsModelo
	         // ,:nmCor:i_nmCor
	         // ,:vlPrecoabs:i_vlPrecoabs
	         // ,:dsTipopagamentoaparelho:i_dsTipopagamentoaparelho
	         // ,:vlPercentualdesconto:i_vlPercentualdesconto
	         // ,:nrParcelas:i_nrParcelas
	         // ,:vlParcela:i_vlParcela 
	         // ,:vlPrecoreal:i_vlPrecoreal
  	         // ,:nmPessoaUsuaria:i_nmPessoaUsuaria
	         // ,:nmLoginusuario:i_nmLoginusuario
	         // ,:dsObsAnalise:i_dsObsAnalise 
			 // ,:dsRetornoConsulta:i_dsRetornoConsulta
             // ,:inExcecao:i_inExcecao
             // ,:inStatusAvaliacao:i_inStatusAvaliacao           
             // ,:dtRequisicao:i_dtRequisicao
             // ,:dtResposta:i_dtResposta
             // ,:dsMotivoErro:i_dsMotivoErro
             // ,:idPessoa:i_idPessoa
			 // ,:idRespostaIntencao:i_idRespostaIntencao
			 // ,:idRespostaDestino:i_idRespostaDestino
			 // ,:nrLinha:i_nrLinha
			 // ,:cdSapAparelho:i_cdSapAparelho
			 // ,:sgTipoOferta:i_sgTipoOferta
			 // ,:idTipoPagamentoAparelho:i_idTipoPagamentoAparelho
			 // ,:idAparelhoCor:i_idAparelhoCor
             // ,:idMatrizAparelho:i_idMatrizAparelho
          // FROM 	  
               // RETENCAO.RETENCAO RET,
               // RETENCAO.RETENCAOAPARELHO RETENCAOAPARELHO,
     		   // RETENCAO.RETENCAOCONSOLIDADA RETENCAOCONSOLIDADA,
               // RETENCAO.RETENCAOANALISE RETENCAOANALISE,
               // RETENCAO.RELANALISECREDITO RELANALISECREDITO,
               // RETENCAO.TIPOPAGAMENTOAPARELHO TIPOPAGAMENTOAPARELHO,
               // CUSTOMER.PESSOADEPARA PESSOADEPARA,
               // CUSTOMER.PESSOA,
			   // RETENCAO.APARELHO RETAPARELHO,
			   // RETENCAO.APARELHOCOR RETAPARELHOCOR,
			   // RETENCAO.MATRIZAPARELHO MTAP
          // WHERE
               // RET.IDRETENCAO = RETENCAOANALISE.IDRETENCAO
           // AND RETENCAOANALISE.IDRETENCAO = RETENCAOCONSOLIDADA.IDRETENCAO
           // AND RETENCAOANALISE.IDRETENCAO = RETENCAOAPARELHO.IDRETENCAO
           // AND RETENCAOANALISE.IDRETENCAO = RELANALISECREDITO.IDRETENCAO
           // AND TIPOPAGAMENTOAPARELHO.IDTIPOPAGAMENTOAPARELHO = RETENCAOAPARELHO.IDTIPOPAGAMENTOAPARELHO
           // AND PESSOADEPARA.IDPESSOADEPARA = RET.IDPESSOADEPARA  
           // AND PESSOADEPARA.IDPESSOA = PESSOA.IDPESSOA
           // AND RETENCAOAPARELHO.IDMATRIZAPARELHO=MTAP.IDMATRIZAPARELHO
		   // AND MTAP.IDAPARELHO=RETAPARELHO.IDAPARELHO
		   // AND RETAPARELHO.IDAPARELHO=RETAPARELHOCOR.IDAPARELHO
		   // AND RETAPARELHOCOR.IDCOR =(SELECT idcor FROM apoio.cor WHERE nmcor=RETENCAOAPARELHO.nmcor)
           // AND RETENCAOANALISE.IDRETENCAO =:idRetencao;

	EXEC SQL 
          SELECT 
	          PESSOA.NMPESSOA
			 ,RETENCAOANALISE.NRDOCUMENTO
			 ,RETENCAOCONSOLIDADA.DSRESPOSTAINTENCAO
			 ,RETENCAOCONSOLIDADA.DSRESPOSTADESTINO 
			 ,RETENCAOAPARELHO.DSMODELO
			 ,RETENCAOAPARELHO.NMCOR
			 ,RETENCAOAPARELHO.VLPRECOABS
             ,TIPOPAGAMENTOAPARELHO.DSTIPOPAGAMENTOAPARELHO
			 ,RETENCAOAPARELHO.VLPERCENTUALDESCONTO
			 ,RETENCAOAPARELHO.NRPARCELAS
			 ,RETENCAOAPARELHO.VLPARCELA
			 ,RETENCAOAPARELHO.VLPRECOREAL
		  	 ,PESSOA.NMPESSOA 
			 ,RETENCAOCONSOLIDADA.NMLOGINUSUARIO 
			 ,RETENCAOANALISE.DSOBSANALISE
			 ,RELANALISECREDITO.DSRETORNOCONSULTA
             ,RETENCAOCONSOLIDADA.INEXCECAO
             ,RELANALISECREDITO.INAPROVADOLEGADO
             ,RELANALISECREDITO.DTCONSULTA
             ,RELANALISECREDITO.DTRETORNO
             ,RELANALISECREDITO.DSMOTIVOERRO
             ,PESSOA.IDPESSOA
			 ,RET.IDRESPOSTAINTENCAO
			 ,RET.IDRESPOSTADESTINO
			 ,RETENCAOCONSOLIDADA.NRLINHA
			 ,RETENCAOAPARELHO.CDSAPAPARELHO
			 ,RETENCAOCONSOLIDADA.SGTIPOOFERTA
			 ,TIPOPAGAMENTOAPARELHO.IDTIPOPAGAMENTOAPARELHO
			 ,RETAPARELHOCOR.IDAPARELHOCOR
             ,RETENCAOAPARELHO.IDAPARELHO
			INTO
              :nmPessoa:i_nmPessoa
             ,:nrDocumento:i_nrDocumento
	         ,:dsRespostaintencao:i_dsRespostaintencao
	         ,:dsRespostadestino:i_dsRespostadestino 
	         ,:dsModelo:i_dsModelo
	         ,:nmCor:i_nmCor
	         ,:vlPrecoabs:i_vlPrecoabs
	         ,:dsTipopagamentoaparelho:i_dsTipopagamentoaparelho
	         ,:vlPercentualdesconto:i_vlPercentualdesconto
	         ,:nrParcelas:i_nrParcelas
	         ,:vlParcela:i_vlParcela 
	         ,:vlPrecoreal:i_vlPrecoreal
  	         ,:nmPessoaUsuaria:i_nmPessoaUsuaria
	         ,:nmLoginusuario:i_nmLoginusuario
	         ,:dsObsAnalise:i_dsObsAnalise 
			 ,:dsRetornoConsulta:i_dsRetornoConsulta
             ,:inExcecao:i_inExcecao
             ,:inStatusAvaliacao:i_inStatusAvaliacao           
             ,:dtRequisicao:i_dtRequisicao
             ,:dtResposta:i_dtResposta
             ,:dsMotivoErro:i_dsMotivoErro
             ,:idPessoa:i_idPessoa
			 ,:idRespostaIntencao:i_idRespostaIntencao
			 ,:idRespostaDestino:i_idRespostaDestino
			 ,:nrLinha:i_nrLinha
			 ,:cdSapAparelho:i_cdSapAparelho
			 ,:sgTipoOferta:i_sgTipoOferta
			 ,:idTipoPagamentoAparelho:i_idTipoPagamentoAparelho
			 ,:idAparelhoCor:i_idAparelhoCor
             ,:idAparelho:i_idAparelho
          FROM 	  
               RETENCAO.RETENCAO RET,
               RETENCAO.RETENCAOAPARELHO RETENCAOAPARELHO,
     		   RETENCAO.RETENCAOCONSOLIDADA RETENCAOCONSOLIDADA,
               RETENCAO.RETENCAOANALISE RETENCAOANALISE,
               RETENCAO.RELANALISECREDITO RELANALISECREDITO,
               RETENCAO.TIPOPAGAMENTOAPARELHO TIPOPAGAMENTOAPARELHO,
               CUSTOMER.PESSOADEPARA PESSOADEPARA,
               CUSTOMER.PESSOA,
			   RETENCAO.APARELHO RETAPARELHO,
			   RETENCAO.APARELHOCOR RETAPARELHOCOR
          WHERE
               RET.IDRETENCAO = RETENCAOANALISE.IDRETENCAO
           AND RETENCAOANALISE.IDRETENCAO = RETENCAOCONSOLIDADA.IDRETENCAO
           AND RETENCAOANALISE.IDRETENCAO = RETENCAOAPARELHO.IDRETENCAO
           AND RETENCAOANALISE.IDRETENCAO = RELANALISECREDITO.IDRETENCAO
           AND TIPOPAGAMENTOAPARELHO.IDTIPOPAGAMENTOAPARELHO = RETENCAOAPARELHO.IDTIPOPAGAMENTOAPARELHO
           AND PESSOADEPARA.IDPESSOADEPARA = RET.IDPESSOADEPARA  
           AND PESSOADEPARA.IDPESSOA = PESSOA.IDPESSOA
           AND RETENCAOAPARELHO.IDAPARELHO = RETAPARELHO.IDAPARELHO
		   AND RETAPARELHO.IDAPARELHO=RETAPARELHOCOR.IDAPARELHO
		   AND RETAPARELHOCOR.IDCOR =(SELECT idcor FROM apoio.cor WHERE nmcor=RETENCAOAPARELHO.nmcor)
           AND RETENCAOANALISE.IDRETENCAO =:idRetencao;

      endOraStr(nmPessoa);
	  endOraStr(nrDocumento);
	  endOraStr(dsRespostaintencao);
	  endOraStr(dsRespostadestino); 
	  endOraStr(dsModelo);
	  endOraStr(nmCor);
	  endOraStr(vlPrecoabs);
	  endOraStr(dsTipopagamentoaparelho);
	  endOraStr(vlPercentualdesconto);
	  endOraStr(nrParcelas);
	  endOraStr(vlParcela );
	  endOraStr(vlPrecoreal);
  	  endOraStr(nmPessoaUsuaria);
	  endOraStr(nmLoginusuario); 
	  endOraStr(dsObsAnalise);
	  endOraStr(dsRetornoConsulta);
      endOraStr(dtRequisicao);
      endOraStr(dtResposta);
      endOraStr(dsMotivoErro);
      endOraStr(inExcecao);
      endOraStr(inStatusAvaliacao);
      endOraStr(idPessoa);
	  endOraStr(idRespostaIntencao);
      endOraStr(idRespostaDestino);
	  endOraStr(nrLinha);
	  endOraStr(cdSapAparelho);
	  endOraStr(sgTipoOferta);
	  endOraStr(idTipoPagamentoAparelho);
	  endOraStr(idAparelho);
	  endOraStr(idAparelhoCor);
      


      /*
       * SM 250
       * @Marcelo Jan/2007
       */
      SetXMLFinalizaRetencao( idRetencao,(char*)idAparelhoCor.arr,xml ); 

      xml->addItem("nmPessoa",(char*)nmPessoa.arr);                 
	  xml->addItem("nrDocumento",(char*)nrDocumento.arr);              
	  xml->addItem("dsRespostaIntencao",(char*)dsRespostaintencao.arr);       
	  xml->addItem("dsRespostaDestino",(char*)dsRespostadestino.arr);        
	  xml->addItem("dsModelo",(char*) dsModelo.arr);                 
	  xml->addItem("nmCor",(char*)nmCor.arr);                    
	  xml->addItem("vlPrecoAbs",(char*)vlPrecoabs.arr);                
	  xml->addItem("dsTipoPagamentoAparelho",(char*)dsTipopagamentoaparelho.arr);  
	  xml->addItem("vlPercentualDesconto",(char*)vlPercentualdesconto.arr);     
	  xml->addItem("nrParcelas",(char*)nrParcelas.arr);               
	  xml->addItem("vlParcela",(char*)vlParcela.arr);               
	  xml->addItem("vlPrecoReal",(char*)vlPrecoreal.arr);              
  	  xml->addItem("nmPessoaUsuaria",(char*)nmPessoaUsuaria.arr);                 
	  xml->addItem("nmLoginUsuario",(char*)nmLoginusuario.arr);           
	  xml->addItem("dsObsAnalista",(char*)dsObsAnalise.arr);
      xml->addItem("dsRetornoConsulta",(char*)dsRetornoConsulta.arr);
      xml->addItem("inOfertaExcecao",(char*)inExcecao.arr);
	  xml->addItem("idRespostaIntencao",(char*)idRespostaIntencao.arr);
	  xml->addItem("idRespostaDestino",(char*)idRespostaDestino.arr);
	  xml->addItem("nrLinha",(char*)nrLinha.arr);
	  xml->addItem("dsMaterial",(char*)cdSapAparelho.arr);
	  xml->addItem("sgOferta",(char*)sgTipoOferta.arr);
	  xml->addItem("idTipoPagamentoAparelho",(char*)idTipoPagamentoAparelho.arr);

	  EXEC SQL
		SELECT IDSEGMENTACAO
			INTO :idSegmentacaoLinha
			FROM RETENCAO.RETENCAOCONSOLIDADA
		WHERE IDRETENCAO=:idRetencao;

  	  xml->addItem("idSegmentacaoLinha",(char*)idSegmentacaoLinha.arr);
	  
		  
      xml->addItem("idAparelho",(char*)idAparelho.arr);       

	
  }
  catch(...)
  {
	throw;
  }
  ULOG_END("get_analise()");
  return 1;
}




void SetXMLFinalizaRetencao( int idRetencaoPrm, char *idAparelhoCor, XMLGen *xml )
{
    ULOG_START( "SetXMLFinalizaRetencao()" );

    EXEC SQL BEGIN DECLARE SECTION;

        int     idRetencao = idRetencaoPrm;
        int     idPessoaDePara = -1;
        int     idLinhaTelefonica = -1;
        int     idTipoEncerramento = -1;
        int     idMatrizOferta = -1;
        int     idUnidadeOfertaAceita = -1;
        int     idUnidadeOferta = -1;

        VARCHAR nrLinha[16];
        VARCHAR sgOfertaAceita[16];
        char Linha[28];

        short i_idPessoaDePara = -1;
        short i_nrLinha = -1;
        short i_idLinhaTelefonica = -1;
        short i_idTipoEncerramento = -1;
        short i_idMatrizOferta = -1;
        short i_idUnidadeOferta = -1;
        short i_sgOfertaAceita = -1;
        short i_idUnidadeOfertaAceita = -1;

    EXEC SQL END DECLARE SECTION;

    memset( &nrLinha,0x0,sizeof(nrLinha) );
    memset( Linha   ,0x0,sizeof(Linha) );
    memset( &sgOfertaAceita,0x0,sizeof(sgOfertaAceita) );

    EXEC SQL WHENEVER SQLERROR DO sql_error( NULL );

    EXEC SQL
        SELECT
            IDPESSOADEPARA,
            NRLINHA,
            IDTIPOENCERRAMENTO
        INTO
            :idPessoaDePara:i_idPessoaDePara,
            :nrLinha:i_nrLinha,
            :idTipoEncerramento:i_idTipoEncerramento
        FROM
            RETENCAO.RETENCAOCONSOLIDADA
        WHERE
            IDRETENCAO = :idRetencao;

    if ( i_nrLinha != -1 )
    {
        endOraStr( nrLinha );
        sprintf( Linha,"%s",(char *)&nrLinha.arr[2] );
    }

    EXEC SQL
        SELECT
            IDLINHATELEFONICA
        INTO
            :idLinhaTelefonica:i_idLinhaTelefonica
        FROM
            CUSTOMER.PESSOALINHAHISTORICO
        WHERE
            IDPESSOADEPARA = :idPessoaDePara
        AND
            NRLINHA = :Linha
        AND ROWNUM < 2;


    EXEC SQL   // OS 686 - MatrizOferta foi removida
        SELECT
            IDOFERTA
        INTO
            :idUnidadeOferta:i_idUnidadeOferta
        FROM
            RETENCAO.OFERTAREALIZADA
        WHERE
            IDRETENCAO = :idRetencao
        AND
            INOFERTAACEITA = 1;


    /* OS 686 - MatrizOferta foi removida
    EXEC SQL
        SELECT
            IDOFERTA
        INTO
            :idUnidadeOferta:i_idUnidadeOferta
        FROM
            RETENCAO.MATRIZOFERTA
        WHERE
            IDMATRIZOFERTA = :idMatrizOferta;
    */

    EXEC SQL
        SELECT
            IDUNIDADEOFERTA,
            SGCLASSIFICACAO
        INTO
            :idUnidadeOfertaAceita:i_idUnidadeOfertaAceita,
            :sgOfertaAceita:i_sgOfertaAceita
        FROM
            RETENCAO.OFERTA
        WHERE
            IDUNIDADEOFERTA = :idUnidadeOferta;
    
    if ( i_sgOfertaAceita != -1 )
    {
        endOraStr( sgOfertaAceita );
    }

    

    xml->createTag("FinalizaRetencaoVO");
        xml->createTag("Cliente");
            xml->addItem("idPessoaDePara",idPessoaDePara );
            xml->addItem("idLinhaTelefonica",idLinhaTelefonica );
        xml->closeTag();
        xml->createTag("Retencao");
            xml->createTag("RetencaoHeader");
                xml->addItem("idTipoEncerramento",idTipoEncerramento );
                xml->addItem("idRetencaoOld",idRetencao );
            xml->closeTag();
            xml->createTag("RetencaoBody");
                xml->createTag("Status");
                    // xml->addItem("idOfertaAceita",idMatrizOferta );
                    xml->addItem("idOfertaAceita",idUnidadeOferta );
                    xml->addItem("sgOfertaAceita",(char *)sgOfertaAceita.arr );
                    SelOfertasRealizadas( idRetencao, xml );
                xml->closeTag();
                if ( idUnidadeOfertaAceita > 0 )
                {
                    GetOferta( idRetencao, idAparelhoCor, xml );
                }
            xml->closeTag();
        xml->closeTag();
    xml->closeTag();


    ULOG_END( "SetXMLFinalizaRetencao()" );
}



void SelOfertasRealizadas( int idRetencaoPrm, XMLGen *xml )
{
    ULOG_START( "SelOfertasRealizadas()" );


    EXEC SQL BEGIN DECLARE SECTION;

        int     idRetencao = idRetencaoPrm;
        int     idUnidadeOferta = -1;
        int     idOferta = -1;

        short i_idUnidadeOferta = -1;

    EXEC SQL END DECLARE SECTION;

    EXEC SQL WHENEVER SQLERROR DO sql_error( NULL );

    EXEC SQL DECLARE crsOfertasRealiz CURSOR FOR
        SELECT
            IDOFERTA
        FROM
            RETENCAO.OFERTAREALIZADA
        WHERE
            IDRETENCAO = :idRetencao
        AND
            INOFERTAACEITA = 0;

    ULOG( "Consultando idRetencao [%d]",idRetencao );

    EXEC SQL WHENEVER NOT FOUND DO BREAK;
    EXEC SQL OPEN crsOfertasRealiz;

    xml->createTag("ofertasRealizadas");
    for(;;) 
    {

        EXEC SQL FETCH crsOfertasRealiz INTO :idOferta;

        EXEC SQL WHENEVER NOT FOUND CONTINUE;

        ULOG( "Retornando idOferta [%d]",idOferta );

        xml->addItem("idOfertaRealizada",idOferta );
    
    }
    xml->closeTag();
    EXEC SQL CLOSE crsOfertasRealiz;
    
    ULOG_END( "SelOfertasRealizadas()" );
}



void GetOferta( int idRetencaoPrm,char *idAparelhoCor, XMLGen *xml )
{
    ULOG_START( "GetOferta()" );


    EXEC SQL BEGIN DECLARE SECTION;

        int      idRetencao = idRetencaoPrm;
        VARCHAR  dsModelo[255];
        VARCHAR  vlPrecoreal[25];
        VARCHAR  vlPrecoabs[255];
        VARCHAR  nmCor[255];
        int      inTipoEntrega = -1;
        int      idTipoPagamentoAparelho = -1;
	    int      nrParcelas = -1;
        VARCHAR  vlPercentualdesconto[25];
        VARCHAR  vlParcela [25];
        int      idAparelho = -1;
        VARCHAR  cdSapAparelho[61];
        
        short i_dsModelo = -1;
        short i_vlPrecoreal = -1;
        short i_vlPrecoabs = -1;
        short i_nmCor = -1;
        short i_vlPercentualdesconto = -1;
        short i_vlParcela = -1;
        short i_cdSapAparelho = -1;

    EXEC SQL END DECLARE SECTION;

    memset( &dsModelo,0x0,sizeof(dsModelo) );
    memset( &vlPrecoreal,0x0,sizeof(vlPrecoreal) );
    memset( &vlPrecoabs,0x0,sizeof(vlPrecoabs) );
    memset( &nmCor,0x0,sizeof(nmCor) );
    memset( &vlPercentualdesconto,0x0,sizeof(vlPercentualdesconto) );
    memset( &vlParcela,0x0,sizeof(vlParcela) );
    memset( &cdSapAparelho,0x0,sizeof(cdSapAparelho) );
    
    EXEC SQL WHENEVER SQLERROR DO sql_error( NULL );

    EXEC SQL
        SELECT
            DSMODELO,
            VLPRECOREAL,
            VLPRECOABS,
            NMCOR,
            INTIPOENTREGA,
            IDTIPOPAGAMENTOAPARELHO,
            NRPARCELAS,
            VLPERCENTUALDESCONTO,
            VLPARCELA,
            IDAPARELHO,
            CDSAPAPARELHO
        INTO
            :dsModelo:i_dsModelo,
            :vlPrecoreal:i_vlPrecoreal,
            :vlPrecoabs:i_vlPrecoabs,
            :nmCor:i_nmCor,
            :inTipoEntrega,
            :idTipoPagamentoAparelho,
            :nrParcelas,
            :vlPercentualdesconto:i_vlPercentualdesconto,
            :vlParcela:i_vlParcela,
            :idAparelho,
            :cdSapAparelho:i_cdSapAparelho
        FROM
            RETENCAO.RETENCAOAPARELHO
        WHERE
            IDRETENCAO = :idRetencao;

    endOraStr( dsModelo );
    endOraStr( vlPrecoreal );
    endOraStr( vlPrecoabs );
    endOraStr( nmCor );
    endOraStr( vlPercentualdesconto );
    endOraStr( vlParcela );
    endOraStr( cdSapAparelho );

    ULOG( "Retornando para idRetencao [%d] ",idRetencao );


    xml->createTag("Ofertas");
        xml->createTag("Aparelhos");
            xml->addItem( "nmModeloAparelho",(char *)dsModelo.arr );
            xml->addItem( "vlPrecoReal",(char *)vlPrecoreal.arr  );
            xml->addItem( "vlPrecoAbs",(char *)vlPrecoabs.arr );
            xml->addItem( "nmCor",(char *)nmCor.arr );
            xml->addItem( "inTipoEntrega",inTipoEntrega );
            xml->addItem( "idTipoPagamentoAparelho",idTipoPagamentoAparelho );
            xml->addItem( "nrParcelas",nrParcelas );
            xml->addItem( "vlPercentualDesconto",(char *)vlPercentualdesconto.arr );
            xml->addItem( "vlParcela",(char *)vlParcela.arr );
            xml->addItem( "idMatrizAparelho",idAparelho );   // Verificar no JAVA a tag idMatrizAparelho
            xml->addItem( "idAparelhoCor",idAparelhoCor );
            xml->addItem( "cdSapAparelho",(char *)cdSapAparelho.arr );
        xml->closeTag();
    xml->closeTag();

    GetAnalise( idRetencao,xml );

    ULOG_END( "GetOferta()" );
}



void GetAnalise( int idRetencaoPrm,XMLGen *xml )
{
    ULOG_START( "GetAnalise()" );


    EXEC SQL BEGIN DECLARE SECTION;

        int      idRetencao = idRetencaoPrm;
        int      inStatusComunicacao = -1;
        int      inAprovadoLegado = -1;
        VARCHAR  dsRetornoCons[256];
        VARCHAR  DataInterrup[25];
        VARCHAR  dsMotivoErro[256];

        VARCHAR  nrDocumento[21];
        int      idTipoAnalise = -1;
        
        short i_inStatusComunicacao = -1;
        short i_inAprovadoLegado = -1;
        short i_dsRetornoCons = -1;
        short i_DataInterrup = -1;
        short i_dsMotivoErro = -1;

        short i_nrDocumento = -1;
        short i_idTipoAnalise = -1;

    EXEC SQL END DECLARE SECTION;

    memset( &dsRetornoCons,0x0,sizeof(dsRetornoCons) );
    memset( &DataInterrup,0x0,sizeof(DataInterrup) );
    memset( &dsMotivoErro,0x0,sizeof(dsMotivoErro) );
    
    EXEC SQL WHENEVER SQLERROR DO sql_error( NULL );

    EXEC SQL
        SELECT
            INSTATUSCOMUNICACAO,
            INAPROVADOLEGADO,
            DSRETORNOCONSULTA,
            TO_CHAR( DTINTERRUPCAO,'DD/MM/YYYY HH24:MI:SS' ),
            DSMOTIVOERRO
        INTO
            :inStatusComunicacao:i_inStatusComunicacao,
            :inAprovadoLegado:i_inAprovadoLegado,
            :dsRetornoCons:i_dsRetornoCons,
            :DataInterrup:i_DataInterrup,
            :dsMotivoErro:i_dsMotivoErro
        FROM
            RETENCAO.RELANALISECREDITO
        WHERE
            IDRETENCAO = :idRetencao;

    endOraStr( dsRetornoCons );
    endOraStr( DataInterrup );
    endOraStr( dsMotivoErro );

    EXEC SQL
        SELECT
            NRDOCUMENTO,
            IDTIPOANALISE
        INTO
            :nrDocumento:i_nrDocumento,
            :idTipoAnalise:i_idTipoAnalise
        FROM
            RETENCAO.RETENCAOANALISE
        WHERE
            IDRETENCAO = :idRetencao;

    endOraStr( nrDocumento );

    ULOG( "Retornando para idRetencao [%d] ",idRetencao );

    xml->createTag( "Analise" );
        xml->addItem("idTipoAnalise",idTipoAnalise);
        xml->createTag( "Adimplencia" );
            xml->addItem( "inStatusComunicacao",inStatusComunicacao );
            xml->addItem( "inAprovadoLegado",inAprovadoLegado );
            xml->addItem( "dsRetornoConsulta",(char *)dsRetornoCons.arr );
            xml->addItem( "nrDocumento",(char *)nrDocumento.arr );
            xml->addItem( "dtInterrupcao",(char *)DataInterrup.arr );
            xml->addItem( "dsMotivoErro",(char *)dsMotivoErro.arr );
        xml->closeTag();
    xml->closeTag();
    
    ULOG_END( "GetAnalise()" );

}

