//
// $Id: sel_dstprevisto.pcpp,v 1.1 2009/07/31 15:34:19 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"

int sel_dstprevisto(int usuario, DOMNode*dnode, XMLGen*xml)
{
    ULOG_START( "sel_dstprevisto()" );
    char parm[255];
    int	iTipoPessoa=0;
    char bf[4096];

    EXEC SQL BEGIN DECLARE SECTION;
        int     idUfOperadora;
        int     idUF;
        int     idResposta1;
        int     idResposta2;
        int     idTipoPessoa;
        int     idSegmentacao;
        int     idGrupo;
        int     idUsuario=usuario;
        int     idTipoLinha = 0;
        VARCHAR sgTipoPessoa[10];
        VARCHAR dsResposta[2000];
    EXEC SQL END DECLARE SECTION;
    
    parm[0] = 0x0;
    memset( &dsResposta, 0x0, sizeof(dsResposta) );
    memset( &sgTipoPessoa, 0x0, sizeof(sgTipoPessoa) );

    EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

    try
    {
        // Obentendo dados do xml
        get_tag(parm,dnode,"idUfOperadora",0,0);
        idUfOperadora = atoi(parm);

        parm[0] = 0x0;
        get_tag(parm,dnode,"idIntencao",0,0);
        idResposta1 = atoi(parm);
 
        parm[0] = 0x0;
        get_tag(parm,dnode,"idSegmentacao",0,0);
        idSegmentacao = atoi(parm);

        parm[0] = 0x0;
        get_tag(parm,dnode,"idGrupo",0,-1);
        idGrupo = atoi(parm);

        parm[0] = 0x0;
        get_tag(parm,dnode,"idTipoLinha",0,-1);
        idTipoLinha = atoi(parm);

        parm[0] = 0x0;
        iTipoPessoa=get_tag(parm,dnode,"idTipoPessoa",0,-1);
        
        if( iTipoPessoa == -1 )  //Não veio a Tag idTipoPessoa
        {
            parm[0] = 0x0;
            get_tag(parm,dnode,"sgTipoPessoa",0,0);
            if ( parm[0] == '1' )
               strcpy(parm,"PF");
            if ( parm[0] == '2' )
               strcpy(parm,"PJ");
            if ( parm[0] == '0' )
               strcpy(parm,"NC");
            strToOra(sgTipoPessoa,parm);

            //Capturando idTipoPesoa
            EXEC SQL
            SELECT IDTIPOPESSOA,DSTIPOPESSOA
            INTO :idTipoPessoa			 
            FROM APOIO.TIPOPESSOA
            WHERE SGTIPOPESSOA=:sgTipoPessoa;
        }
        else
        {
            idTipoPessoa = atoi(parm);
        }


        EXEC SQL WHENEVER NOT FOUND DO break;

        sprintf( bf,
        "SELECT DISTINCT "
		"		ru.idrespostaunidade, "
		"		r.idresposta idresposta, "
		"		r.dsresposta dsresposta "
		"	  FROM questionario.resposta r, "
		"		   retencao.oferta o, "
		"		   retencao.ofertarespostaunidade oru, "
		"		   retencao.respostaunidade ru, "
		"		   retencao.gruporespostaunidade gru, "
		"		   retencao.SEGMENTACAORESPOSTAUNIDADE sru "
		"	 WHERE o.idunidadeoferta = oru.idoferta "
		"	   AND oru.idrespostaunidade = ru.idrespostaunidade "
		"	   AND ru.idrespostaunidade = sru.idrespostaunidade "
		"	   AND ru.idrespostaunidade = gru.idrespostaunidade "
		"	   AND r.idresposta = ru.idresposta2 "
		"	   AND o.inativo = 1 "
		"	   AND ru.inativo = 1 "
		"	   AND oru.inativo = 1 "
		"	   AND ru.idresposta1 = %d "
		"	   AND ru.idtipolinha = %d "
		"	   AND ru.idufoperadora = %d "
		"	   AND ru.idtipopessoa = %d "
		"	   AND sru.idsegmentacao = %d "
		"	   AND gru.idgrupo = %d "
		"	   AND o.sgclassificacao NOT IN (SELECT sgclassificacao "
		"									   FROM retencao.bloqueioaparelhocontrolev01 "
		"									  WHERE idtipolinha = %d) "
		"	   AND r.indisponibilidade = 1 "
		"	   AND r.idpergunta = 2 "
        "      ORDER BY dsresposta ", idResposta1, idTipoLinha, idUfOperadora, idTipoPessoa, idSegmentacao, idGrupo, idTipoLinha );
        
        ULOG( "Query:" );
        ULOG( bf );
        
        EXEC SQL DECLARE crsDst CURSOR FOR
        SELECT DISTINCT 
             r.idresposta idresposta, 
             r.dsresposta dsresposta
          FROM questionario.resposta r,
               retencao.oferta o,
               retencao.script script,       
               retencao.scriptoferta scroferta,
               retencao.scripttipolinha scrtipolinha,
               retencao.scriptufoperadora scrufoperadora,
               retencao.scripttipopessoa scrtipopessoa,
               retencao.scriptsegmentacao scrsegmentacao,
               retencao.scriptgrupo scrgrupo ,
               retencao.scriptrespostadestino scrdestino
         WHERE o.idunidadeoferta = scroferta.idoferta
           AND scrtipolinha.idscript = scrgrupo.idscript
           AND scrtipopessoa.idscript = scrgrupo.idscript
           AND scrdestino.idscript = scrgrupo.idscript
           AND script.inativo = 1
           AND script.idscript = scrgrupo.idscript
           AND script.idscript = scrdestino.idscript
           AND r.idresposta = scrdestino.idrespostadestino  
           AND o.inativo = 1
           AND scrtipolinha.idtipolinha = :idTipoLinha
           AND scrufoperadora.idufoperadora = :idUfOperadora
           AND scrtipopessoa.idtipopessoa = :idTipoPessoa
           AND scrsegmentacao.idsegmentacao = :idSegmentacao
           AND scrgrupo.idgrupo = :idGrupo
           AND o.sgclassificacao NOT IN (SELECT sgclassificacao
                                           FROM retencao.bloqueioaparelhocontrolev01
                                          WHERE idtipolinha = :idTipoLinha)
           AND r.indisponibilidade = 1
           AND r.idpergunta = 2
           ORDER BY dsresposta;
           
        EXEC SQL OPEN crsDst;
        for(;;) 
        {
            EXEC SQL FETCH crsDst INTO :idResposta2,:dsResposta;

            endOraStr(dsResposta);
            ULOG_INT(idResposta2);
            ULOG_VAR(dsResposta);
            xml->createTag("tns:itemListaVO");
                xml->addItem("id",idResposta2);
                xml->addItem("descricao",(char *)dsResposta.arr);
            xml->closeTag();
        }
        EXEC SQL CLOSE crsDst;

    }catch(...){throw;}
  
    ULOG_END( "sel_dstprevisto()" );
    return 1;
}




int sel_dstprevistoCfg( int usuario, DOMNode* dnode, XMLGen* xml )
{
    ULOG_START( "sel_dstprevistoCfg()" );

    char    parm[255];
    int     iTipoPessoa=0;

    EXEC SQL BEGIN DECLARE SECTION;
        int     idUfOperadora;
        int     idResposta1;
        int     idResposta2;
        int     idTipoPessoa;
        int     idTipoLinha;
        VARCHAR dsResposta[2000];
    EXEC SQL END DECLARE SECTION;
    
    parm[0] = 0x0;
    memset( &dsResposta, 0x0, sizeof(dsResposta) );
    
    EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

    try
    {
        // Obentendo dados do xml
        get_tag(parm,dnode,"idUfOperadora",0,0);
        idUfOperadora = atoi(parm);

        parm[0] = 0x0;
        get_tag(parm,dnode,"idIntencao",0,0);
        idResposta1 = atoi(parm);
 
        parm[0] = 0x0;
        get_tag(parm,dnode,"idTipoPessoa",0,-1);
        idTipoPessoa = atoi(parm);

        parm[0] = 0x0;
        get_tag(parm,dnode,"idTipoLinha",0,-1);
        idTipoLinha = atoi(parm);

        EXEC SQL WHENEVER NOT FOUND DO break;

        EXEC SQL DECLARE crsDst1 CURSOR FOR
        SELECT DISTINCT 
            IDRESPOSTA2, 
            DSRESPOSTA
        FROM 
            RETENCAO.RESPOSTAUNIDADEV01
        WHERE 
            INATIVO != 0
        AND   
            IDUFOPERADORA = :idUfOperadora
        AND   
            IDRESPOSTA1 = :idResposta1
        AND	  
            IDTIPOPESSOA = :idTipoPessoa
        ORDER BY DSRESPOSTA;
  
        EXEC SQL OPEN crsDst1;
  
        for(;;) 
        {
            EXEC SQL FETCH crsDst1 INTO :idResposta2,:dsResposta;

            endOraStr(dsResposta);
            ULOG_INT(idResposta2);
            ULOG_VAR(dsResposta);
            xml->createTag("tns:itemListaVO");
                xml->addItem("id",idResposta2);
                xml->addItem("descricao",(char *)dsResposta.arr);
            xml->closeTag();
        }
        EXEC SQL CLOSE crsDst1;
    
    }catch(...){throw;}

    ULOG_END( "sel_dstprevistoCfg()" );
    return 1;
}


