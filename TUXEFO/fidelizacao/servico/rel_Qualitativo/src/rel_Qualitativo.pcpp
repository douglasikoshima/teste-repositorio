

#include "../../negocio/fidutil/include/retencao.hpp"
#include <string>

using namespace std;


// Prototipo
void procQualitativo( DOMNode * dnode, XMLGen * xml_g );

/*
 *
 */
void procQualitativo( DOMNode * dnode, XMLGen * xml_g )
{
    char parm[30];
    int idRegional = 0;
    int idSegmento = 0;
    int idGrupo = 0;
    char dtInicialPrm[15];
    char dtFinalPrm[15];
    string dyn_statement;
    char buffer[25];

    EXEC SQL BEGIN DECLARE SECTION;
        
        char * query;
        int TotalReprovados = 0;
        int TotalAprovados = 0;

    EXEC SQL END DECLARE SECTION;

    memset( parm        , 0x0, sizeof(parm) );
    memset( dtInicialPrm, 0x0, sizeof(dtInicialPrm) );
    memset( dtFinalPrm  , 0x0, sizeof(dtFinalPrm) );
    // Carrega Parametros de Filtro, vindos do XML de entrada
    get_tag( parm,dnode,"idRegional",0,-1 );  // -1 Torna o elemento nao obrigatorio
    idRegional = atoi( parm );
    get_tag( parm,dnode,"idSegmentacao",0,-1 );  // -1 Torna o elemento nao obrigatorio
    idSegmento = atoi( parm );
    get_tag( parm,dnode,"idGrupo",0,-1 );  // -1 Torna o elemento nao obrigatorio
    idGrupo = atoi( parm );
    get_tag( parm,dnode,"DataInicial",0,-1 );
    strcpy( dtInicialPrm, parm );
    get_tag( parm,dnode,"DataFinal",0,-1 );
    strcpy( dtFinalPrm, parm );


    EXEC SQL WHENEVER SQLERROR DO sql_error( NULL );

    dyn_statement =
        "SELECT "
            "COUNT(1) "
        "INTO "
            ":nAprovados "
        "FROM "
            "RETENCAO.RETENCAOAPARELHO "
        "WHERE "
            "INESTADOAPROVACAO IN ( 1,2 ) ";   // Aprovados

    if ( idRegional > 0 )
    {
        dyn_statement +=
            "AND "
               "IDREGIONAL = ";
        sprintf( buffer, "%d", idRegional );
        dyn_statement += buffer;

    }

    if ( idSegmento > 0 )
    {
        dyn_statement +=
            " AND "
               "IDSEGMENTACAO = ";
        sprintf( buffer, "%d", idSegmento );
        dyn_statement += buffer;
    }

    if ( idGrupo > 0 )
    {
        dyn_statement +=
            " AND "
               "IDGRUPO = ";
        sprintf( buffer, "%d", idGrupo );
        dyn_statement += buffer;
    }


    if ( strlen(dtInicialPrm) > 0 )
    {
        dyn_statement +=
        " AND "
            "DTINCLUSAO "
        "BETWEEN "
            "TO_DATE(";
        dyn_statement += dtInicialPrm;
        dyn_statement += ",'DD/MM/YYYY')";

        dyn_statement +=
        " AND "
            "TO_DATE(";
        dyn_statement += dtFinalPrm;
        dyn_statement += ",'DD/MM/YYYY')";
    }

    query = (char *)dyn_statement.c_str();
    printf( "Query [%s]\n",query );

    EXEC SQL PREPARE sql_stmt FROM :query;
    EXEC SQL EXECUTE sql_stmt USING :TotalAprovados;
    


    dyn_statement =
        "SELECT "
            "COUNT(1) "
        "INTO "
            "nReprovados "
        "FROM "
            "RETENCAO.RETENCAOAPARELHO "
        "WHERE "
            "INESTADOAPROVACAO = 3 ";         // Reprovados

    if ( idRegional > 0 )
    {
        dyn_statement +=
            "AND "
               "IDREGIONAL = ";
        sprintf( buffer, "%d", idRegional );
        dyn_statement += buffer;

    }

    if ( idSegmento > 0 )
    {
        dyn_statement +=
            " AND "
               "IDSEGMENTACAO = ";
        sprintf( buffer, "%d", idSegmento );
        dyn_statement += buffer;
    }

    if ( idGrupo > 0 )
    {
        dyn_statement +=
            " AND "
               "IDGRUPO = ";
        sprintf( buffer, "%d", idGrupo );
        dyn_statement += buffer;
    }


    if ( strlen(dtInicialPrm) > 0 )
    {
        dyn_statement +=
        " AND "
            "DTINCLUSAO "
        "BETWEEN "
            "TO_DATE(";
        dyn_statement += dtInicialPrm;
        dyn_statement += ",'DD/MM/YYYY')";

        dyn_statement +=
        " AND "
            "TO_DATE(";
        dyn_statement += dtFinalPrm;
        dyn_statement += ",'DD/MM/YYYY')";
    }

    query = (char *)dyn_statement.c_str();
    printf( "Query [%s]\n",query );

    EXEC SQL PREPARE sql_stmt FROM :query;
    EXEC SQL EXECUTE sql_stmt USING :TotalReprovados;


}

