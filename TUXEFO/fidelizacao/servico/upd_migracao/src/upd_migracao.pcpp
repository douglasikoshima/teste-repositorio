//
// $Id: upd_migracao.pcpp,v 1.1 2009/07/31 15:34:42 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"

int upd_migracao(int usuario, DOMNode*dnode, XMLGen*xml)
{
  char parm[255];

  EXEC SQL BEGIN DECLARE SECTION;
  int     idMatrizBonus;
  int     qtDiasValidade;
  VARCHAR nmBonus[255];
  float   vlBonus;
  int	  iExiste=0;
  int	  idUfOperadora;
  int     idPessoaUsuarioAlteracao;
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

  try{
    //  Obtendo dados do xml
    get_tag(parm,dnode,"idMigracao",0,0);
    idMatrizBonus = atoi(parm);

    get_tag(parm,dnode,"descricao",0,0);
    strToOra(nmBonus,parm);

    get_tag(parm,dnode,"vlBonus",0,0);
    vlBonus = (float) atof(parm);

    get_tag(parm,dnode,"validade",0,0);
    qtDiasValidade = atoi(parm);

	 get_tag(parm,dnode,"idRegional",0,0);
    idUfOperadora = atoi(parm);

    // Pegando id do usuario
    idPessoaUsuarioAlteracao = usuario;

  //testando para ver se existe retistro
    EXEC SQL 
      SELECT idMatrizBonus
      INTO   :iExiste
      FROM retencao.matrizBonus
      WHERE  inMigracaoPosPre=1
	  AND 	inAtivo != 0
      AND   idUfOperadora = :idUfOperadora
      AND   UPPER(TRIM(nmBonus)) =UPPER(TRIM(:nmBonus))
	  and   idMatrizBonus!=:idMatrizBonus
	  AND ROWNUM<=1;
 if(!iExiste)
 {
    // Update 
    EXEC SQL 
      update retencao.matrizBonus
      set   nmBonus = :nmBonus,
      vlBonus = :vlBonus,   // para ajustar float para int
      qtDiasValidade = :qtDiasValidade,
	  idUfOperadora = :idUfOperadora,	
      idPessoaUsuarioAlteracao = :idPessoaUsuarioAlteracao,
      dtAlteracao = sysdate,
	  IDUSUARIOALTERACAO =:idPessoaUsuarioAlteracao,
	  DTULTIMAALTERACAO=sysdate
      where  idMatrizBonus = :idMatrizBonus;

    // Update OK
    xml->addItem("descricao","MODIFICADO");
    xml->addItem("valor",sqlca.sqlerrd[2]);
  }
  else
  {  // Ja existe registro, erro
      
       throw new TuxBasicSvcException(NOKFID,"Existe Migracao Cadastrada!");

  }
  }catch(...){throw;}

  return 1;
}
