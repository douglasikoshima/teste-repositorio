//
// $Id: ins_migracao.pcpp,v 1.1 2009/07/31 15:34:31 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"

int ins_migracao(int usuario, DOMNode*dnode, XMLGen*xml)
{
  char  parm[255];
  int   existeRegistro = 1;

  EXEC SQL BEGIN DECLARE SECTION;
  int     idMatrizBonus;
  int     idUfOperadora;
  int     qtDiasValidade;
  VARCHAR nmBonus[255];
  int     vlBonus;
  int     idPessoaUsuarioInclusao;
  int	  idUnidadeOferta=0;
  int	  id=0;
  int	  idTipoPessoa;
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

  try
  {
    //  Obtendo dados do xml
    get_tag(parm,dnode,"idUfOperadora",0,0);
    idUfOperadora = atoi(parm);

    get_tag(parm,dnode,"descricao",0,0);
    strToOra(nmBonus,parm);

    get_tag(parm,dnode,"vlBonus",0,0);
    vlBonus = atoi(parm);

    get_tag(parm,dnode,"qtDiasValidade",0,0);
    qtDiasValidade = atoi(parm);

	get_tag(parm, dnode, "idTipoPessoa", 0, 0);
    idTipoPessoa = atoi(parm);


    // Pegar id do usuario
    idPessoaUsuarioInclusao = usuario;


    //Verificando existencia do registro
    EXEC SQL WHENEVER NOT FOUND DO cl_flag(&existeRegistro);
    EXEC SQL 
      SELECT idMatrizBonus
      INTO   :idMatrizBonus
      FROM retencao.matrizBonus
      WHERE  inMigracaoPosPre=1
	  AND 	inAtivo != 0
      AND   idUfOperadora = :idUfOperadora
      AND   UPPER(TRIM(nmBonus)) =UPPER(TRIM(:nmBonus))
	  AND    inMigracaoPosPre=1
	  and	IDTIPOPESSOA=:idTipoPessoa
	  AND ROWNUM<=1;

    ULOG_INT(existeRegistro);
    ULOG_INT(idMatrizBonus);



    // Insercoes  
    if ( existeRegistro == 0)
	{ // Nao existe registro igual
      EXEC SQL 
		insert 	into retencao.matrizBonus(idMatrizBonus,
											 nmBonus,
											 vlBonus,
											 qtDiasValidade,
											 idUfOperadora,
											 idPessoaUsuarioInclusao,
											 dtInclusao,
											 idPessoaUsuarioAlteracao,
											 dtAlteracao,
											 idUsuarioAlteracao,
											 dtUltimaAlteracao,
											 inMigracaoPosPre,
											 inAtivo,
											 IDTIPOPESSOA)
	values(retencao.matrizBonusSQ.nextval, 
		   :nmBonus,
		   :vlBonus,
	       :qtDiasValidade,
		   :idUfOperadora,
	       :idPessoaUsuarioInclusao,
		   sysdate,
	       :idPessoaUsuarioInclusao,
		   sysdate,
	       :idPessoaUsuarioInclusao,
		   sysdate,
		   1,
		   1,
		   :idTipoPessoa);

      strcpy(parm,"INSERIDO");
	  xml->addItem("descricao",parm);
	  xml->addItem("valor",sqlca.sqlerrd[2]);
    }
	else
	{ // Ja existe registro, erro
      
        throw new TuxBasicSvcException(NOKFID,"Existe Migracao Cadastrada!");
    }

    // insert OK 
    
  }catch(...){throw;}

  return 1;
}


