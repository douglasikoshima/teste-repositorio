//
// $Id: sel_seg.pcpp,v 1.1 2009/07/31 15:33:42 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"

int sel_Seg_e_Grupo(DOMNode*dnode,XMLGen*xml)
{
    
  EXEC SQL BEGIN DECLARE SECTION;
    int idSegmentacao;
    VARCHAR dsSegmentacao[255];
	int idGrupo;
    VARCHAR dsGrupo[255];
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
  EXEC SQL WHENEVER NOT FOUND DO break;

  try
  {
	
	//cursor de segmentação
    EXEC SQL DECLARE crsSeg CURSOR FOR
      select idSegmentacao, dsSegmentacao
      from apoio.Segmentacao
	  order by dsSegmentacao;
	
    EXEC SQL OPEN crsSeg;
	xml->createTag("tns:fidelizacaoListaGeralVO");
    for(;;) 
	{
      EXEC SQL FETCH crsSeg INTO :idSegmentacao, :dsSegmentacao;
      endOraStr(dsSegmentacao);
      xml->createTag("tns:itemListaVO");
      xml->addItem("id",idSegmentacao);
      xml->addItem("descricao",(char *)dsSegmentacao.arr);
      xml->closeTag();
    }
	xml->closeTag();   
	
	//cursor para grupo
	 EXEC SQL DECLARE crsGrp CURSOR FOR
     SELECT idGrupo, 
			nmGrupo
	 FROM acesso.grupo
	 WHERE idGrupo IN(SELECT idgrupo FROM
 	   		   		  RETENCAO.GRUPOMOTIVOORDEM)
	 ORDER BY NMGRUPO;
	
    EXEC SQL OPEN crsGrp;
	xml->createTag("tns:fidelizacaoListaGeralVO");
    for(;;) 
	{
      EXEC SQL FETCH crsGrp INTO :idGrupo, :dsGrupo;
      endOraStr(dsGrupo);
      xml->createTag("tns:itemListaVO");
      xml->addItem("id",idGrupo);
      xml->addItem("descricao",(char *)dsGrupo.arr);
      xml->closeTag();
    }
	xml->closeTag(); 

    EXEC SQL CLOSE crsSeg;
	EXEC SQL CLOSE crsGrp;
  }
  catch(...)
  {
	  throw;
  }
  
  return 1;
}

