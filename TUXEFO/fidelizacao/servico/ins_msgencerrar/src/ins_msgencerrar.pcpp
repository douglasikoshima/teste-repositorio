//
// $Id: ins_msgencerrar.pcpp,v 1.1 2009/07/31 15:34:19 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"

int ins_msgencerrar(int usuario, DOMNode*dnode, XMLGen*xml)
{
  char parm[255];
  int  existeRegistro = 1;
  int  rc;

  EXEC SQL BEGIN DECLARE SECTION;
  int     idUfOperadora;
  int     idTipoEncerramento;
  int     idMsgEncerramento;
  VARCHAR dsMsgEncerramento[255];
  int     idUsuarioAlteracao;
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

  try{
    //  Obtendo dados do xml
    get_tag(parm,dnode,"idUfOperadora",0,0);
    idUfOperadora = atoi(parm);

    get_tag(parm,dnode,"idTipoEncerramento",0,0);
    idTipoEncerramento = atoi(parm);

    get_tag(parm,dnode,"dsMsgEncerramento",0,0);
    strToOra(dsMsgEncerramento,parm);

    // Pegando id do usuario
    idUsuarioAlteracao = usuario;

    //Verificando existencia do registro
    EXEC SQL WHENEVER NOT FOUND DO cl_flag(&existeRegistro);
    EXEC SQL 
      select idMsgEncerramento
      into   :idMsgEncerramento
      from retencao.MsgEncerramento
      where inAtivo != 0
      and   idUfOperadora = :idUfOperadora
      and   idTipoEncerramento = :idTipoEncerramento;
    ULOG_INT(existeRegistro);

    // Insercoes  
    if ( existeRegistro == 0 ){
      EXEC SQL 
	insert into retencao.MsgEncerramento(idMsgEncerramento,idUfOperadora,
						idTipoEncerramento, dsMsgEncerramento,
						idUsuarioAlteracao,dtUltimaAlteracao,
						inAtivo)
	values(retencao.MsgEncerramentoSQ.nextval, :idUfOperadora,
	       :idTipoEncerramento, :dsMsgEncerramento,
	       :idUsuarioAlteracao, sysdate,
	       1);

      strcpy(parm,"INSERIDO");
      rc = 1;
    }else{
      // No caso de existir, nao muda nada e retorna mensagem informando
      // que existe registro
      strcpy(parm,"EXISTE_REGISTRO");
      rc = idMsgEncerramento;
    }
    // insert OK 
    xml->addItem("descricao",parm);
    xml->addItem("valor",rc);
  }catch(...){throw;}

  return 1;
}
