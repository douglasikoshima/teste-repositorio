//
// $Id: set_detaparelho.pcpp,v 1.1 2009/07/31 15:33:58 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"

struct EstoqueChip
{
    int  idAreaRegistro;
    int  idUsuario;
    int  inAvulso;
    char vlUnitario[12];
    char cdSAPChip[256];
};

void AtualizaEstoqueChip( EstoqueChip *pEstoqueChip );

/*
int set_detaparelho(int usuario, DOMNode*dnode, XMLGen*xml)
{
    char parm[256];
    int  i;

    EXEC SQL BEGIN DECLARE SECTION;
      int     idMatrizAparelho;
      double  vlMulta;
      int     idUsuarioAlteracao;
      int     idEstoque=0;
      VARCHAR cdSapAparelho[255];
      int     qtDisponivel;
      double  vlAparelho;
      int     idAparelhoCor;
      int     idUfOperadora;
      int     vlPercentualDesconto;
      int     idParcela;
      int	  iestoque=0;

      int     idTipoAparelho = -1;
      short   i_idTipoAparelho = -1;
    EXEC SQL END DECLARE SECTION;

    EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);

    TuxHelper txh;
    DOMNode * dnListaDDD = NULL;


    try
    {
        pEstoqueChip.idUsuario = usuario;
        
        ULOG(" // Obtendo dados do xml \n");
        get_tag(parm,dnode,"idMatrizAparelho",0,0);
        idMatrizAparelho = atoi(parm);

        get_tag(parm,dnode,"vlMulta",0,0);
        vlMulta = atof(parm);

        get_tag(parm,dnode,"cdSapAparelho",i,0);
        strToOra(cdSapAparelho,parm);

        idUsuarioAlteracao = usuario;

        ULOG(" // Update Dados basicos \n");

        EXEC SQL 
        UPDATE RETENCAO.MATRIZAPARELHO
           SET VLMULTA = :vlMulta,
               IDPESSOAUSUARIOALTERACAO = :idUsuarioAlteracao,
               DTALTERACAO = sysdate,
               IDUSUARIOALTERACAO = :idUsuarioAlteracao,
               DTULTIMAALTERACAO = sysdate
        WHERE  
            IDMATRIZAPARELHO = :idMatrizAparelho;

        ULOG(" // Loop dos dados estoque \n");
        
        get_tag(parm,dnode,"idUfOperadora",0,0);
        idUfOperadora = atoi(parm);

        i = 0;
        
        // while ( get_tag(parm,dnode,"idEstoque",i,-1) != -1 )
        // {
            // idEstoque = atoi(parm);

            // get_tag(parm,dnode,"cdSapAparelho",i,0);
            // strToOra(cdSapAparelho,parm);

            // get_tag(parm,dnode,"qtDisponivel",i,0);
            // qtDisponivel = atoi(parm);

            // get_tag(parm,dnode,"vlAparelho",i,0); 
            // vlAparelho = atof(parm);
            
            // get_tag(parm,dnode,"idAparelhoCor",i,0); 
            // idAparelhoCor = atoi(parm);

            // If idEstoque != 0 > fazer update 
            // else => nao existia estoque para 
                 // este aparelho, serah inserido.
            // EXEC SQL
            // select idestoque
            // into iestoque
            // from retencao.Estoque
            // where idAparelhoCor=:idAparelhoCor
            // and  idUfOperadora=:idUfOperadora
            // and rownum<=1;

            // idEstoque=(iestoque)?iestoque:0;

            // if (idEstoque>0)
            // {
                // ULOG(" // Update dos dados de estoque \n");
                // EXEC SQL 
                // update retencao.Estoque
                // set    qtDisponivel = :qtDisponivel,
                // vlAparelho   = :vlAparelho,
                // cdSAPaparelho = :cdSapAparelho,
                // idPessoaUsuarioAlteracao = :idUsuarioAlteracao,
                // dtAlteracao = sysdate,
                // idUsuarioAlteracao = :idUsuarioAlteracao,
                // dtUltimaAlteracao = sysdate,
                // idTipoPessoa	  =:idTipoPessoa
                // where  idEstoque = :idEstoque;
            // }
            // else
            // {
                //insercao de novo estoque
                // EXEC SQL 
                // insert into retencao.Estoque
                // (
                    // IDESTOQUE, 
                    // IDAPARELHOCOR, 
                    // QTDISPONIVEL,
                    // IDUFOPERADORA, 
                    // VLAPARELHO, 
                    // CDSAPAPARELHO,
                    // IDPESSOAUSUARIOINCLUSAO,
                    // DTINCLUSAO,
                    // IDPESSOAUSUARIOALTERACAO,
                    // DTALTERACAO,
                    // IDUSUARIOALTERACAO,
                    // DTULTIMAALTERACAO,
                    // IDTIPOPESSOA
                // )
                // VALUES
                // (
                    // retencao.EstoqueSQ.NEXTVAL, 
                    // :idAparelhoCor, 
                    // :qtDisponivel,
                    // :idUfOperadora, 
                    // :vlAparelho, 
                    // :cdSapAparelho,
                    // :idUsuarioAlteracao, 
                    // sysdate,
                    // :idUsuarioAlteracao, 
                    // sysdate,
                    // :idUsuarioAlteracao, 
                    // sysdate,
                    // :idTipoPessoa
                // );
            // }
            // i++;
        // }

        // ULOG(" // Colocando os descontos como invalidos \n");
        // EXEC SQL 
        // update retencao.MatrizAparelhoDesconto
        // set    inAtivo = 0,
        // idUsuarioAlteracao = :idUsuarioAlteracao,
        // dtUltimaAlteracao = sysdate
        // where  idMatrizAparelho = :idMatrizAparelho;

        // ULOG(" // Loop dos Descontos \n");
        // i = 0;
    
        // while ( get_tag(parm,dnode,"vlPercentualDesconto",i,-1) != -1 ) 
        // {
            // vlPercentualDesconto = atoi(parm);

            // ULOG(" // Update dos descontos \n");
            // EXEC SQL 
            // update retencao.MatrizAparelhoDesconto
            // set    inAtivo = 1,
            // idUsuarioAlteracao = :idUsuarioAlteracao,
            // dtUltimaAlteracao = sysdate
            // where  idMatrizAparelho = :idMatrizAparelho
            // and    vlPercentualDesconto = :vlPercentualDesconto;

            // ULOG(" // Testando se existia registro, caso contrario inserir \n");
            // ULOG_INT(sqlca.sqlerrd[2]);
            // if (sqlca.sqlerrd[2] == 0)
            // {
                // EXEC SQL 
                // insert 
                // into retencao.MatrizAparelhoDesconto (idMatrizAparelhoDesconto,
                                               // vlPercentualDesconto,
                                               // idMatrizAparelho,
                                               // idUsuarioAlteracao,
                                               // dtUltimaAlteracao,
                                                // inAtivo)
                // values (retencao.MatrizAparelhoDescontoSQ.nextval,
                    // :vlPercentualDesconto,
                    // :idMatrizAparelho,
                    // :idUsuarioAlteracao,
                    // sysdate,
                    // 1);
            // }
            // i++;
        // }


        ULOG(" // Colocando as parcelas como invalidas \n");
        EXEC SQL 
        UPDATE RETENCAO.MATRIZAPARELHOPARCELA
           SET INATIVO = 0,
               IDUSUARIOALTERACAO = :idUsuarioAlteracao,
               DTULTIMAALTERACAO = sysdate
         WHERE  
           IDMATRIZAPARELHO = :idMatrizAparelho;

        ULOG(" // Loop das parcelas \n");
        i = 0;

        while ( get_tag(parm,dnode,"idParcela",i,-1) != -1 ) 
        {
            idParcela = atoi(parm);

            ULOG(" // Update das parcelas \n");
            EXEC SQL 
            UPDATE RETENCAO.MATRIZAPARELHOPARCELA
               SET INATIVO = 1,
                   IDUSUARIOALTERACAO = :idUsuarioAlteracao,
                   DTULTIMAALTERACAO = sysdate
             WHERE  
                  IDMATRIZAPARELHO = :idMatrizAparelho
               AND    
                  IDPARCELA = :idParcela;

            ULOG(" // Testando se existia registro, caso contrario inserir \n");
            if ( sqlca.sqlerrd[2] == 0 )
            {
                EXEC SQL 
                INSERT INTO RETENCAO.MATRIZAPARELHOPARCELA 
                (
                    idMatrizAparelhoParcela,
                    idMatrizAparelho,
                    idParcela,
                    idUsuarioAlteracao,
                    dtUltimaAlteracao,
                    inAtivo
                )
                values 
                (
                    RETENCAO.MATRIZAPARELHOPARCELASQ.NEXTVAL,
                    :idMatrizAparelho,
                    :idParcela,
                    :idUsuarioAlteracao,
                    SYSDATE,
                    1
                );

            }
            i++;
        }
       
        EXEC SQL
        SELECT 
            RA.IDTIPOAPARELHO
        INTO 
            :idTipoAparelho:i_idTipoAparelho
        FROM
            RETENCAO.APARELHO RA
        WHERE
            RA.IDAPARELHO = 
            ( SELECT MTAP.IDAPARELHO FROM RETENCAO.MATRIZAPARELHO MTAP WHERE MTAP.IDMATRIZAPARELHO = :idMatrizAparelho );

    
        ULOG( "Validando atualizacao de chip...");

        EstoqueChip pEstoqueChip;
        memset( &pEstoqueChip, 0x0, sizeof(pEstoqueChip) );

        if ( idTipoAparelho == 2 )
        {
            ULOG( "Eh chip avulso" ); 
            pEstoqueChip.inAvulso = 1;
        }

        if ( idTipoAparelho == 3 )
        {
            ULOG( "Chip pre-programado" ); 
            pEstoqueChip.inAvulso = 0;
        }

        dnListaDDD = txh.walkDOM(dnode, "listaDDD", 0);
        i=0;
        if ( dnListaDDD != NULL ) 
        {
            ULOG( "Achou listaDDD" ); 
            
            while ( get_tag(parm,dnListaDDD,"item",i,-1) != -1 ) 
            {
                ULOG( "Achou item" ); 
                
                get_tag(parm,dnListaDDD,"id",i,-1);
                pEstoqueChip.idAreaRegistro = atoi(parm);

                get_tag(parm,dnListaDDD,"vlUnitario",i,-1);
                strcpy(pEstoqueChip.vlUnitario,parm);

                // get_tag(parm,dnListaDDD,"qtEstoque",i,-1);
                // pEstoqueChip.qtEstoque = atoi(parm);

                AtualizaEstoqueChip( &pEstoqueChip );
                i++;
            }
        }

        ULOG(" // Operacao OK  \n");
        xml->addItem("descricao","SETDETAPARELHO");
        xml->addItem("valor",1);
    }
    catch(...)
    {
        throw;
    }
    return 1;
}




/*
 * SM250 - Manutencao de CHIP
 * Jan/2007 - Marcelo
 */
/*void AtualizaEstoqueChip( EstoqueChip *pEstoqueChip )
{
    ULOG_START( "AtualizaEstoqueChip()" );

    EXEC SQL BEGIN DECLARE SECTION; 

        VARCHAR vlChipAvulso[12];
        VARCHAR vlChipPre[12];
        
        int     idAreaRegistro = pEstoqueChip->idAreaRegistro;
        int     idUsuario = pEstoqueChip->idUsuario;
    
    EXEC SQL END DECLARE SECTION;

    EXEC SQL WHENEVER SQLERROR DO sql_error( NULL );

    // EXEC SQL
    // SELECT
        // IDESTOQUECHIP
    // INTO
       // :idEstoqueChip:i_idEstoqueChip
    // FROM
        // RETENCAO.ESTOQUECHIP
    // WHERE
        // IDAREAREGISTRO = :idAreaRegistro;

    if ( pEstoqueChip->inAvulso == 1 )
	{
        strToOra( vlChipAvulso,pEstoqueChip->vlUnitario );
        EXEC SQL 
        UPDATE RETENCAO.CHIP
           SET VLCHIPAVULSO  = :vlChipAvulso ,
               IDUSUARIOALTERACAO = :idUsuario ,
               DTULTIMAALTERACAO = SYSDATE
        WHERE
            IDAREAREGISTRO = :idAreaRegistro;

        if ( sqlca.sqlerrd[2] == 0 )
        {
            EXEC SQL 
                INSERT INTO RETENCAO.CHIP 
                (
                    IDCHIP ,
                    VLCHIPAVULSO ,
                    CDSAPCHIPAVULSO ,
                    IDAREAREGISTRO ,
                    IDUSUARIOALTERACAO ,
                    DTULTIMAALTERACAO
                )
                VALUES 
                (
                    RETENCAO.CHIPSQ.NEXTVAL ,
                    :vlChipAvulso ,
                    :cdSAPChip ,
                    :idAreaRegistro ,
                    :idUsuario ,
                    SYSDATE
                );
        }
    }
    else
    {
        strToOra( vlChipPre,pEstoqueChip->vlUnitario );
        EXEC SQL 
        UPDATE RETENCAO.CHIP
           SET VLCHIPPREPROG  = :vlChipPre ,
               IDUSUARIOALTERACAO = :idUsuario ,
               DTULTIMAALTERACAO = SYSDATE
        WHERE
            IDAREAREGISTRO = :idAreaRegistro;

        if ( sqlca.sqlerrd[2] == 0 )
        {
            EXEC SQL 
                INSERT INTO RETENCAO.CHIP 
                (
                    IDCHIP ,
                    VLCHIPPREPROG ,
                    CDSAPCHIPPREPROG ,
                    IDAREAREGISTRO ,
                    IDUSUARIOALTERACAO ,
                    DTULTIMAALTERACAO
                )
                VALUES 
                (
                    RETENCAO.CHIPSQ.NEXTVAL ,
                    :vlChipPre ,
                    :cdSAPChip ,
                    :idAreaRegistro ,
                    :idUsuario ,
                    SYSDATE
                );
        }

    }
        	
	ULOG_END( "AtualizaEstoqueChip()" );
}

*/
