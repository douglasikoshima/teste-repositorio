//
// $Id: sel_motaltend.pcpp,v 1.1 2009/07/31 15:34:15 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"


int sel_motaltend(int usuario, DOMNode*dnode, XMLGen*xml)
{
  ULOG_START("sel_motaltend()");
  EXEC SQL BEGIN DECLARE SECTION;
    
    int     idMotivoAlteracaoEndereco;
    VARCHAR dsMotivoAlteracaoEndereco[50];
    
  EXEC SQL END DECLARE SECTION;
  
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
  EXEC SQL WHENEVER NOT FOUND DO break;

  try{
    //  Obtendo dados do xml
			// Definicao dos cursores
			EXEC SQL DECLARE crsMotAltEnd CURSOR FOR
                SELECT 
                      IDMOTIVOALTERACAOENDERECO ,
                      DSMOTIVOALTERACAOENDERECO 
                FROM RETENCAO.MOTIVOALTERACAOENDERECO;
			EXEC SQL OPEN crsMotAltEnd;
			
//			xml->createTag("listaMotivosAlteracaoEndereco");

		    for(;;) 
			{
				EXEC SQL FETCH crsMotAltEnd INTO :idMotivoAlteracaoEndereco,:dsMotivoAlteracaoEndereco;
    

				 endOraStr(dsMotivoAlteracaoEndereco);
				xml->createTag("itemListaVO");
						xml->addItem("idMotivoAlteracaoEndereco",idMotivoAlteracaoEndereco);
						xml->addItem("dsMotivoAlteracaoEndereco",(char *)dsMotivoAlteracaoEndereco.arr);
				xml->closeTag();
			}
			
//			xml->closeTag();
  
			EXEC SQL CLOSE crsMotAltEnd;
  }
  catch(...)
  {
	throw;
  }

  ULOG_END("sel_motaltend()");
  return 1;
}




int sel_protocolos(int usuario, DOMNode*dnode, XMLGen*xml)
{
  ULOG_START("sel_protocolos()");
  char parm[255];

  EXEC SQL BEGIN DECLARE SECTION;
    VARCHAR nrProtocolo[21+1];
    VARCHAR idAtendimento[21+1];
	VARCHAR	idPessoaDePara[21+1];
    
  EXEC SQL END DECLARE SECTION;
  
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
  EXEC SQL WHENEVER NOT FOUND DO break;


 get_tag(parm,dnode,"idPessoaDePara",0,0);
 strToOra(idPessoaDePara,parm);

  try{
    
			// Definicao dos cursores
			EXEC SQL DECLARE crsProtocolo CURSOR FOR
             SELECT DISTINCT 
                      idatendimento ,
                      rc.nrprotocolo
                FROM ATENDIMENTO.ATENDIMENTO ATT,
					 RETENCAO.RETENCAOCONSOLIDADA RC,
					 retencao.contatoencerramento ce
				WHERE ATT.idatendimentoprotocolo=RC.NRPROTOCOLO
				AND	  ATT.IDCONTATO=CE.IDCONTATO
				AND	  RC.IDPESSOADEPARA=:idPessoaDePara
				AND	  TRUNC(RC.DTINCLUSAO)=TRUNC(SYSDATE);
			
			EXEC SQL OPEN crsProtocolo;
			

		    for(;;) 
			{
				EXEC SQL FETCH crsProtocolo INTO :idAtendimento,
												 :nrProtocolo;
    
				endOraStr(idAtendimento);
				endOraStr(nrProtocolo);
				xml->createTag("AdmContatoFolhaVO");
						xml->addItem("idContato",(char *)idAtendimento.arr);
						xml->addItem("nmContato",(char *)nrProtocolo.arr);
				xml->closeTag();
			}
			

  			EXEC SQL CLOSE crsProtocolo;
  }
  catch(...)
  {
	throw;
  }

  ULOG_END("sel_protocolos()");
  return 1;
}