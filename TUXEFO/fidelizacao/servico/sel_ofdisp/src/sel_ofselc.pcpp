//
// $Id: sel_ofselc.pcpp,v 1.1 2009/07/31 15:34:01 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"

int sel_ofselc(int usuario, DOMNode*dnode, XMLGen*xml)
{
  char parm[50];

  EXEC SQL BEGIN DECLARE SECTION;
  int     idUfOperadora;
  int     idSegmentacao;
  int     idTipoPessoa;
  int     idResposta;
  int     idOferta;
  int	  idIntencao;
  int	  idGrupo;
  VARCHAR nmOferta[255];
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
  EXEC SQL WHENEVER NOT FOUND DO break;

  try{
    //  Obtendo dados do xml
    get_tag(parm,dnode,"idUfOperadora",0,0);
    idUfOperadora = atoi(parm);

    get_tag(parm,dnode,"idSegmentacao",0,-1);
    idSegmentacao = atoi(parm);

    get_tag(parm,dnode,"idTipoPessoa",0,0);
    idTipoPessoa = atoi(parm);

    get_tag(parm,dnode,"idDestino",0,-1);
	idResposta = atoi(parm);

	get_tag(parm,dnode,"idIntencao",0,0);
	idIntencao = atoi(parm);
	
	get_tag(parm,dnode,"idGrupo",0,0);
	idGrupo = atoi(parm);

    // definicao do cursor
    EXEC SQL DECLARE crsOfDsp CURSOR FOR
	SELECT DISTINCT 
	   idunidadeoferta,
	   nmoferta
	FROM 
	   retencao.oferta
	WHERE 
       inativo = 1
    and 
	   idunidadeoferta 
	IN 
	(  
		SELECT 
		    ofertasegmentacao.idOferta 
		FROM   
		    retencao.ofertagrupo ofertagrupo ,
		    retencao.ofertasegmentacao ofertasegmentacao ,
		    retencao.ofertarespostaunidade ofertarespostaunidade ,
		    retencao.respostaunidade respostaunidade
		WHERE
		    respostaunidade.idUfOperadora = :idUfOperadora
		AND ofertasegmentacao.idSegmentacao = :idSegmentacao
		and ofertasegmentacao.idoferta = ofertagrupo.idoferta
		AND ofertarespostaunidade.idoferta = ofertagrupo.idoferta
		and respostaunidade.idrespostaunidade = ofertarespostaunidade.idrespostaunidade
		AND respostaunidade.idTipoPessoa = :idTipoPessoa
		and respostaunidade.idresposta2 = :idResposta
		and respostaunidade.idresposta1 = :idIntencao
		AND	ofertagrupo.idGrupo = :idGrupo
		AND ofertagrupo.inativo = 1
		and ofertasegmentacao.inativo = 1
		and ofertarespostaunidade.inativo = 1
		and respostaunidade.inativo = 1
	) ORDER BY nmoferta;
	
    EXEC SQL OPEN crsOfDsp;

    for(;;)
	{
      EXEC SQL FETCH crsOfDsp INTO :idOferta,:nmOferta;
    
      endOraStr(nmOferta);
      ULOG_INT(idOferta);
      ULOG_VAR(nmOferta);
      xml->createTag("tns:itemListaVO");
      xml->addItem("id",idOferta);
      xml->addItem("descricao",(char *)nmOferta.arr);
      xml->closeTag();
    }
  
    EXEC SQL CLOSE crsOfDsp;
  }catch(...){throw;}

  return 1;
}

