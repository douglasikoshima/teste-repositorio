//
// $Id: sel_ofdisp.pcpp,v 1.1 2009/07/31 15:34:01 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"

int sel_ofdisp(int usuario, DOMNode*dnode, XMLGen*xml)
{
 char parm[255];
 int  ret=0;
 int  iDestino=0;
 int  iSegmentacao=0;
 int  inFidelizacao=0;


  EXEC SQL BEGIN DECLARE SECTION;
  int     idUnidadeOferta;
  VARCHAR nmOferta[255];

  int 	  idUfOperadora;
  int	  idTipoPessoa;
  int	  idSegmentacao;
  int     idRespostaIntencao;
  int	  idRespostaDestino;
  int	  idGrupo;

  EXEC SQL END DECLARE SECTION;

  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
  EXEC SQL WHENEVER NOT FOUND DO break;

  try
  {
   
   
    get_tag(parm,dnode,"idUfOperadora",0,0);
    idUfOperadora = atoi(parm);

	while(get_tag(parm,dnode,"idSegmentacao",iSegmentacao,-1) !=-1)
	{						  
		   idSegmentacao = atoi(parm);
	 iSegmentacao++;
	}

    get_tag(parm,dnode,"idTipoPessoa",0,0);
    idTipoPessoa = atoi(parm);

    get_tag(parm,dnode,"idIntencao",0,0);
    idRespostaIntencao = atoi(parm);

	get_tag(parm,dnode,"inFidelizacao",0,0);
    inFidelizacao = atoi(parm);

	while(get_tag(parm,dnode,"idDestino",iDestino,-1) !=-1)
	{
		idRespostaDestino = atoi(parm);
		iDestino++;	

	}
    //get_tag(parm,dnode,"idDestino",0,-1);
    
   get_tag(parm,dnode,"idGrupo",0,0);
   idGrupo = atoi(parm);
   
    // definicao do cursor
   if(iDestino==1 || iSegmentacao==1)
   {
    
		 EXEC SQL DECLARE crsOfrt CURSOR FOR
		 SELECT DISTINCT 
		    idUnidadeOferta, 
		    nmOferta
		 FROM   
		    retencao.oferta 
		 WHERE  
		    inAtivo != 0
		 AND 
		    idUnidadeOferta 
		 NOT IN
		 ( 
			SELECT 
			    ofertasegmentacao.idOferta 
			FROM   
			    retencao.ofertagrupo ofertagrupo ,
			    retencao.ofertasegmentacao ofertasegmentacao ,
			    retencao.ofertarespostaunidade ofertarespostaunidade ,
			    retencao.respostaunidade respostaunidade
			WHERE
			    respostaunidade.idUfOperadora = :idUfOperadora
			AND ofertasegmentacao.idSegmentacao = :idSegmentacao
			and ofertasegmentacao.idoferta = ofertagrupo.idoferta
			AND ofertarespostaunidade.idoferta = ofertagrupo.idoferta
			and respostaunidade.idrespostaunidade = ofertarespostaunidade.idrespostaunidade
			AND respostaunidade.idTipoPessoa = :idTipoPessoa
			and respostaunidade.idresposta2 = :idRespostaDestino
			and respostaunidade.idresposta1 = :idRespostaIntencao
			AND	ofertagrupo.idGrupo = :idGrupo
			AND ofertagrupo.inativo = 1
			and ofertasegmentacao.inativo = 1
			and ofertarespostaunidade.inativo = 1
			and respostaunidade.inativo = 1
		 ) ORDER BY nmOferta;
		 
		 ret=1;
		 EXEC SQL OPEN crsOfrt;
	
   }
   else
   {
	   EXEC SQL DECLARE crsOfrt1 CURSOR FOR

		SELECT distinct  idUnidadeOferta, nmOferta
		FROM   retencao.oferta 
		WHERE  inAtivo != 0
		ORDER BY nmOferta;

	EXEC SQL OPEN crsOfrt1;
	ret=0;
   }

 

    for(;;) 
	{
	  if (ret ) EXEC SQL FETCH crsOfrt  INTO :idUnidadeOferta,:nmOferta;
	  else	   EXEC SQL FETCH crsOfrt1 INTO :idUnidadeOferta,:nmOferta;	
    
      endOraStr(nmOferta);

      ULOG_INT(idUnidadeOferta);
      ULOG_VAR(nmOferta);

      xml->createTag("tns:itemListaVO");
      xml->addItem("id",idUnidadeOferta);
      xml->addItem("descricao",(char *)nmOferta.arr);
      xml->closeTag();
    }
  
    if(ret) EXEC SQL CLOSE crsOfrt;
	else    EXEC SQL CLOSE crsOfrt1;
  }
  catch(...)
  {
	throw;
  }

  return ret;
}

