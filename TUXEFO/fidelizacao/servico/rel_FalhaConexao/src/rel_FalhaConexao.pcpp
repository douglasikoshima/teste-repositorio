

#include "../../negocio/fidutil/include/retencao.hpp"
#include <string>

using namespace std;


// Prototipo
void procConsultaConexoes( DOMNode * dnode, XMLGen * xml_g );

/*
 *
 */
void procConsultaConexoes( DOMNode * dnode, XMLGen * xml_g )
{
   char parm[30];
   int idRegional = 0;
   int idSegmento = 0;
   int idGrupo = 0;
   char dtInicialPrm[15];
   char dtFinalPrm[15];
   string dyn_statement;
   char buffer[25];

   EXEC SQL BEGIN DECLARE SECTION;
        
      char * query;

      int nrDocumento;
      VARCHAR dtInterrupcao[30];
      VARCHAR dsRegional[70];
      VARCHAR nrConta[20];
      VARCHAR nrLinha[12];
      VARCHAR dsMotivoErro[150];
      short i_dtInterrupcao;
      short i_dsRegional;
      short i_nrConta;
      short i_nrLinha;
      short i_dsMotivoErro;

   EXEC SQL END DECLARE SECTION;

   memset( parm        , 0x0, sizeof(parm) );
   memset( dtInicialPrm, 0x0, sizeof(dtInicialPrm) );
   memset( dtFinalPrm  , 0x0, sizeof(dtFinalPrm) );
   // Carrega Parametros de Filtro, vindos do XML de entrada
   get_tag( parm,dnode,"idRegional",0,-1 );  // -1 Torna o elemento nao obrigatorio
   idRegional = atoi( parm );
   get_tag( parm,dnode,"idSegmentacao",0,-1 );  // -1 Torna o elemento nao obrigatorio
   idSegmento = atoi( parm );
   get_tag( parm,dnode,"idGrupo",0,-1 );  // -1 Torna o elemento nao obrigatorio
   idGrupo = atoi( parm );
   get_tag( parm,dnode,"DataInicial",0,-1 );
   strcpy( dtInicialPrm, parm );
   get_tag( parm,dnode,"DataFinal",0,-1 );
   strcpy( dtFinalPrm, parm );


   EXEC SQL WHENEVER SQLERROR DO sql_error( NULL );

   dyn_statement =
     "SELECT "
         "NRDOCUMENTO, "
         "DTINTERRUPCAO, "
         "DSREGIONAL, "
         "NRCONTA, "
         "NRLINHA, "
         "DSMOTIVOERRO "
     "FROM "
         "RETENCAO.ANALISECREDITO "
     "WHERE ";

   if ( strlen(dtInicialPrm) > 0 )
   {
     dyn_statement +=
         "DTINCLUSAO "
     "BETWEEN "
         "TO_DATE(";
     dyn_statement += dtInicialPrm;
     dyn_statement += ",'DD/MM/YYYY')";

     dyn_statement +=
     " AND "
         "TO_DATE(";
     dyn_statement += dtFinalPrm;
     dyn_statement += ",'DD/MM/YYYY')";
   }

   if ( idRegional > 0 )
   {
     dyn_statement +=
         "AND "
            "IDREGIONAL = ";
     sprintf( buffer, "%d", idRegional );
     dyn_statement += buffer;

   }

   if ( idSegmento > 0 )
   {
     dyn_statement +=
         " AND "
            "IDSEGMENTACAO = ";
     sprintf( buffer, "%d", idSegmento );
     dyn_statement += buffer;
   }

   if ( idGrupo > 0 )
   {
     dyn_statement +=
         " AND "
            "IDGRUPO = ";
     sprintf( buffer, "%d", idGrupo );
     dyn_statement += buffer;
   }


   query = (char *)dyn_statement.c_str();
   printf( "Query [%s]\n",query );

   EXEC SQL PREPARE CnsConexao FROM :query;
   EXEC SQL DECLARE consulta CURSOR FOR CnsConexao;

   EXEC SQL OPEN consulta;
   for ( ;; )
   {
        EXEC SQL FETCH 
           consulta 
        INTO 
           :nrDocumento,
           :dtInterrupcao:i_dtInterrupcao,
           :dsRegional:i_dsRegional,
           :nrConta:i_nrConta,
           :nrLinha:i_nrLinha,
           :dsMotivoErro:i_dsMotivoErro;

        endOraStr( dtInterrupcao );
        endOraStr( dsRegional );
        endOraStr( nrConta );
        endOraStr( nrLinha );
        endOraStr( dsMotivoErro );

   }
   EXEC SQL CLOSE consulta;
      


}

