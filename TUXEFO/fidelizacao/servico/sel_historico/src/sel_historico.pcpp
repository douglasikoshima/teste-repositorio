//
// $Id: sel_historico.pcpp,v 1.1 2009/07/31 15:33:59 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"
#include "../../negocio/fidutil/include/SmallString.h"

int sel_historico(int usuario, DOMNode*dnode, XMLGen*xml)
{
  ULOG_START("sel_historico()");
  char parm[255];
  SmallString query; 

  EXEC SQL BEGIN DECLARE SECTION;
  char idLinhaTelefonica[64];
  VARCHAR idRetencao[64];
  VARCHAR DSTIPOENCERRAMENTO[255];
  VARCHAR nmUsuario[255];
  VARCHAR dtRetencao[25];
  VARCHAR processo[255];
  int       idTipoAnalise;
  char *queryChar;
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
  EXEC SQL WHENEVER NOT FOUND DO break;

  try
  {
    //  Obtendo dados do xml
    get_tag(parm,dnode,"idLinha",0,0);
    strcpy( idLinhaTelefonica,parm );
    
    query= "SELECT A.IDRETENCAO,A.NMLOGINUSUARIO,A.DATA,A.IDPROCESSO,A.DSTIPOENCERRAMENTO,A.IDTIPOANALISE FROM ( "
           " SELECT  RET.IDRETENCAO, "
           " 		 AU.NMLOGINUSUARIO, "
           "		 TO_CHAR(RET.DTINCLUSAO,'dd/mm/yyyy') DATA, "
           "		 RET.IDRETENCAO AS IDPROCESSO, "
           "		 TP.DSTIPOENCERRAMENTO, "
           "         NVL((SELECT RETENCAOANALISE.IDTIPOANALISE  "
           "		        FROM RETENCAO.RETENCAOANALISE RETENCAOANALISE "
           "		       WHERE RETENCAOANALISE.IDRETENCAO = RET.IDRETENCAO ),0) AS IDTIPOANALISE   "
           "	FROM RETENCAO.RETENCAO RET, "
           "		 RETENCAO.TIPOENCERRAMENTO TP,"
           "		 ACESSO.USUARIO	AU, "
           "		 RETENCAO.RETENCAOLINHA RETLINHA	 "
           " WHERE 	 RET.IDUSUARIOALTERACAO=AU.IDPESSOAUSUARIO "
           "	AND	 RET.IDTIPOENCERRAMENTO=TP.IDTIPOENCERRAMENTO "
           "	AND	 RET.IDRETENCAO=RETLINHA.IDRETENCAO "
           "	AND	 RETLINHA.IDLINHATELEFONICA = ";
    query+=  idLinhaTelefonica;
    query+=" ORDER BY  RET.DTINCLUSAO DESC "
           " ) A WHERE ROWNUM <= 50";           
           
    queryChar = query;           
    
    ULOG("QUERY = [%s]", queryChar);

    // Definicao dos cursores
    EXEC SQL PREPARE consultaHistorico FROM :queryChar;
    EXEC SQL DECLARE crsHist CURSOR for consultaHistorico;
    
    
           

/*

	SELECT  ret.idretencao,
			au.nmloginusuario,
		    TO_CHAR(ret.dtinclusao,'dd/mm/yyyy') DATA,
			ret.idretencao,
		    tp.dstipoencerramento
	FROM 	retencao.retencao ret,
			retencao.tipoencerramento tp,
			acesso.usuario	au,
			retencao.retencaolinha retlinha					
	WHERE 	ret.IDUSUARIOALTERACAO=au.IDPESSOAUSUARIO
	AND		ret.IDTIPOENCERRAMENTO=tp.IDTIPOENCERRAMENTO
	AND		ret.idretencao=retlinha.idretencao
	AND		retlinha.IDLINHATELEFONICA =:idLinhaTelefonica							  							  			  
	AND     ROWNUM<=50
	ORDER BY  ret.dtinclusao DESC;

*/
//############################################################################  
//      select idRetencao,nmLoginUsuario, dtRetencao, processo
//      from   retencao.historicoV01;
//#############################################################################
   
    EXEC SQL OPEN crsHist;

    for(int i=0;i<50;i++) 
	{
      EXEC SQL FETCH crsHist INTO :idRetencao,
								  :nmUsuario,
								  :dtRetencao,
								  :processo,
								  :DSTIPOENCERRAMENTO,
								  :idTipoAnalise;
    
      endOraStr(idRetencao);
      endOraStr(nmUsuario);
      endOraStr(dtRetencao);
      endOraStr(processo);
      endOraStr(DSTIPOENCERRAMENTO);

      ULOG_VAR(idRetencao);
      ULOG_VAR(nmUsuario);
      ULOG_VAR(dtRetencao);
      ULOG_VAR(processo);
      ULOG_VAR(DSTIPOENCERRAMENTO);
      ULOG_INT(idTipoAnalise);

      xml->createTag("tns:historicoRetencaoVO");
      xml->addItem("idRetencao",(char *)idRetencao.arr);
      xml->addItem("login",(char *)nmUsuario.arr);
      xml->addItem("data",(char *)dtRetencao.arr);
      xml->addItem("processo",(char *)idRetencao.arr);
	  xml->addItem("status",(char *)DSTIPOENCERRAMENTO.arr);
	  xml->addItem("idTipoAnalise",idTipoAnalise);

      xml->closeTag();
    }
  
    EXEC SQL CLOSE crsHist;
  }
  catch(...)
  {
	throw;
  }

  ULOG_END("sel_historico()");

  return 1;
}


