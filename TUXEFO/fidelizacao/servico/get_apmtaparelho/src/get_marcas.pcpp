//
// $Id: get_marcas.pcpp,v 1.1 2009/07/31 15:34:46 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"

int get_marcas(DOMNode*dnode,XMLGen*xml);
int get_tipoaparelho( XMLGen * xml );

int get_marcas(DOMNode*dnode,XMLGen*xml)
{
  
  EXEC SQL BEGIN DECLARE SECTION;
    int idMarca;
    VARCHAR nmMarca[255];
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
  EXEC SQL WHENEVER NOT FOUND DO break;

  try{
    EXEC SQL DECLARE crsMarca CURSOR FOR
      SELECT idMarca,nmMarca
      FROM retencao.marca
      WHERE  inAtivo != 0
	  ORDER BY nmMarca;
  
    EXEC SQL OPEN crsMarca;
    
    for(;;) {
      EXEC SQL FETCH crsMarca INTO :idMarca,:nmMarca;
      endOraStr(nmMarca);
      xml->createTag("tns:itemListaVO");
      xml->addItem("id",idMarca);
      xml->addItem("descricao",(char *)nmMarca.arr);
      xml->closeTag();
    }
  
    EXEC SQL CLOSE crsMarca;
  }catch(...){throw;}
  
  return 1;
}



int get_tipoaparelho( XMLGen * xml )
{
  
    EXEC SQL BEGIN DECLARE SECTION;
        int     idTipoAparelho;
        VARCHAR nmTipoAparelho[100];
    EXEC SQL END DECLARE SECTION;

    EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
    EXEC SQL WHENEVER NOT FOUND DO break;

    try
    {
        EXEC SQL DECLARE crsTipoAparelho CURSOR FOR
        SELECT
            IDTIPOAPARELHO ,
            DSTIPOAPARELHO 
        FROM
            APOIO.TIPOAPARELHO
        ORDER BY 
            DSTIPOAPARELHO;
           
        EXEC SQL OPEN crsTipoAparelho;
    
        for(;;) 
        {
            EXEC SQL FETCH crsTipoAparelho INTO :idTipoAparelho,:nmTipoAparelho;
            endOraStr(nmTipoAparelho);
            xml->createTag("tns:itemListaVO");
            xml->addItem("id",idTipoAparelho);
            xml->addItem("descricao",(char *)nmTipoAparelho.arr);
            xml->closeTag();
        }
        EXEC SQL CLOSE crsTipoAparelho;
    }
    catch(...)
    {
        throw;
    }
  
  return 1;
}
