//
// $Id: sel_migracao.pcpp,v 1.1 2009/07/31 15:33:35 a5110702 Exp $
//

#include "../../negocio/fidutil/include/retencao.hpp"

int sel_migracao(int usuario, DOMNode*dnode, XMLGen*xml)
{
  char parm[255];
  int  whFlag;
  double vBonus=0;
  char  nmValorBonus[15]={"\0"};
  int	iTipoPessoa=0;
  	
  EXEC SQL BEGIN DECLARE SECTION;
  int     idMatrizBonus;
  VARCHAR nmBonus[255];
  int     vlBonus;
  int     qtDiasValidade;
  int     idUfOperadora;
  VARCHAR nmUf[255];
  VARCHAR whClause[255];
  int	  idTipoPessoa;
  VARCHAR dsTipoPessoa[255];
  VARCHAR sgTipoPessoa[3];
  EXEC SQL END DECLARE SECTION;
  EXEC SQL WHENEVER SQLERROR DO sql_error(NULL);
  

  try
  {
    //  Obtendo dados do xml
    get_tag(parm,dnode,"idUfOperadora",0,0);
    idUfOperadora = atoi(parm);

    get_tag(parm,dnode,"nmBonus",0,0);

    sprintf((char *)whClause.arr,"%%%s%%",parm);
    whClause.len = strlen(parm) + 2;
    whFlag = (parm[0] != '*'); // if (existe texto) -> 1 else 0


	iTipoPessoa=get_tag(parm,dnode,"idTipoPessoa",0,-1);
	//Não veio a Tag idTipoPessoa
		if(iTipoPessoa==-1)
			{
				get_tag(parm,dnode,"sgTipoPessoa",0,0);
				strToOra(sgTipoPessoa,parm);

				EXEC SQL
					SELECT IDTIPOPESSOA,DSTIPOPESSOA
					INTO :idTipoPessoa,dsTipoPessoa
					FROM APOIO.TIPOPESSOA
					WHERE SGTIPOPESSOA=:sgTipoPessoa;
			}
		else
		{
			idTipoPessoa = atoi(parm);
				EXEC SQL
					SELECT DSTIPOPESSOA
					INTO :dsTipoPessoa
					FROM APOIO.TIPOPESSOA
					WHERE IDTIPOPESSOA=:idTipoPessoa;
		}
	
	ULOG_INT(idTipoPessoa);
	endOraStr(dsTipoPessoa);
 
    // Definicao dos cursores

    // nmBonus=0
	EXEC SQL WHENEVER NOT FOUND DO break;
    EXEC SQL DECLARE crsBns CURSOR FOR
       SELECT  MATRIZBONUS.idmatrizbonus,
      MATRIZBONUS.nmBonus,
	  MATRIZBONUS.vlBonus,
      MATRIZBONUS.qtDiasValidade,
      MATRIZBONUS.idUfOperadora,
      UF.nmUf
	  FROM	RETENCAO.MATRIZBONUS MATRIZBONUS,
	  		CUSTOMER.UFOPERADORA UFOPERADORA,
			APOIO.UF			 UF
	  WHERE	MATRIZBONUS.inativo != 0
	  AND 	MATRIZBONUS.IDUFOPERADORA=UFOPERADORA.IDUFOPERADORA
	  AND	UF.IDUF	= UFOPERADORA.IDUF
      AND	MATRIZBONUS.idUfOperadora = :idUfOperadora
      AND   MATRIZBONUS.inMigracaoPosPre=1
	  AND   MATRIZBONUS.IDTIPOPESSOA=:idTipoPessoa
      ORDER BY MATRIZBONUS.nmBonus;
   
    // nmBonus=1
    EXEC SQL DECLARE crsBnsTxt CURSOR FOR
     SELECT  MATRIZBONUS.idmatrizbonus,
      MATRIZBONUS.nmBonus,
	  MATRIZBONUS.vlBonus,
      MATRIZBONUS.qtDiasValidade,
      MATRIZBONUS.idUfOperadora,
      UF.nmUf
	  FROM	RETENCAO.MATRIZBONUS MATRIZBONUS,
	  		CUSTOMER.UFOPERADORA UFOPERADORA,
			APOIO.UF			 UF
	  WHERE	MATRIZBONUS.inativo != 0
	  AND 	MATRIZBONUS.IDUFOPERADORA=UFOPERADORA.IDUFOPERADORA
	  AND	UF.IDUF	= UFOPERADORA.IDUF
      AND	MATRIZBONUS.idUfOperadora = :idUfOperadora
      AND   MATRIZBONUS.inMigracaoPosPre=1
	  AND   MATRIZBONUS.IDTIPOPESSOA=:idTipoPessoa
      and    upper(nmBonus) like upper(:whClause)
	  ORDER BY MATRIZBONUS.nmBonus;

    ULOG("---- cursor : [%d] \n",whFlag);
    switch(whFlag)
	{
		case 0: EXEC SQL OPEN crsBns; 
		break;
		case 1: EXEC SQL OPEN crsBnsTxt; 
		break;
    }

    xml->createTag("tns:listaMigracaoVO");
    xml->addProp("xmlns:tns","fidelizacao.fo.vivo.com.br/vo");
    xml->addProp("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
    
	for(;;) //form infinito
	{
      if (whFlag == 0)
	  {
			EXEC SQL FETCH crsBns into 
							:idMatrizBonus,
							:nmBonus,
							:vlBonus,
							:qtDiasValidade,
							:idUfOperadora,
							:nmUf;
      }
	  else if (whFlag == 1)
		{
				EXEC SQL FETCH crsBnsTxt into :idMatrizBonus,
											  :nmBonus,
											  :vlBonus,
											  :qtDiasValidade,
											  :idUfOperadora,
											  :nmUf;
		}
      endOraStr(nmBonus);
      endOraStr(nmUf);
      xml->createTag("tns:migracaoVO");
      xml->addItem("idRegional",idUfOperadora);
      xml->addItem("dsRegional",(char *)nmUf.arr);

     vBonus=vlBonus;



vBonus=vBonus/100;	  		 
	  sprintf(nmValorBonus,"%6.2f",vBonus);
	  	   
	  xml->addItem("vlBonus",(char *)nmValorBonus);


      xml->addItem("idMigracao",idMatrizBonus);
      xml->addItem("descricao",(char *)nmBonus.arr);
      xml->addItem("validade",qtDiasValidade);
	  xml->addItem("idTipoPessoa",idTipoPessoa);
	  xml->addItem("dsTipoPessoa",(char*)dsTipoPessoa.arr);
      xml->closeTag();

    }//fim do for infinito

    xml->closeTag();

    switch(whFlag)
	{
		case 0: EXEC SQL CLOSE crsBns;
		break;
		case 1: EXEC SQL CLOSE crsBnsTxt;
		break;
    }
  }
  catch(...)
  {
	throw;
  }

  return 1;
}

