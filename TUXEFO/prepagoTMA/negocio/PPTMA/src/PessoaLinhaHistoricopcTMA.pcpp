#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>

#include "tuxfw.h"
#include "PessoaLinhaHistoricopcTMA.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "PPGlobalTMA.h"
EXEC SQL END DECLARE SECTION;

/******************************************************************************************/
void CPessoaLinhaHistoricopc::proCInserePessoaLinhaHistorico(TPessoaLinhaHistorico* ptPessoaLinhaHistorico)
{
    ULOG_START("CPessoaLinhaHistoricopc::proCInserePessoaLinhaHistorico");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdPessoaLinhaHistorico[LEN_IDPESSOALINHAHISTORICO];
        VARCHAR oszDtRelacionamento[LEN_DTRELACIONAMENTO];
        VARCHAR oszCdAreaRegistro[LEN_CDAREAREGISTRO];
        VARCHAR oszNrLinha[LEN_NRLINHA];
        VARCHAR oszIdTipoRelacionamento[LEN_IDTIPORELACIONAMENTO];
        VARCHAR oszIdPessoaDePara[LEN_IDPESSOADEPARA];
        VARCHAR oszIdLinhaTelefonica[LEN_IDLINHATELEFONICA];
        VARCHAR oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAO];
    EXEC SQL END DECLARE SECTION;

    struct sqlca sqlca;

    STRCPY_TO_ORA(oszDtRelacionamento, ptPessoaLinhaHistorico->szDtRelacionamento);
    STRCPY_TO_ORA(oszCdAreaRegistro, ptPessoaLinhaHistorico->szCdAreaRegistro);
    STRCPY_TO_ORA(oszNrLinha, ptPessoaLinhaHistorico->szNrLinha);
    STRCPY_TO_ORA(oszIdTipoRelacionamento, ptPessoaLinhaHistorico->szIdTipoRelacionamento);
    STRCPY_TO_ORA(oszIdPessoaDePara, ptPessoaLinhaHistorico->szIdPessoaDePara);
    STRCPY_TO_ORA(oszIdLinhaTelefonica, ptPessoaLinhaHistorico->szIdLinhaTelefonica);
    STRCPY_TO_ORA(oszIdUsuarioAlteracao, ptPessoaLinhaHistorico->szIdUsuarioAlteracao);

    EXEC SQL WHENEVER SQLERROR goto erro;

    EXEC SQL SELECT customer.pessoalinhahistoricosq.nextval INTO :oszIdPessoaLinhaHistorico FROM DUAL;

    STRCPY_FROM_ORA(ptPessoaLinhaHistorico->szIdPessoaLinhaHistorico, oszIdPessoaLinhaHistorico);

    EXEC SQL INSERT INTO Customer.PessoaLinhaHistorico
                       ( idpessoalinhahistorico
                       , dtrelacionamento
                       , cdarearegistro
                       , nrlinha
                       , idtiporelacionamento
                       , idpessoadepara
                       , idlinhatelefonica
                       , idusuarioalteracao
                       , dtultimaalteracao )
                VALUES ( TO_NUMBER(:oszIdPessoaLinhaHistorico)
                       , TO_DATE(:oszDtRelacionamento, 'YYYYMMDDHH24MISS')
                       , TO_NUMBER(:oszCdAreaRegistro)
                       , TO_NUMBER(:oszNrLinha)
                       , TO_NUMBER(:oszIdTipoRelacionamento)
                       , TO_NUMBER(:oszIdPessoaDePara)
                       , TO_NUMBER(:oszIdLinhaTelefonica)
                       , TO_NUMBER(:oszIdUsuarioAlteracao)
                       , SYSDATE );

    ULOGI("Finalizando proCInserePessoaLinhaHistorico <OK>");
    ULOG_END("CPessoaLinhaHistoricopc::proCInserePessoaLinhaHistorico");
    return;

    erro:
        ULOGE("Finalizando proCInserePessoaLinhaHistorico <ERROR>");
        throw new TuxBasicOraException(sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);
}
