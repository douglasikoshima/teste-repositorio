#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>

#include "tuxfw.h"
#include "SistemaOrigempcTMA.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "PPGlobalTMA.h"
EXEC SQL END DECLARE SECTION;

/****************************************************************************************/
bool CSistemaOrigempc::proCBuscaSistemaOrigem(TSistemaOrigem *ptSistemaOrigem)
{
    ULOG_START("CSistemaOrigempc::proCBuscaSistemaOrigem");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR oszIdSistemaOrigem[LEN_IDSISTEMAORIGEM];
        VARCHAR oszSgSistemaOrigem[LEN_SGSISTEMAORIGEM];
        VARCHAR oszNmSistemaOrigem[LEN_NMSISTEMAORIGEM];
        VARCHAR oszIndisponivel[LEN_INDISPONIVEL];

        short iIdSistemaOrigem = 0;
        short iSgSistemaOrigem = 0;
        short iNmSistemaOrigem = 0;
        short iIndisponivel = 0;
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	/* atribuicao de valores para as variaveis proc */
	STRCPY_TO_ORA(oszSgSistemaOrigem, ptSistemaOrigem->szSgSistemaOrigem);

	EXEC SQL WHENEVER SQLERROR	goto erro;
	EXEC SQL WHENEVER NOT FOUND goto naoexiste;

	EXEC SQL SELECT
            idsistemaorigem,
            sgsistemaorigem,
            nmsistemaorigem,
            indisponivel
	INTO    :oszIdSistemaOrigem:iIdSistemaOrigem,
            :oszSgSistemaOrigem:iSgSistemaOrigem,
            :oszNmSistemaOrigem:iNmSistemaOrigem,
            :oszIndisponivel:iIndisponivel
	FROM     apoio.sistemaorigem
	WHERE    sgsistemaorigem = :oszSgSistemaOrigem;

    if(iIdSistemaOrigem != -1) {
        STRCPY_FROM_ORA(ptSistemaOrigem->szIdSistemaOrigem, oszIdSistemaOrigem);
    }
    if(iSgSistemaOrigem != -1) {
        STRCPY_FROM_ORA(ptSistemaOrigem->szSgSistemaOrigem, oszSgSistemaOrigem);
    }
    if(iNmSistemaOrigem != -1) {
        STRCPY_FROM_ORA(ptSistemaOrigem->szNmSistemaOrigem, oszNmSistemaOrigem);
    }
    if(iIndisponivel != -1) {
        STRCPY_FROM_ORA(ptSistemaOrigem->szIndisponivel, oszIndisponivel);
    }


    ULOGI("Finalizando proCBuscaSistemaOrigem <OK>");
    ULOG_END("CSistemaOrigempc::proCBuscaSistemaOrigem");
    return true;

    naoexiste:
        ULOGI("Finalizando proCBuscaSistemaOrigem <NOT FOUND>");
        ULOG_END("CSistemaOrigempc::proCBuscaSistemaOrigem");
        return false;

    erro:
        ULOGE("Finalizando proCBuscaSistemaOrigem <ERROR>");
        throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
