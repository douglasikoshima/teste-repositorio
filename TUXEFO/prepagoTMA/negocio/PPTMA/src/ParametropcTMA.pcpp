#undef SQLCA
#define SQLCA_NONE
#include<sqlca.h>

#include "tuxfw.h"
#include "ParametropcTMA.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "PPGlobalTMA.h"
EXEC SQL END DECLARE SECTION;

/****************************************************************************************/
bool CParametropc::proCBuscaParametro(TParametro *ptParametro)
{
    ULOG_START("CParametropc::proCBuscaParametro");

    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR  oszIdParametro[LEN_IDPARAMETRO];
        VARCHAR  oszCdParametro[LEN_CDPARAMETRO];
        VARCHAR  oszDsParametro[LEN_DSPARAMETRO];
        VARCHAR  oszDsValorParametro[LEN_DSVALORPARAMETRO];
        VARCHAR  oszIdUsuarioAlteracao[LEN_IDUSUARIOALTERACAO];
        VARCHAR  oszDtUltimaAlteracao[LEN_DTULTIMAALTERACAO];

        short    iIdParametro = 0;
        short    iCdParametro = 0;
        short    iDsParametro = 0;
        short    iDsValorParametro = 0;
        short    iIdUsuarioAlteracao = 0;
        short    iDtUltimaAlteracao = 0;
    EXEC SQL END DECLARE SECTION;

	struct sqlca sqlca;

	STRCPY_TO_ORA(oszCdParametro, ptParametro->szCdParametro);

	EXEC SQL WHENEVER SQLERROR	goto erro;
	EXEC SQL WHENEVER NOT FOUND goto naoexiste;

	EXEC SQL SELECT idparametro
                  , cdparametro
                  , dsparametro
                  , dsvalorparametro
                  , idusuarioalteracao
                  , dtultimaalteracao
               INTO :oszIdParametro:iIdParametro
                  , :oszCdParametro:iCdParametro
                  , :oszDsParametro:iDsParametro
                  , :oszDsValorParametro:iDsValorParametro
                  , :oszIdUsuarioAlteracao:iIdUsuarioAlteracao
                  , :oszDtUltimaAlteracao:iDtUltimaAlteracao
               FROM apoio.parametro
              WHERE cdparametro = :oszCdParametro;

    if(iIdParametro != -1) {
        STRCPY_FROM_ORA(ptParametro->szIdParametro, oszIdParametro);
    }
    if(iCdParametro != -1) {
        STRCPY_FROM_ORA(ptParametro->szCdParametro, oszCdParametro);
    }
    if(iDsParametro != -1) {
        STRCPY_FROM_ORA(ptParametro->szDsParametro, oszDsParametro);
    }
    if(iDsValorParametro != -1) {
        STRCPY_FROM_ORA(ptParametro->szDsValorParametro, oszDsValorParametro);
    }
    if(iIdUsuarioAlteracao != -1) {
        STRCPY_FROM_ORA(ptParametro->szIdUsuarioAlteracao, oszIdUsuarioAlteracao);
    }
    if(iDtUltimaAlteracao != -1) {
        STRCPY_FROM_ORA(ptParametro->szDtUltimaAlteracao, oszDtUltimaAlteracao);
    }

    ULOGI("Finalizando proCBuscaParametro <OK>");
    ULOG_END("CParametropc::proCBuscaParametro");
    return true;

    naoexiste:
        ULOGI("Finalizando proCBuscaParametro <NOT FOUND>");
        ULOG_END("CParametropc::proCBuscaParametro");
        return false;

    erro:
        ULOGE("Finalizando proCBuscaParametro <ERROR>");
        throw new TuxBasicOraException(sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc, sqlca.sqlerrm.sqlerrml);
}
