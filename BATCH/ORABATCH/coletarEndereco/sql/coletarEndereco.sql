/*#########################################################
#  BATCH......: coletarEndereco
#  Criado por.: Denis Hideki 10/02/2016
#  Funcional..: Loiana Moura
###########################################################*/
SET SQLPROMPT '';
SET TERMOUT OFF;
SET FEEDBACK OFF;
SET ECHO OFF;
SET AUTOTRACE OFF;
SET FLUSH ON;
SET HEADING OFF;
SET SERVEROUTPUT ON SIZE UNLIMITED;
SET TIME OFF;
SET TIMING OFF;
SET TRIMOUT ON;
SET TRIMSPOOL ON;
SET PAUSE OFF;
SET SHOWMODE OFF;
SET SQLBLANKLINES OFF;
SET SQLNUMBER OFF;
SET TAB OFF;
SET VERIFY OFF;
SET WRAP OFF;
SET FEED OFF;
SET NEWPAGE NONE;
SET LINESIZE 32767;
SPOOL &1;
WHENEVER OSERROR EXIT 9
WHENEVER SQLERROR EXIT SQL.SQLCODE
ALTER SESSION SET COMMIT_LOGGING = 'IMMEDIATE'
ALTER SESSION SET COMMIT_WAIT = NOWAIT


DECLARE

	V_DT_ULTIMA_EXECUCAO	DATE;
  V_ID_PARAMETRO        NUMBER;
  V_COUNT               NUMBER;

  TYPE T_COLETARENDERECO IS RECORD
    (
    COD_REL_CEP_LOGRAD_BAIRRO ADM_PROJECT.ATUALIZA_ENDERECO.COD_REL_CEP_LOGRAD_BAIRRO%TYPE,
    NUM_CEP           ADM_PROJECT.ATUALIZA_ENDERECO.NUM_CEP%TYPE,
    DSC_TIPO_LOGRAD       ADM_PROJECT.ATUALIZA_ENDERECO.DSC_TIPO_LOGRAD%TYPE,
    DSC_TITULO_LOGRAD     ADM_PROJECT.ATUALIZA_ENDERECO.DSC_TITULO_LOGRAD%TYPE,
    NOM_LOGRADOURO        ADM_PROJECT.ATUALIZA_ENDERECO.NOM_LOGRADOURO%TYPE,
    NOM_BAIRRO          ADM_PROJECT.ATUALIZA_ENDERECO.NOM_BAIRRO%TYPE,
    DSC_LOCALIDADE        ADM_PROJECT.ATUALIZA_ENDERECO.DSC_LOCALIDADE%TYPE,
    SGL_UF            ADM_PROJECT.ATUALIZA_ENDERECO.SGL_UF%TYPE,
    NOM_UF            ADM_PROJECT.ATUALIZA_ENDERECO.NOM_UF%TYPE,
    NUM_INICIAL         ADM_PROJECT.ATUALIZA_ENDERECO.NUM_INICIAL%TYPE,
    NUM_FINAL         ADM_PROJECT.ATUALIZA_ENDERECO.NUM_FINAL%TYPE,
    COD_LADO          ADM_PROJECT.ATUALIZA_ENDERECO.COD_LADO%TYPE,
    DSC_LADO          ADM_PROJECT.ATUALIZA_ENDERECO.DSC_LADO%TYPE,
    SGL_PAIS          ADM_PROJECT.ATUALIZA_ENDERECO.SGL_PAIS%TYPE,
    NOM_PAIS          ADM_PROJECT.ATUALIZA_ENDERECO.NOM_PAIS%TYPE,
    COD_NAC_LOCALIDADE      ADM_PROJECT.ATUALIZA_ENDERECO.COD_NAC_LOCALIDADE%TYPE,
    COD_IBGE          ADM_PROJECT.ATUALIZA_ENDERECO.COD_IBGE%TYPE,
    SGL_AREA_LOCAL        ADM_PROJECT.ATUALIZA_ENDERECO.SGL_AREA_LOCAL%TYPE,
    IN_AREA_RISCO         ADM_PROJECT.ATUALIZA_ENDERECO.IN_AREA_RISCO%TYPE,
    IN_AREA_CONCESSAO       ADM_PROJECT.ATUALIZA_ENDERECO.IN_AREA_CONCESSAO%TYPE,
    IN_AREA_RURAL         ADM_PROJECT.ATUALIZA_ENDERECO.IN_AREA_RURAL%TYPE
    );
  
  TYPE TB_COLETARENDERECO IS TABLE OF T_COLETARENDERECO INDEX BY BINARY_INTEGER;
  V_COLETARENDERECO TB_COLETARENDERECO;

  
  CURSOR CMP IS
  SELECT REL.COD_REL_CEP_LOGRAD_BAIRRO
      ,  CEP.NUM_CEP
      ,  TPLOG.DSC_TIPO_LOGRAD
      ,  TTLOG.DSC_TITULO_LOGRAD
      ,  LOGRAD.NOM_LOGRADOURO
      ,  BAR.NOM_BAIRRO
      ,  LOC.DSC_LOCALIDADE
      ,  UF.SGL_UF
      ,  UF.NOM_UF
      ,  REL.NUM_INIC AS NUM_INICIAL
      ,  REL.NUM_FINAL
      ,  REL.IND_LADO_NUMERACAO AS COD_LADO
      ,  DECODE(REL.IND_LADO_NUMERACAO, 1, 'IMPAR', 2, 'PAR', 0, 'AMBOS') AS DSC_LADO
      ,  PAIS.SGL_ISO_PAIS AS SGL_PAIS
      ,  PAIS.NOM_PAIS
      ,  LOC.NUM_COD_NAC_LOCALIDADE AS COD_NAC_LOCALIDADE
      ,  LOC.NUM_COD_IBGE AS COD_IBGE
      ,  LOC.AREA_LOCAL AS SGL_AREA_LOCAL
      ,  REL.INAREARISCO AS IN_AREA_RISCO
      ,  LOC.INAREACONCESSAO AS IN_AREA_CONCESSAO
      ,  CEP.INAREARURAL AS IN_AREA_RURAL
          FROM ADM_PROJECT.CEP CEP, 
               ADM_PROJECT.LOGRADOURO LOGRAD,
               ADM_PROJECT.BAIRRO BAR,
               ADM_PROJECT.LOCALIDADE LOC,
               ADM_PROJECT.UNIDADE_FEDERACAO UF,
               ADM_PROJECT.PAIS PAIS,
               ADM_PROJECT.TIPO_LOGRADOURO TPLOG,
               ADM_PROJECT.TITULO_LOGRADOURO TTLOG,
               ADM_PROJECT.REL_CEP_LOGRAD_BAIRRO REL
          WHERE  REL.COD_CEP = CEP.COD_CEP
              AND REL.COD_LOGRADOURO = LOGRAD.COD_LOGRADOURO
              AND REL.COD_BAIRRO = BAR.COD_BAIRRO
              AND LOGRAD.COD_LOCALIDADE = LOC.COD_LOCALIDADE
              AND LOC.COD_UF = UF.COD_UF
              AND UF.COD_PAIS = PAIS.COD_PAIS
              AND LOGRAD.COD_TIPO_LOGRAD = TPLOG.COD_TIPO_LOGRAD(+)
              AND LOGRAD.COD_TITULO_LOGRAD = TTLOG.COD_TITULO_LOGRAD(+)
              AND (CEP.DAT_ATUALIZACAO > V_DT_ULTIMA_EXECUCAO
                   OR LOGRAD.DAT_ATUALIZACAO > V_DT_ULTIMA_EXECUCAO
                   OR BAR.DAT_ATUALIZACAO > V_DT_ULTIMA_EXECUCAO
                   OR LOC.DAT_ATUALIZACAO > V_DT_ULTIMA_EXECUCAO
                   OR UF.DAT_ATUALIZACAO > V_DT_ULTIMA_EXECUCAO
                   OR PAIS.DAT_ATUALIZACAO > V_DT_ULTIMA_EXECUCAO
                   OR TPLOG.DAT_ATUALIZACAO > V_DT_ULTIMA_EXECUCAO
                   OR TTLOG.DAT_ATUALIZACAO > V_DT_ULTIMA_EXECUCAO
                   OR REL.DAT_ATUALIZACAO > V_DT_ULTIMA_EXECUCAO);

  V_LIMITE NUMBER := 5000; 
  V_DONE BOOLEAN;


BEGIN
	
	DBMS_OUTPUT.PUT_LINE(CHR(10)||'INICIO PROCESSO COLETAR ENDERECO ' ||TO_CHAR(SYSDATE,'DD/MM/RRRR HH24:MI:SS'));

  DBMS_OUTPUT.PUT_LINE('INSERT NA ENTIDADE HISTORICO_ENDERECO_ALT');
  INSERT INTO ADM_PROJECT.HISTORICO_ENDERECO_ALT 
  (ID_ARQUIVO,
   NOM_ARQUIVO,
   DT_EXECUCAO,
   STATUS)
  VALUES
  (ADM_PROJECT.SEQ_HISTORICO_01.NEXTVAL,
   NULL,
   SYSDATE,
   0);

  DBMS_OUTPUT.PUT_LINE('INSERT NA ENTIDADE APOIO_PARAMETRO');
  SELECT COUNT(1)
    INTO V_COUNT
    FROM ADM_PROJECT.APOIO_PARAMETRO;

  IF (V_COUNT = 0) THEN
    INSERT INTO ADM_PROJECT.APOIO_PARAMETRO
    (
     ID_PARAMETRO,
     DS_PARAMETRO,
     SIGLA,
     DT_ULTIMA_EXECUCAO,
     USUARIO
    )
    VALUES
    (
     ADM_PROJECT.SEQ_APOIOPARAMETRO_01.NEXTVAL,
     'PROCESSAR ENDERECO',
     'PE',
     SYSDATE,
     '1'
    );

    COMMIT;
  END IF;


	DBMS_OUTPUT.PUT_LINE('SELECT DT_ULTIMA_EXECUCAO - APOIO_PARAMETRO');
	SELECT DT_ULTIMA_EXECUCAO
         INTO V_DT_ULTIMA_EXECUCAO
         FROM(SELECT DT_ULTIMA_EXECUCAO
                FROM ADM_PROJECT.APOIO_PARAMETRO
                ORDER BY ID_PARAMETRO DESC
              )
    WHERE ROWNUM <= 1;  
    DBMS_OUTPUT.PUT_LINE('V_DT_ULTIMA_EXECUCAO: ' || V_DT_ULTIMA_EXECUCAO);


    DBMS_OUTPUT.PUT_LINE('INICIO INSERT/UPDATE COLETAR ENDERECO LISTA');
    OPEN CMP;
      LOOP
      FETCH CMP BULK COLLECT INTO V_COLETARENDERECO LIMIT V_LIMITE;   
          V_DONE := CMP%NOTFOUND;        
          FORALL VAR IN 1 .. V_COLETARENDERECO.COUNT
          MERGE INTO ADM_PROJECT.ATUALIZA_ENDERECO AE
                USING (SELECT V_COLETARENDERECO(VAR).COD_REL_CEP_LOGRAD_BAIRRO AS COD_REL_CEP_LOGRAD_BAIRRO,
                              V_COLETARENDERECO(VAR).NUM_CEP AS NUM_CEP,
                              V_COLETARENDERECO(VAR).DSC_TIPO_LOGRAD AS DSC_TIPO_LOGRAD,
                              V_COLETARENDERECO(VAR).DSC_TITULO_LOGRAD AS DSC_TITULO_LOGRAD,
                              V_COLETARENDERECO(VAR).NOM_LOGRADOURO AS NOM_LOGRADOURO,
                              V_COLETARENDERECO(VAR).NOM_BAIRRO AS NOM_BAIRRO,
                              V_COLETARENDERECO(VAR).DSC_LOCALIDADE AS DSC_LOCALIDADE,
                              V_COLETARENDERECO(VAR).SGL_UF AS SGL_UF,
                              V_COLETARENDERECO(VAR).NOM_UF AS NOM_UF,
                              V_COLETARENDERECO(VAR).NUM_INICIAL AS NUM_INICIAL,
                              V_COLETARENDERECO(VAR).NUM_FINAL AS NUM_FINAL,
                              V_COLETARENDERECO(VAR).COD_LADO AS COD_LADO, 
                              V_COLETARENDERECO(VAR).DSC_LADO AS DSC_LADO,
                              V_COLETARENDERECO(VAR).SGL_PAIS AS SGL_PAIS,
                              V_COLETARENDERECO(VAR).NOM_PAIS AS NOM_PAIS,
                              V_COLETARENDERECO(VAR).COD_NAC_LOCALIDADE AS COD_NAC_LOCALIDADE,
                              V_COLETARENDERECO(VAR).COD_IBGE AS COD_IBGE,
                              V_COLETARENDERECO(VAR).SGL_AREA_LOCAL AS SGL_AREA_LOCAL,
                              V_COLETARENDERECO(VAR).IN_AREA_RISCO AS IN_AREA_RISCO,
                              V_COLETARENDERECO(VAR).IN_AREA_CONCESSAO AS IN_AREA_CONCESSAO,
                              V_COLETARENDERECO(VAR).IN_AREA_RURAL AS IN_AREA_RURAL   
                            FROM DUAL) AEM
                  ON (AE.COD_REL_CEP_LOGRAD_BAIRRO = AEM.COD_REL_CEP_LOGRAD_BAIRRO)
          WHEN MATCHED THEN
              UPDATE SET AE.ID_ARQUIVO = NULL,
                        AE.NUM_CEP = AEM.NUM_CEP,
                        AE.DSC_TIPO_LOGRAD = AEM.DSC_TIPO_LOGRAD,
                        AE.DSC_TITULO_LOGRAD = AEM.DSC_TITULO_LOGRAD,
                        AE.NOM_LOGRADOURO = AEM.NOM_LOGRADOURO,
                        AE.NOM_BAIRRO = AEM.NOM_BAIRRO,
                        AE.DSC_LOCALIDADE = AEM.DSC_LOCALIDADE,
                        AE.SGL_UF = AEM.SGL_UF,
                        AE.NOM_UF = AEM.NOM_UF,
                        AE.NUM_INICIAL = AEM.NUM_INICIAL,
                        AE.NUM_FINAL = AEM.NUM_FINAL,
                        AE.COD_LADO = AEM.COD_LADO,
                        AE.DSC_LADO = AEM.DSC_LADO,
                        AE.SGL_PAIS = AEM.SGL_PAIS,
                        AE.NOM_PAIS = AEM.NOM_PAIS,
                        AE.COD_NAC_LOCALIDADE = AEM.COD_NAC_LOCALIDADE,
                        AE.COD_IBGE = AEM.COD_IBGE,
                        AE.SGL_AREA_LOCAL = AEM.SGL_AREA_LOCAL,
                        AE.IN_AREA_RISCO = AEM.IN_AREA_RISCO,
                        AE.IN_AREA_CONCESSAO = AEM.IN_AREA_CONCESSAO,
                        AE.IN_AREA_RURAL = AEM.IN_AREA_RURAL,
                        AE.STATUS = 0,
                        AE.DAT_ATUALIZACAO = SYSDATE
            WHEN NOT MATCHED THEN
              INSERT 
              (
                COD_REL_CEP_LOGRAD_BAIRRO,
                ID_ARQUIVO,
                NUM_CEP,
                DSC_TIPO_LOGRAD,
                DSC_TITULO_LOGRAD,
                NOM_LOGRADOURO,
                NOM_BAIRRO,
                DSC_LOCALIDADE,
                SGL_UF,
                NOM_UF,
                NUM_INICIAL,
                NUM_FINAL,
                COD_LADO,
                DSC_LADO,
                SGL_PAIS,
                NOM_PAIS,
                COD_NAC_LOCALIDADE,
                COD_IBGE,
                SGL_AREA_LOCAL,
                IN_AREA_RISCO,
                IN_AREA_CONCESSAO,
                IN_AREA_RURAL,
                STATUS,
                DAT_ATUALIZACAO
               ) 
              VALUES
              (
               AEM.COD_REL_CEP_LOGRAD_BAIRRO,
               NULL,
               AEM.NUM_CEP,
               AEM.DSC_TIPO_LOGRAD,
               AEM.DSC_TITULO_LOGRAD,
               AEM.NOM_LOGRADOURO,
               AEM.NOM_BAIRRO,
               AEM.DSC_LOCALIDADE,
               AEM.SGL_UF,
               AEM.NOM_UF,
               AEM.NUM_INICIAL,
               AEM.NUM_FINAL,
               AEM.COD_LADO,
               AEM.DSC_LADO,
               AEM.SGL_PAIS,
               AEM.NOM_PAIS,
               AEM.COD_NAC_LOCALIDADE,
               AEM.COD_IBGE,
               AEM.SGL_AREA_LOCAL,
               AEM.IN_AREA_RISCO,
               AEM.IN_AREA_CONCESSAO,
               AEM.IN_AREA_RURAL,
               0,
               SYSDATE
              );
        
          COMMIT;
          EXIT WHEN (V_DONE); 

      END LOOP; 
                
      CLOSE CMP;
        COMMIT;

  DBMS_OUTPUT.PUT_LINE('FIM INSERT/UPDATE COLETAR ENDERECO LISTA');



        /*UPDATE TABELA APOIO_PARAMETRO*/
        DBMS_OUTPUT.PUT_LINE('UPDATE APOIO_PARAMETRO');
        SELECT ID_PARAMETRO
          INTO V_ID_PARAMETRO
          FROM ADM_PROJECT.APOIO_PARAMETRO
          WHERE ID_PARAMETRO = (SELECT MAX(ID_PARAMETRO)
                                  FROM ADM_PROJECT.APOIO_PARAMETRO);


        /*ATUALIZA A DATA DA ULTIMA EXECUCAO*/
        UPDATE ADM_PROJECT.APOIO_PARAMETRO
          SET DT_ULTIMA_EXECUCAO = SYSDATE
          WHERE ID_PARAMETRO = V_ID_PARAMETRO;

        COMMIT;

    DBMS_OUTPUT.PUT_LINE(CHR(10)||'FIM PROCESSO COLETAR ENDERECO ' ||TO_CHAR(SYSDATE,'DD/MM/RRRR HH24:MI:SS'));

END;
/
SPOOL OFF
SET ECHO OFF
SET TIMI OFF
SET TIME OFF
EXIT