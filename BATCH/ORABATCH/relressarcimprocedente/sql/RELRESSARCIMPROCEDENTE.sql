/***********************************************************
  BATCH......: relressarcimprocedente
  Criado por.: Eder Jani Martins (06/05/2015)
  Funcional..: Erika Brum
***********************************************************/
SET SQLPROMPT '';
SET TERMOUT OFF;
SET FEEDBACK OFF;
SET ECHO OFF;
SET AUTOTRACE OFF;
SET FLUSH ON;
SET HEADING OFF;
SET SERVEROUTPUT ON SIZE UNLIMITED;
SET TIME OFF;
SET TIMING OFF;
SET TRIMOUT ON;
SET TRIMSPOOL ON;
SET PAUSE OFF;
SET SHOWMODE OFF;
SET SQLBLANKLINES OFF;
SET SQLNUMBER OFF;
SET TAB OFF;
SET VERIFY OFF;
SET WRAP OFF;
SET FEED OFF;
SET NEWPAGE NONE;
SET LINESIZE 32767;
SPOOL &1;

WHENEVER OSERROR EXIT 9
WHENEVER SQLERROR EXIT SQL.SQLCODE

ALTER SESSION SET COMMIT_LOGGING = 'IMMEDIATE'
ALTER SESSION SET COMMIT_WAIT = NOWAIT

DECLARE
    V_LINHA    VARCHAR2(2000);
    V_ROWCOUNT NUMBER;

	TYPE R_PEDIDORESSARCIMENTO IS RECORD 
    (
        V_IDPEDIDORESSARCIMENTO LOAD.PEDIDORESSARCIMENTO.IDPEDIDORESSARCIMENTO%TYPE     
      , V_NRTELEFONE            LOAD.PEDIDORESSARCIMENTO.NRTELEFONE%TYPE
      , V_DTULTIMAALTERACAO     LOAD.PEDIDORESSARCIMENTO.DTULTIMAALTERACAO%TYPE              
    ); 
    
    TYPE TP_PEDIDORESSARCIMENTO IS TABLE OF R_PEDIDORESSARCIMENTO;
    V_PEDIDORESSARCIMENTO TP_PEDIDORESSARCIMENTO;

    CURSOR CURSOR_IMPROCEDENTE IS 
    SELECT LPR.IDPEDIDORESSARCIMENTO || ', '||
           LPR.NRTELEFONE            || ', '||
           LPR.DTINICIOINTERRUPCAO   || ', '||
           LPR.DTFIMINTERRUPCAO      || ', '||
           LPR.SGUF                  || ', '||
           LPR.NMMUNICIPIO           || ', '||
           LPR.DSTIPORESSARCIMENTO   || ', '||
           LPR.DSTIPOREDE AS LINHA
      FROM LOAD.PEDIDORESSARCIMENTO LPR
     WHERE NOT EXISTS ( SELECT 1 
                          FROM ATENDIMENTO.PEDIDORESSARCIMENTO APR
                         WHERE APR.IDPEDIDORESSARCIMENTO = LPR.IDPEDIDORESSARCIMENTO
                           AND APR.CDAREAREGISTRO = SUBSTR(LPR.NRTELEFONE, 1, 2)
                           AND APR.NRLINHA        = SUBSTR(LPR.NRTELEFONE, 3) );


BEGIN

    V_LINHA := NULL;

    DBMS_OUTPUT.ENABLE (buffer_size => NULL);
    SELECT LPR.IDPEDIDORESSARCIMENTO
         , LPR.NRTELEFONE
         , LPR.DTULTIMAALTERACAO       
      BULK COLLECT INTO V_PEDIDORESSARCIMENTO 
      FROM LOAD.PEDIDORESSARCIMENTO LPR
         , ATENDIMENTO.PEDIDORESSARCIMENTO APR
     WHERE APR.IDPEDIDORESSARCIMENTO = LPR.IDPEDIDORESSARCIMENTO 
                                            AND APR.CDAREAREGISTRO = SUBSTR(LPR.NRTELEFONE, 1, 2) 
       AND APR.NRLINHA        		 = SUBSTR(LPR.NRTELEFONE, 3);
       
    FOR VAR IN 1 .. V_PEDIDORESSARCIMENTO.COUNT LOOP
   
     UPDATE ATENDIMENTO.PEDIDORESSARCIMENTO APR 
        SET APR.DSSTATUSRESSARCIMENTO = 'Improcedente'
          , APR.CDUSUARIOALTERACAO    = 1
          , APR.DTULTIMAALTERACAO     = V_PEDIDORESSARCIMENTO(VAR).V_DTULTIMAALTERACAO          
      WHERE APR.IDPEDIDORESSARCIMENTO = V_PEDIDORESSARCIMENTO(VAR).V_IDPEDIDORESSARCIMENTO
        AND APR.CDAREAREGISTRO        = SUBSTR(V_PEDIDORESSARCIMENTO(VAR).V_NRTELEFONE, 1, 2)
        AND APR.NRLINHA               = SUBSTR(V_PEDIDORESSARCIMENTO(VAR).V_NRTELEFONE, 3);
               
    END LOOP;   
    COMMIT;   

    V_ROWCOUNT:=SQL%ROWCOUNT;

    COMMIT;
	
    DBMS_OUTPUT.PUT_LINE('== Total de linhas atualizadas em ATENDIMENTO.PEDIDORESSARCIMENTO: '||V_ROWCOUNT);
    DBMS_OUTPUT.PUT_LINE('== INICIO LINHAS NAO ENCONTRADAS EM ATENDIMENTO.PEDIDORESSARCIMENTO ==');
    DBMS_OUTPUT.PUT_LINE('IDPEDIDORESSARCIMENTO, NRTELEFONE, DTINICIOINTERRUPCAO, DTFIMINTERRUPCAO, SGUF, NMMUNICIPIO, DSTIPORESSARCIMENTO, DSTIPOREDE');
    OPEN CURSOR_IMPROCEDENTE;
    LOOP
        FETCH CURSOR_IMPROCEDENTE INTO V_LINHA;
        IF LENGTH(V_LINHA) > 0 THEN
            DBMS_OUTPUT.PUT_LINE(V_LINHA);
        END IF;
        EXIT WHEN CURSOR_IMPROCEDENTE%NOTFOUND;
    END LOOP;
    CLOSE CURSOR_IMPROCEDENTE;
    DBMS_OUTPUT.PUT_LINE('== FIM LINHAS NAO ENCONTRADAS EM ATENDIMENTO.PEDIDORESSARCIMENTO ==');
	
END;
/

SPOOL OFF
SET ECHO OFF
SET TIMI OFF
SET TIME OFF
EXIT
