/*#########################################################
#  BATCH......: sincronismoAMDOCS
#  Criado por.: Williams Santos 03/02/2016
#  Criado por.: Lucas Gomes     01/11/2016
#  Funcional..: Deise Fraga
###########################################################*/
SET ECHO OFF;
SET SERVEROUTPUT ON SIZE UNLIMITED;
SET TIME OFF;
SET TIMING OFF;

DECLARE

   TYPE T_FILASINCRONISMOAMDOCS IS RECORD
   (
        IDFILAAMDOCS            CONVERGENTE_OW.FILASINCRONISMOAMDOCS.IDFILAAMDOCS%TYPE,
        IDPESSOASISTEMAORIGEM   CONVERGENTE_OW.FILASINCRONISMOAMDOCS.IDPESSOASISTEMAORIGEM%TYPE,
        CDCLIENTESISTEMAORIGEM  CONVERGENTE_OW.FILASINCRONISMOAMDOCS.CDCLIENTESISTEMAORIGEM%TYPE,
        NMTITULAR               CONVERGENTE_OW.FILASINCRONISMOAMDOCS.NMTITULAR%TYPE,
        DTNASCIMENTO            CONVERGENTE_OW.FILASINCRONISMOAMDOCS.DTNASCIMENTO%TYPE,
        SGTIPOCLIENTE           CONVERGENTE_OW.FILASINCRONISMOAMDOCS.SGTIPOCLIENTE%TYPE,
        DSTIPOCLIENTE           CONVERGENTE_OW.FILASINCRONISMOAMDOCS.DSTIPOCLIENTE%TYPE,
        SGCARTEIRA              CONVERGENTE_OW.FILASINCRONISMOAMDOCS.SGCARTEIRA%TYPE,
        DSCARTEIRA              CONVERGENTE_OW.FILASINCRONISMOAMDOCS.DSCARTEIRA%TYPE,
        SGTIPODOCUMENTO         CONVERGENTE_OW.FILASINCRONISMOAMDOCS.SGTIPODOCUMENTO%TYPE,
        NRDOCUMENTO             CONVERGENTE_OW.FILASINCRONISMOAMDOCS.NRDOCUMENTO%TYPE,
        TSSINCRONISMO           CONVERGENTE_OW.FILASINCRONISMOAMDOCS.TSSINCRONISMO%TYPE,
        SQSINCRONISMO           CONVERGENTE_OW.FILASINCRONISMOAMDOCS.SQSINCRONISMO%TYPE,
        IDPRODUTOSISTEMAORIGEM  CONVERGENTE_OW.FILASINCRONISMOAMDOCS.IDPRODUTOSISTEMAORIGEM%TYPE,
        IDCONTASISTEMAORIGEM    CONVERGENTE_OW.FILASINCRONISMOAMDOCS.IDCONTASISTEMAORIGEM%TYPE,
        CDAREAREGISTRO          CONVERGENTE_OW.FILASINCRONISMOAMDOCS.CDAREAREGISTRO%TYPE,
        NRLINHA                 CONVERGENTE_OW.FILASINCRONISMOAMDOCS.NRLINHA%TYPE,
        SGTIPOLINHA             CONVERGENTE_OW.FILASINCRONISMOAMDOCS.SGTIPOLINHA%TYPE,
        SGESTADOLINHA           CONVERGENTE_OW.FILASINCRONISMOAMDOCS.SGESTADOLINHA%TYPE,
        DSESTADOLINHA           CONVERGENTE_OW.FILASINCRONISMOAMDOCS.DSESTADOLINHA%TYPE,
        DTHABILITACAO           CONVERGENTE_OW.FILASINCRONISMOAMDOCS.DTHABILITACAO%TYPE,
        DTEXPIRACAO             CONVERGENTE_OW.FILASINCRONISMOAMDOCS.DTEXPIRACAO%TYPE,
        SGSERVICO               CONVERGENTE_OW.FILASINCRONISMOAMDOCS.SGSERVICO%TYPE,
        NMSERVICO               CONVERGENTE_OW.FILASINCRONISMOAMDOCS.NMSERVICO %TYPE,
        ENTIDADE                CONVERGENTE_OW.FILASINCRONISMOAMDOCS.ENTIDADE%TYPE,
        DTPROCESSADO            CONVERGENTE_OW.FILASINCRONISMOAMDOCS.DTPROCESSADO%TYPE,
        DTULTIMAALTERACAO       CONVERGENTE_OW.FILASINCRONISMOAMDOCS.DTULTIMAALTERACAO%TYPE,
        STATUS                  CONVERGENTE_OW.FILASINCRONISMOAMDOCS.STATUS%TYPE,
		INMIGRACAO              CONVERGENTE_OW.FILASINCRONISMOAMDOCS.INMIGRACAO%TYPE
                     
   );
      
   TYPE TB_FILASINCRONISMOAMDOCS IS TABLE OF T_FILASINCRONISMOAMDOCS INDEX BY BINARY_INTEGER;  
   V_FILASINCRONISMOAMDOCS TB_FILASINCRONISMOAMDOCS;
   
   
   CURSOR CMP IS
   SELECT FSA.IDFILAAMDOCS            
        , FSA.IDPESSOASISTEMAORIGEM   
        , FSA.CDCLIENTESISTEMAORIGEM  
        , FSA.NMTITULAR               
        , FSA.DTNASCIMENTO            
        , FSA.SGTIPOCLIENTE           
        , FSA.DSTIPOCLIENTE           
        , FSA.SGCARTEIRA              
        , FSA.DSCARTEIRA              
        , FSA.SGTIPODOCUMENTO         
        , FSA.NRDOCUMENTO             
        , FSA.TSSINCRONISMO           
        , FSA.SQSINCRONISMO           
        , FSA.IDPRODUTOSISTEMAORIGEM  
        , FSA.IDCONTASISTEMAORIGEM    
        , FSA.CDAREAREGISTRO          
        , FSA.NRLINHA                 
        , FSA.SGTIPOLINHA             
        , FSA.SGESTADOLINHA           
        , FSA.DSESTADOLINHA           
        , FSA.DTHABILITACAO           
        , FSA.DTEXPIRACAO             
        , FSA.SGSERVICO               
        , FSA.NMSERVICO               
        , FSA.ENTIDADE                
        , FSA.DTPROCESSADO            
        , FSA.DTULTIMAALTERACAO       
        , FSA.STATUS
		, FSA.INMIGRACAO
     FROM CONVERGENTE_OW.FILASINCRONISMOAMDOCS FSA
    WHERE FSA.STATUS = 0
	ORDER BY FSA.ENTIDADE, FSA.TSSINCRONISMO;
  
  V_LIMITE NUMBER := 5000; 
  V_DONE BOOLEAN;
    
  V_ENTIDADE_MANTER_PESSOA NUMBER := 1;
  V_ENTIDADE_MANTER_PRODUTO NUMBER := 2;
  
  V_CDERRO NUMBER;
  V_DSERRO VARCHAR2(32767);

  V_LOG CLOB;
    
BEGIN
	DBMS_OUTPUT.DISABLE;
    
    OPEN CMP;
    LOOP    
    FETCH CMP BULK COLLECT INTO V_FILASINCRONISMOAMDOCS LIMIT V_LIMITE;
        V_DONE := CMP%NOTFOUND;
    
        FOR FILA IN 1 .. V_FILASINCRONISMOAMDOCS.COUNT
        LOOP
		    V_CDERRO := NULL;
            V_DSERRO := NULL;
				
             BEGIN
                
                
                IF( V_FILASINCRONISMOAMDOCS(FILA).ENTIDADE = V_ENTIDADE_MANTER_PESSOA )
                THEN
                                  
                    
                    
                    CONVERGENTE_OW.PRC_ORQUESTRARPESSOA ( V_FILASINCRONISMOAMDOCS(FILA).IDPESSOASISTEMAORIGEM, V_FILASINCRONISMOAMDOCS(FILA).CDCLIENTESISTEMAORIGEM
                                                        , V_FILASINCRONISMOAMDOCS(FILA).NMTITULAR, V_FILASINCRONISMOAMDOCS(FILA).DTNASCIMENTO, V_FILASINCRONISMOAMDOCS(FILA).SGTIPOCLIENTE
                                                        , V_FILASINCRONISMOAMDOCS(FILA).DSTIPOCLIENTE, V_FILASINCRONISMOAMDOCS(FILA).SGCARTEIRA, V_FILASINCRONISMOAMDOCS(FILA).DSCARTEIRA
                                                        , V_FILASINCRONISMOAMDOCS(FILA).SGTIPODOCUMENTO, V_FILASINCRONISMOAMDOCS(FILA).NRDOCUMENTO, V_FILASINCRONISMOAMDOCS(FILA).TSSINCRONISMO
                                                        , V_FILASINCRONISMOAMDOCS(FILA).SQSINCRONISMO, V_FILASINCRONISMOAMDOCS(FILA).IDFILAAMDOCS, V_CDERRO, V_DSERRO );
                    
                ELSIF( V_FILASINCRONISMOAMDOCS(FILA).ENTIDADE = V_ENTIDADE_MANTER_PRODUTO )
                THEN
                                
                    CONVERGENTE_OW.PRC_ORQUESTRARPRODUTO ( V_FILASINCRONISMOAMDOCS(FILA).IDPESSOASISTEMAORIGEM, V_FILASINCRONISMOAMDOCS(FILA).CDCLIENTESISTEMAORIGEM
                                                         , V_FILASINCRONISMOAMDOCS(FILA).IDPRODUTOSISTEMAORIGEM, V_FILASINCRONISMOAMDOCS(FILA).IDCONTASISTEMAORIGEM
                                                         , V_FILASINCRONISMOAMDOCS(FILA).CDAREAREGISTRO, V_FILASINCRONISMOAMDOCS(FILA).NRLINHA, V_FILASINCRONISMOAMDOCS(FILA).SGTIPOLINHA
                                                         , V_FILASINCRONISMOAMDOCS(FILA).SGESTADOLINHA, V_FILASINCRONISMOAMDOCS(FILA).DSESTADOLINHA, V_FILASINCRONISMOAMDOCS(FILA).DTHABILITACAO
                                                         , V_FILASINCRONISMOAMDOCS(FILA).DTEXPIRACAO, V_FILASINCRONISMOAMDOCS(FILA).SGSERVICO, V_FILASINCRONISMOAMDOCS(FILA).NMSERVICO
                                                         , V_FILASINCRONISMOAMDOCS(FILA).TSSINCRONISMO, V_FILASINCRONISMOAMDOCS(FILA).SQSINCRONISMO, V_FILASINCRONISMOAMDOCS(FILA).IDFILAAMDOCS
														 , V_FILASINCRONISMOAMDOCS(FILA).INMIGRACAO
                                                         , V_CDERRO, V_DSERRO );
                                    
                END IF;
                
                
                UPDATE CONVERGENTE_OW.FILASINCRONISMOAMDOCS FS
                   SET FS.STATUS = 1
                     , FS.DTPROCESSADO = SYSDATE
                     , FS.CDERRO = V_CDERRO
                     , FS.DSERRO = V_DSERRO
                 WHERE FS.ENTIDADE = V_FILASINCRONISMOAMDOCS(FILA).ENTIDADE
                   AND FS.IDFILAAMDOCS = V_FILASINCRONISMOAMDOCS(FILA).IDFILAAMDOCS;
                COMMIT; 
                
            EXCEPTION
            WHEN OTHERS THEN
            
                UPDATE CONVERGENTE_OW.FILASINCRONISMOAMDOCS FS
                   SET FS.STATUS = 1
                     , FS.DTPROCESSADO = SYSDATE
                     , FS.CDERRO = V_CDERRO
                     , FS.DSERRO = V_DSERRO
                 WHERE FS.ENTIDADE = V_FILASINCRONISMOAMDOCS(FILA).ENTIDADE
                   AND FS.IDFILAAMDOCS = V_FILASINCRONISMOAMDOCS(FILA).IDFILAAMDOCS;
                COMMIT;

                V_LOG := V_LOG || CHR(13) || 'Erro ao gravar na fila IDFILA: ' || V_FILASINCRONISMOAMDOCS(FILA).IDFILAAMDOCS || '. ' || SQLCODE || ' - ' || SQLERRM;
            
            END;  			
        END LOOP;    
        
        
        COMMIT;
        EXIT WHEN (V_DONE);
    
    END LOOP; 
    COMMIT; 
    
    DBMS_OUTPUT.ENABLE (buffer_size => NULL);
    DBMS_OUTPUT.Put_Line(V_LOG);

EXCEPTION
	WHEN OTHERS THEN
         DBMS_OUTPUT.ENABLE (buffer_size => NULL);
         DBMS_OUTPUT.Put_Line(V_LOG);  
         DBMS_OUTPUT.Put_Line('Erro do Oracle ' || SQLCODE || ' - ' || SQLERRM);
END;
/
SPOOL OFF
SET ECHO OFF
SET TIMI OFF
SET TIME OFF
EXIT