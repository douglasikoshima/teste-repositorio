SET SQLPROMPT '';
SET TERMOUT OFF;
SET FEEDBACK OFF;
SET ECHO OFF;
SET AUTOTRACE OFF;
SET FLUSH ON;
SET HEADING OFF;
SET SERVEROUTPUT ON;
SET TIME OFF;
SET TIMING ON;
SET TRIMOUT ON;
SET TRIMSPOOL ON;
SET PAUSE OFF;
SET SHOWMODE OFF;
SET SQLBLANKLINES OFF;
SET SQLNUMBER OFF;
SET TAB OFF;
SET VERIFY OFF;
SET WRAP OFF;
SET FEED OFF;
SET NEWPAGE NONE;
SET LINESIZE 2048;

WHENEVER SQLERROR EXIT SQL.SQLCODE
WHENEVER OSERROR EXIT FAILURE 

-- Spool buffer do sqlplus
SPOOL &1;

VARIABLE VO_CDERRO NUMBER;
VARIABLE VO_DSERRO VARCHAR2(512);
VARIABLE VO_COUNT_REJEITADOS NUMBER;

DECLARE
	V_COUNT NUMBER := 0;
	V_PARAM_COMMIT NUMBER := '&2';
	V_PARAM_DATE_MASK VARCHAR2(64) := '&3';
	V_PARAM_DATE_LIMIT APOIO.PARAMETRO.DSVALORPARAMETRO%TYPE := '&4';
	V_FIELD_DELIMITER CHAR(1) := '&5';
	V_IDUSUARIO NUMBER := '&6';
	V_COUNT_TOTAL NUMBER := '&7';
	V_HORARIO_LIMITE_EXEC DATE;
	
	CURSOR C_CARGACLIENTETV IS SELECT /*+ PARALLEL(L, 8) */ L.*, ROWID FROM LOAD.CARGACLIENTETV L WHERE L.STATUS = 0;
	TYPE T_CARGACLIENTETV IS TABLE OF C_CARGACLIENTETV%ROWTYPE INDEX BY PLS_INTEGER;
	V_CARGACLIENTETV T_CARGACLIENTETV;
	
	V_IDPESSOA CUSTOMER.PESSOA.IDPESSOA%TYPE;
	V_RIDPESSOA ROWID;
	
	V_IDPESSOACOMUNICACAO CUSTOMER.PESSOACOMUNICACAO.IDPESSOACOMUNICACAO%TYPE;
	V_RIDPESSOACOMUNICACAO ROWID;
	
	V_IDDOCUMENTO CUSTOMER.DOCUMENTO.IDDOCUMENTO%TYPE;
	V_RIDDOCUMENTO ROWID;
	
	V_NMNOME CUSTOMER.PESSOA.NMNOME%TYPE;
	V_NMNOMEMEIO CUSTOMER.PESSOA.NMNOMEMEIO%TYPE;
	V_NMSOBRENOME CUSTOMER.PESSOA.NMSOBRENOME%TYPE;
	
	V_INDX_NMNOME NUMBER;
	V_INDX_NMNOMEMEIO NUMBER;
BEGIN
	LOAD.LOG_CARGAPROTOCOLOSTV('>>> CARGACLIENTETV : INICIO DO PROCESSAMENTO <<<');
	
	:VO_CDERRO := 0;
	:VO_DSERRO := 'SUCESSO';
	:VO_COUNT_REJEITADOS := 0;
	
	IF V_COUNT_TOTAL = 0
	THEN
		LOAD.LOG_CARGAPROTOCOLOSTV('Obtendo contagem de registros em CARGACLIENTETV');
		SELECT /*+ parallel(6) */ COUNT(1)
		INTO V_COUNT_TOTAL
		FROM LOAD.CARGACLIENTETV
		--WHERE STATUS = 0
		;
	END IF;
	LOAD.LOG_CARGAPROTOCOLOSTV('Total de registros em CARGACLIENTETV: '||V_COUNT_TOTAL);
	
	LOAD.LOG_CARGAPROTOCOLOSTV('Obtendo cdparametro CARGAPROTOCOLOSTV_HORARIO_LIMITE_EXEC');
	SELECT /*+ PARALLEL(4) */ TO_DATE(DSVALORPARAMETRO, V_PARAM_DATE_MASK)
	INTO V_HORARIO_LIMITE_EXEC
	FROM APOIO.PARAMETRO 
	WHERE CDPARAMETRO = V_PARAM_DATE_LIMIT;
	LOAD.LOG_CARGAPROTOCOLOSTV('Valor do cdparametro CARGAPROTOCOLOSTV_HORARIO_LIMITE_EXEC: '||TO_CHAR(V_HORARIO_LIMITE_EXEC, V_PARAM_DATE_MASK));
	
	IF TO_CHAR(SYSDATE, 'HH24MI') >= TO_CHAR(V_HORARIO_LIMITE_EXEC, 'HH24MI')
	THEN
		:VO_CDERRO := 98;
		:VO_DSERRO := 'Atingido horario limite de execucao: '||TO_CHAR(V_HORARIO_LIMITE_EXEC, V_PARAM_DATE_MASK);
		
		LOAD.LOG_CARGAPROTOCOLOSTV(:VO_DSERRO);
	ELSE
		LOAD.LOG_CARGAPROTOCOLOSTV('Processando registros..');
		OPEN C_CARGACLIENTETV;
		LOOP
			FETCH C_CARGACLIENTETV BULK COLLECT INTO V_CARGACLIENTETV LIMIT V_PARAM_COMMIT;
			V_COUNT := V_COUNT + V_CARGACLIENTETV.COUNT;
			FOR i IN 1 .. V_CARGACLIENTETV.COUNT
			LOOP
				-- O Sistema verifica que os campos abaixo foram preenchidos.
				IF V_CARGACLIENTETV(i).IDPESSOASISTEMAORIGEM IS NOT NULL
				AND V_CARGACLIENTETV(i).IDSISTEMAORIGEM IS NOT NULL
				AND V_CARGACLIENTETV(i).NMPESSOA IS NOT NULL 
				AND V_CARGACLIENTETV(i).IDTIPOPESSOA IS NOT NULL 
				AND V_CARGACLIENTETV(i).IDSEXO IS NOT NULL 
				AND V_CARGACLIENTETV(i).IDDOCUMENTOSISTEMAORIGEM IS NOT NULL 
				AND V_CARGACLIENTETV(i).IDTIPODOCUMENTO IS NOT NULL 
				AND V_CARGACLIENTETV(i).NRDOCUMENTO IS NOT NULL
				--AND ((V_CARGACLIENTETV(i).EMAIL IS NOT NULL AND V_CARGACLIENTETV(i).IDCOMUNICACAOSISTEMAORIGEM IS NOT NULL) OR (V_CARGACLIENTETV(i).TELEFONE IS NOT NULL AND V_CARGACLIENTETV(i).IDCOMUMICSISTEMAORIGEMTELEFONE IS NOT NULL))
				AND V_CARGACLIENTETV(i).NMCONTATO IS NOT NULL
				THEN
					BEGIN
						SAVEPOINT S_REGISTRO;
						
						-- inserir o primeiro nome, para isso buscar no campo NMPESSOA o primeiro caracter “ “ (espaço) e inserir o que vem antes.
						V_INDX_NMNOME := INSTR(V_CARGACLIENTETV(i).NMPESSOA, CHR(32));			
						IF V_INDX_NMNOME > 0
						THEN
							V_NMNOME := SUBSTR(V_CARGACLIENTETV(i).NMPESSOA, 1, V_INDX_NMNOME);
						ELSE
							V_NMNOME := V_CARGACLIENTETV(i).NMPESSOA;
						END IF;
						
						-- inserir o nome do meio, para isso buscar no campo NMPESSOA o primeiro caracter “ “ (espaço) e inserir o que vem depois até o próximo espaço
						V_INDX_NMNOMEMEIO := INSTR(V_CARGACLIENTETV(i).NMPESSOA, CHR(32), 1, 2);
						IF V_INDX_NMNOMEMEIO > 0
						THEN
							V_NMNOMEMEIO := SUBSTR(V_CARGACLIENTETV(i).NMPESSOA, (V_INDX_NMNOME + 1), (V_INDX_NMNOMEMEIO - V_INDX_NMNOME));
						ELSE
							V_NMNOMEMEIO := NULL;
							V_INDX_NMNOMEMEIO := V_INDX_NMNOME;
						END IF;
						
						-- inserir o sobrenome, para isso buscar no campo NMPESSOA o ultimo caracter “ “ (espaço) e inserir tudo o que vem depois.
						IF V_INDX_NMNOMEMEIO > 0
						THEN
							V_NMSOBRENOME := SUBSTR(V_CARGACLIENTETV(i).NMPESSOA, (V_INDX_NMNOMEMEIO + 1), LENGTH(V_CARGACLIENTETV(i).NMPESSOA));
						ELSE
							V_NMSOBRENOME := NULL;
						END IF;
						
						-- Recupera / Insere em customer.pessoa
						BEGIN							
							-- O Sistema recupera o IDPESSOA na entidade customer.Pessoa o registro onde o IDPESSOASISTEMAORIGEM é igual ao informado no campo IDPESSOASISTEMAORIGEM e o IDSISTEMAORIGEM é igual ao informado no campo IDSISTEMAORIGEM
							SELECT /*+ parallel(8) */ IDPESSOA, ROWID
							INTO V_IDPESSOA, V_RIDPESSOA
							FROM CUSTOMER.PESSOA 
							WHERE IDPESSOASISTEMAORIGEM = V_CARGACLIENTETV(i).IDPESSOASISTEMAORIGEM
							AND IDSISTEMAORIGEM = V_CARGACLIENTETV(i).IDSISTEMAORIGEM
							and rownum < 2
							;
							
							-- Caso encontre o IDPESSOA o sistema deve atualizar o registro conforme descrito abaixo.
							UPDATE CUSTOMER.PESSOA
							SET NMPESSOA = V_CARGACLIENTETV(i).NMPESSOA
								,NMNOME = V_NMNOME
								,NMNOMEMEIO = V_NMNOMEMEIO
								,NMSOBRENOME = V_NMSOBRENOME
								,IDTIPOPESSOA = DECODE(V_CARGACLIENTETV(i).IDTIPOPESSOA, 1, 1, 2, 2, 0)
								,IDUSUARIOALTERACAO = V_IDUSUARIO
								,DTULTIMAALTERACAO = SYSDATE
							WHERE ROWID = V_RIDPESSOA;
						EXCEPTION
							WHEN NO_DATA_FOUND 
							THEN
								V_IDPESSOA := NULL;
								V_RIDPESSOA := NULL;
						END;
						
						-- Caso não encontre o registro no passo anterior o sistema deve inserir o registro conforme descrito abaixo
						IF V_IDPESSOA IS NULL
						THEN
							SELECT CUSTOMER.PESSOASQ.NEXTVAL
							INTO V_IDPESSOA
							FROM DUAL;

							INSERT /*+ APPEND */ INTO CUSTOMER.PESSOA (
							  IDPESSOA
							  ,IDSISTEMAORIGEM
							  ,IDPESSOASISTEMAORIGEM
							  ,NMPESSOA
							  ,NMNOME
							  ,NMNOMEMEIO
							  ,NMSOBRENOME
							  ,DTCHURN
							  ,DTCADASTRO
							  ,INFALECIMENTOINFORMADO
							  ,DTFALECIMENTO
							  ,IDTIPOPESSOA
							  ,TSSINCRONISMO
							  ,SQSINCRONISMO
							  ,IDTIPOCARTEIRA
							  ,IDUF
							  ,VLRCHURNPROBABILIDADE
							  ,DTTIPOCARTEIRA
							  ,IDPROBINADIMPLENCIA
							  ,IDCHURNPROBABILIDADE
							  ,DSCARGOCONTATO
							  ,DSDEPTOCONTATO
							  ,IDUSUARIOALTERACAO
							  ,DTULTIMAALTERACAO
							  ,CDAREAREGISTROPROSPECT
							  ,NRLINHAPROSPECT
							  ,NMPROCURADOR
							  ,QTALTERACAO
							  ,NRTELEFONE_FIXO_PROSPECT
							  ,OPERADORA_FIXO_PROSPECT
							  ,CDEMPRESA
							  ,INESTRANGEIRO
							  ,DTCONFIRMADADOS
							) VALUES (
							  V_IDPESSOA
							  ,V_CARGACLIENTETV(i).IDSISTEMAORIGEM
							  ,V_CARGACLIENTETV(i).IDPESSOASISTEMAORIGEM
							  ,V_CARGACLIENTETV(i).NMPESSOA
							  ,V_NMNOME
							  ,V_NMNOMEMEIO
							  ,V_NMSOBRENOME
							  ,NULL
							  ,SYSDATE
							  ,0
							  ,Null
							  ,DECODE(V_CARGACLIENTETV(i).IDTIPOPESSOA, 1, 1, 2, 2, 0)
							  ,Null
							  ,Null
							  ,13
							  ,0
							  ,NULL
							  ,NULL
							  ,0
							  ,0
							  ,NULL
							  ,NULL
							  ,V_IDUSUARIO
							  ,SYSDATE
							  ,NULL
							  ,NULL
							  ,NULL
							  ,0
							  ,NULL
							  ,NULL
							  ,NULL
							  ,NULL
							  ,NULL
							);

							-- Inserir um registro na entidade customer.PessoaDePara conforme descrito abaixo
							INSERT /*+ APPEND */ INTO CUSTOMER.PESSOADEPARA (
							  IDPESSOADEPARA
							  ,IDPESSOA
							  ,IDPESSOAORIGEM
							  ,IDUSUARIOALTERACAO
							  ,DTULTIMAALTERACAO
							) VALUES (
							  CUSTOMER.PESSOADEPARASQ.NEXTVAL
							  ,V_IDPESSOA
							  ,V_IDPESSOA
							  ,V_IDUSUARIO
							  ,SYSDATE
							);

							-- Verifica tipo de pessoa
							IF V_CARGACLIENTETV(i).IDTIPOPESSOA = 1
							THEN
								-- Se Tipo pessoa recuperado no passo 6 corresponde a PF, o Sistema inserir um registro na entidade customer.PessoaFísica conforme descrito abaixo
								INSERT /*+ APPEND */ INTO CUSTOMER.PESSOAFISICA (
								  IDPESSOA
								  ,DTNASCIMENTO
								  ,NMMAE
								  ,NMPAI
								  ,IDTRATAMENTO
								  ,IDESTADOCIVIL
								  ,IDPAIS
								  ,IDSEXO
								  ,IDUSUARIOALTERACAO
								  ,DTULTIMAALTERACAO
								  ,SQSINCRONISMO
								  ,TSSINCRONISMO
								) VALUES (
								  V_IDPESSOA
								  ,Null
								  ,Null
								  ,Null
								  ,0
								  ,0
								  ,1
								  ,DECODE(V_CARGACLIENTETV(i).IDSEXO, 1, 1, 2, 2, 0)
								  ,V_IDUSUARIO
								  ,SYSDATE
								  ,Null
								  ,Null
								);
							ELSIF V_CARGACLIENTETV(i).IDTIPOPESSOA = 2
							THEN
								-- Se Tipo pessoa recuperado no passo 6 corresponde a PJ, o Sistema inserir um registro na entidade customer.PessoaJuridica conforme descrito abaixo:
								INSERT /*+ APPEND */ INTO CUSTOMER.PESSOAJURIDICA (
								  IDPESSOA
								  ,NMPESSOAFILIAL
								  ,NMFANTASIA
								  ,IDUSUARIOALTERACAO
								  ,DTULTIMAALTERACAO
								  ,DTFUNDACAO
								  ,IDCFOP
								  ,NMREPRESENTANTELEGAL
								) VALUES (
								  V_IDPESSOA
								  ,V_CARGACLIENTETV(i).NMPESSOA
								  ,V_CARGACLIENTETV(i).NMPESSOA
								  ,V_IDUSUARIO
								  ,SYSDATE
								  ,Null
								  ,0
								  ,Null
								);
							END IF;
						END IF;
						
						-- O Sistema cadastra as informações de comunicação
						IF V_CARGACLIENTETV(i).TELEFONE IS NOT NULL
						THEN
							-- Se campo TELEFONE preenchido
							BEGIN
								SELECT  /*+ parallel(8) */ IDPESSOACOMUNICACAO, ROWID
								INTO V_IDPESSOACOMUNICACAO, V_RIDPESSOACOMUNICACAO
								FROM CUSTOMER.PESSOACOMUNICACAO
								WHERE IDPESSOA = V_IDPESSOA
								AND IDSISTEMAORIGEM = V_CARGACLIENTETV(i).IDSISTEMAORIGEM
								AND IDTIPOCOMUNICACAO = 3
								AND ROWNUM < 2;
								
								-- Sistema atualiza um registro na entidade customer.pessoacomunicacao conforme descrito abaixo
								UPDATE CUSTOMER.PESSOACOMUNICACAO
								SET DSCONTATO = V_CARGACLIENTETV(i).TELEFONE
									,IDCOMUNICACAOSISTEMAORIGEM = V_CARGACLIENTETV(i).IDCOMUMICSISTEMAORIGEMTELEFONE
									,IDUSUARIOALTERACAO = V_IDUSUARIO
									,DTULTIMAALTERACAO = SYSDATE
									,NMCONTATO = V_CARGACLIENTETV(i).NMPESSOA
								WHERE ROWID = V_RIDPESSOACOMUNICACAO;
							EXCEPTION
								WHEN NO_DATA_FOUND
								THEN
									V_RIDPESSOACOMUNICACAO := NULL;
			
									-- Se não for encontrado um registro no passo anterior o sistema insere um registro na entidade customer.Comunicacao conforme descrito abaixo
									SELECT CUSTOMER.PESSOACOMUNICACAOSQ.NEXTVAL
									INTO V_IDPESSOACOMUNICACAO
									FROM DUAL;
									
									INSERT /*+ APPEND */ INTO CUSTOMER.PESSOACOMUNICACAO (
									  IDPESSOACOMUNICACAO
									  ,IDPESSOA
									  ,IDTIPOCOMUNICACAO
									  ,NRSEQUENCIA
									  ,DSCONTATO
									  ,DTCADASTRO
									  ,TSSINCRONISMO
									  ,SQSINCRONISMO
									  ,IDSISTEMAORIGEM
									  ,IDCOMUNICACAOSISTEMAORIGEM
									  ,DTEXPIRACAO
									  ,INCOMUNICACAOPREFERENCIAL
									  ,IDUSUARIOALTERACAO
									  ,DTULTIMAALTERACAO
									  ,NMCONTATO
									  ,IDRELACAOCONTATO
									  ,INSITE
									  ,DSINFOCOMPLEMENTAR
									  ,INAUTORIZARECEBEREMAIL
									) VALUES (
									  V_IDPESSOACOMUNICACAO
									  ,V_IDPESSOA
									  ,3
									  ,Null
									  ,V_CARGACLIENTETV(i).TELEFONE
									  ,SYSDATE
									  ,Null
									  ,Null
									  ,V_CARGACLIENTETV(i).IDSISTEMAORIGEM
									  ,V_CARGACLIENTETV(i).IDCOMUMICSISTEMAORIGEMTELEFONE
									  ,Null
									  ,Null
									  ,V_IDUSUARIO
									  ,SYSDATE
									  ,V_CARGACLIENTETV(i).NMPESSOA
									  ,Null
									  ,Null
									  ,Null
									  ,Null
									);
							END;
						END IF;
						
						-- Se campo EMAIL preenchido
						IF V_CARGACLIENTETV(i).EMAIL IS NOT NULL
						THEN
							BEGIN
								SELECT  /*+ parallel(8) */ IDPESSOACOMUNICACAO, ROWID
								INTO V_IDPESSOACOMUNICACAO, V_RIDPESSOACOMUNICACAO
								FROM CUSTOMER.PESSOACOMUNICACAO
								WHERE IDPESSOA = V_IDPESSOA
								AND IDSISTEMAORIGEM = V_CARGACLIENTETV(i).IDSISTEMAORIGEM
								AND IDTIPOCOMUNICACAO = 6
								AND ROWNUM < 2;
							EXCEPTION
								WHEN NO_DATA_FOUND
								THEN
									V_RIDPESSOACOMUNICACAO := NULL;

									SELECT CUSTOMER.PESSOACOMUNICACAOSQ.NEXTVAL
									INTO V_IDPESSOACOMUNICACAO
									FROM DUAL;
									
									INSERT /*+ APPEND */ INTO CUSTOMER.PESSOACOMUNICACAO (
									  IDPESSOACOMUNICACAO
									  ,IDPESSOA
									  ,IDTIPOCOMUNICACAO
									  ,NRSEQUENCIA
									  ,DSCONTATO
									  ,DTCADASTRO
									  ,TSSINCRONISMO
									  ,SQSINCRONISMO
									  ,IDSISTEMAORIGEM
									  ,IDCOMUNICACAOSISTEMAORIGEM
									  ,DTEXPIRACAO
									  ,INCOMUNICACAOPREFERENCIAL
									  ,IDUSUARIOALTERACAO
									  ,DTULTIMAALTERACAO
									  ,NMCONTATO
									  ,IDRELACAOCONTATO
									  ,INSITE
									  ,DSINFOCOMPLEMENTAR
									  ,INAUTORIZARECEBEREMAIL
									) VALUES (
									  V_IDPESSOACOMUNICACAO
									  ,V_IDPESSOA
									  ,6
									  ,Null
									  ,V_CARGACLIENTETV(i).EMAIL
									  ,SYSDATE
									  ,Null
									  ,Null
									  ,V_CARGACLIENTETV(i).IDSISTEMAORIGEM
									  ,V_CARGACLIENTETV(i).IDCOMUNICACAOSISTEMAORIGEM
									  ,Null
									  ,Null
									  ,V_IDUSUARIO
									  ,SYSDATE
									  ,V_CARGACLIENTETV(i).NMPESSOA
									  ,Null
									  ,Null
									  ,Null
									  ,Null
									);
							END;
						END IF;
						
						-- Sistema verifica na entidade customer.Documento um registro onde:
						BEGIN
							SELECT  /*+ parallel(8) */ IDDOCUMENTO, ROWID
							INTO V_IDDOCUMENTO, V_RIDDOCUMENTO
							FROM CUSTOMER.DOCUMENTO
							WHERE NRDOCUMENTO = V_CARGACLIENTETV(i).NRDOCUMENTO
							AND IDTIPODOCUMENTO = V_CARGACLIENTETV(i).IDTIPODOCUMENTO
							AND IDUF = 0
							AND SGORGAOEXPEDIDOR IS NULL
							and rownum < 2
							;
							
							-- Sistema atualiza o registro na entidade customer.Documento conforme descrito abaixo
							UPDATE CUSTOMER.DOCUMENTO
							SET CDCPFCNPJBASE = (CASE WHEN V_CARGACLIENTETV(i).IDTIPODOCUMENTO = 2 THEN SUBSTR(V_CARGACLIENTETV(i).NRDOCUMENTO, 1, 8) WHEN V_CARGACLIENTETV(i).IDTIPODOCUMENTO = 1 THEN SUBSTR(V_CARGACLIENTETV(i).NRDOCUMENTO, 1, 9) ELSE NULL END)
								,CDCNPJFILIAL = (CASE WHEN V_CARGACLIENTETV(i).IDTIPODOCUMENTO = 2 THEN SUBSTR(V_CARGACLIENTETV(i).NRDOCUMENTO, -4, 4) ELSE NULL END)
								,CDCPFCNPJCONTROLE = (CASE WHEN V_CARGACLIENTETV(i).IDTIPODOCUMENTO IN (1, 2) THEN SUBSTR(V_CARGACLIENTETV(i).NRDOCUMENTO, -2, 2) ELSE NULL END)
								,NRDOCUMENTO = V_CARGACLIENTETV(i).NRDOCUMENTO
								,SGORGAOEXPEDIDOR = NULL
								,IDPAIS = 1
								,IDTIPODOCUMENTO = V_CARGACLIENTETV(i).IDTIPODOCUMENTO
								,IDUSUARIOALTERACAO = V_IDUSUARIO
								,DTULTIMAALTERACAO = SYSDATE
							WHERE ROWID = V_RIDDOCUMENTO;
						EXCEPTION
							WHEN NO_DATA_FOUND
							THEN
								V_RIDDOCUMENTO := NULL;

								SELECT CUSTOMER.DOCUMENTOSQ.NEXTVAL
								INTO V_IDDOCUMENTO
								FROM DUAL;
							
								INSERT /*+ APPEND */ INTO CUSTOMER.DOCUMENTO (
								  IDDOCUMENTO
								  ,CDCPFCNPJBASE
								  ,CDCNPJFILIAL
								  ,CDCPFCNPJCONTROLE
								  ,NRDOCUMENTO
								  ,SGORGAOEXPEDIDOR
								  ,DTEMISSAO
								  ,IDPAIS
								  ,IDUF
								  ,IDTIPODOCUMENTO
								  ,IDUSUARIOALTERACAO
								  ,DTULTIMAALTERACAO
								) VALUES (
								  V_IDDOCUMENTO
								  ,(CASE 
								  	  WHEN V_CARGACLIENTETV(i).IDTIPODOCUMENTO = 2 THEN SUBSTR(V_CARGACLIENTETV(i).NRDOCUMENTO, 1, 8)
								  	  WHEN V_CARGACLIENTETV(i).IDTIPODOCUMENTO = 1 THEN SUBSTR(V_CARGACLIENTETV(i).NRDOCUMENTO, 1, 9)
								  	  ELSE NULL
								  	END)
								  ,(CASE WHEN V_CARGACLIENTETV(i).IDTIPODOCUMENTO = 2 THEN SUBSTR(V_CARGACLIENTETV(i).NRDOCUMENTO, -4, 4) ELSE NULL END)
								  ,(CASE WHEN V_CARGACLIENTETV(i).IDTIPODOCUMENTO IN (1, 2) THEN SUBSTR(V_CARGACLIENTETV(i).NRDOCUMENTO, -2, 2) ELSE NULL END)
								  ,V_CARGACLIENTETV(i).NRDOCUMENTO
								  ,NULL
								  ,SYSDATE
								  ,1
								  ,0
								  ,V_CARGACLIENTETV(i).IDTIPODOCUMENTO
								  ,V_IDUSUARIO
								  ,SYSDATE
								);
								
								-- O sistema insere um registro na entidade customer.PessoaDocumento conforme descrito abaixo
								INSERT /*+ APPEND */ INTO CUSTOMER.PESSOADOCUMENTO (
								  IDPESSOADOCUMENTO
								  ,IDPESSOA
								  ,IDDOCUMENTO
								  ,TSSINCRONISMO
								  ,SQSINCRONISMO
								  ,IDSISTEMAORIGEM
								  ,IDDOCUMENTOSISTEMAORIGEM
								  ,DTEXPIRACAO
								  ,IDUSUARIOALTERACAO
								  ,DTULTIMAALTERACAO
								  ,QTALTERACAO
								) VALUES (
								  CUSTOMER.PESSOADOCUMENTOSQ.NEXTVAL
								  ,V_IDPESSOA
								  ,V_IDDOCUMENTO
								  ,Null
								  ,Null
								  ,V_CARGACLIENTETV(i).IDSISTEMAORIGEM
								  ,V_CARGACLIENTETV(i).IDDOCUMENTOSISTEMAORIGEM
								  ,Null
								  ,V_IDUSUARIO
								  ,SYSDATE
								  ,0
								);
						END;
					EXCEPTION
						WHEN OTHERS 
						THEN
							-- Caso nao seja possIvel inserir em alguma das entidades, o Sistema desconsidera a linha inteira e gera log. 
							ROLLBACK TO S_REGISTRO;
						
							LOAD.LOG_CARGAPROTOCOLOSTV(
								V_CARGACLIENTETV(i).IDPESSOASISTEMAORIGEM||V_FIELD_DELIMITER||
								V_CARGACLIENTETV(i).IDSISTEMAORIGEM||V_FIELD_DELIMITER||
								V_CARGACLIENTETV(i).NMPESSOA||V_FIELD_DELIMITER||
								V_CARGACLIENTETV(i).IDTIPOPESSOA||V_FIELD_DELIMITER||
								V_CARGACLIENTETV(i).IDSEXO||V_FIELD_DELIMITER||
								V_CARGACLIENTETV(i).IDDOCUMENTOSISTEMAORIGEM||V_FIELD_DELIMITER||
								V_CARGACLIENTETV(i).IDTIPODOCUMENTO||V_FIELD_DELIMITER||
								V_CARGACLIENTETV(i).NRDOCUMENTO||V_FIELD_DELIMITER||
								V_CARGACLIENTETV(i).IDCOMUNICACAOSISTEMAORIGEM||V_FIELD_DELIMITER||
								V_CARGACLIENTETV(i).EMAIL||V_FIELD_DELIMITER||
								V_CARGACLIENTETV(i).IDCOMUMICSISTEMAORIGEMTELEFONE||V_FIELD_DELIMITER||
								V_CARGACLIENTETV(i).TELEFONE||V_FIELD_DELIMITER||
								V_CARGACLIENTETV(i).NMCONTATO||V_FIELD_DELIMITER||
								'Erro oracle ['||SQLCODE||']: '||SQLERRM
								,FALSE
							);
							
							:VO_COUNT_REJEITADOS := :VO_COUNT_REJEITADOS + 1;
					END;
				ELSE
					-- O sistema verifica que nao foram informados todos os campos obrigatorios.
					LOAD.LOG_CARGAPROTOCOLOSTV(
						V_CARGACLIENTETV(i).IDPESSOASISTEMAORIGEM||V_FIELD_DELIMITER||
						V_CARGACLIENTETV(i).IDSISTEMAORIGEM||V_FIELD_DELIMITER||
						V_CARGACLIENTETV(i).NMPESSOA||V_FIELD_DELIMITER||
						V_CARGACLIENTETV(i).IDTIPOPESSOA||V_FIELD_DELIMITER||
						V_CARGACLIENTETV(i).IDSEXO||V_FIELD_DELIMITER||
						V_CARGACLIENTETV(i).IDDOCUMENTOSISTEMAORIGEM||V_FIELD_DELIMITER||
						V_CARGACLIENTETV(i).IDTIPODOCUMENTO||V_FIELD_DELIMITER||
						V_CARGACLIENTETV(i).NRDOCUMENTO||V_FIELD_DELIMITER||
						V_CARGACLIENTETV(i).IDCOMUNICACAOSISTEMAORIGEM||V_FIELD_DELIMITER||
						V_CARGACLIENTETV(i).EMAIL||V_FIELD_DELIMITER||
						V_CARGACLIENTETV(i).IDCOMUMICSISTEMAORIGEMTELEFONE||V_FIELD_DELIMITER||
						V_CARGACLIENTETV(i).TELEFONE||V_FIELD_DELIMITER||
						V_CARGACLIENTETV(i).NMCONTATO||V_FIELD_DELIMITER||
						'Nao foram informados todos os campos obrigatorios'
						,FALSE
					);
					
					:VO_COUNT_REJEITADOS := :VO_COUNT_REJEITADOS + 1;
				END IF;

				UPDATE LOAD.CARGACLIENTETV SET STATUS = 1 WHERE ROWID = V_CARGACLIENTETV(i).ROWID;
			END LOOP;
			
			COMMIT;
			LOAD.LOG_CARGAPROTOCOLOSTV('COMMIT: Registros processados: '||V_COUNT||' de '||V_COUNT_TOTAL);
			LOAD.LOG_CARGAPROTOCOLOSTV('COMMIT: Registros rejeitados: '||:VO_COUNT_REJEITADOS);
	
			IF TO_CHAR(SYSDATE, 'HH24MI') >= TO_CHAR(V_HORARIO_LIMITE_EXEC, 'HH24MI')
			THEN
				:VO_CDERRO := 98;
				:VO_DSERRO := 'Atingido horario limite de execucao: '||TO_CHAR(V_HORARIO_LIMITE_EXEC, V_PARAM_DATE_MASK);
				
				LOAD.LOG_CARGAPROTOCOLOSTV(:VO_DSERRO);
				EXIT;
			END IF;
			
			EXIT WHEN V_CARGACLIENTETV.COUNT < V_PARAM_COMMIT;
		END LOOP;
		
		CLOSE C_CARGACLIENTETV;		
	END IF;

	LOAD.LOG_CARGAPROTOCOLOSTV('CDERRO: '||:VO_CDERRO||', DSERRO: '||:VO_DSERRO);
	LOAD.LOG_CARGAPROTOCOLOSTV('>>> CARGACLIENTETV : FIM DO PROCESSAMENTO <<<');
EXCEPTION
	WHEN OTHERS 
	THEN
		:VO_CDERRO := 99;
		:VO_DSERRO := 'ERRO NR.: ' || SQLCODE || ' - DESCRICAO DO ERRO: ' || SQLERRM;
	
		ROLLBACK;
		LOAD.LOG_CARGAPROTOCOLOSTV('CDERRO: '||:VO_CDERRO||', DSERRO: '||:VO_DSERRO);
		LOAD.LOG_CARGAPROTOCOLOSTV('>>> CARGACLIENTETV : FIM DO PROCESSAMENTO (COM EXCEPTION) <<<');
END;
/

SET TIMING OFF;

select CHR(10) from dual;
select 'VO_CDERRO', :VO_CDERRO from dual;
select 'VO_DSERRO', :VO_DSERRO from dual;
select 'VO_COUNT_REJEITADOS', :VO_COUNT_REJEITADOS from dual;

SPOOL OFF;

exit :VO_CDERRO;
