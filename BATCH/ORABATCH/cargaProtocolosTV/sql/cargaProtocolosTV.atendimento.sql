SET SQLPROMPT '';
SET TERMOUT OFF;
SET FEEDBACK OFF;
SET ECHO OFF;
SET AUTOTRACE OFF;
SET FLUSH ON;
SET HEADING OFF;
SET SERVEROUTPUT ON;
SET TIME OFF;
SET TIMING ON;
SET TRIMOUT ON;
SET TRIMSPOOL ON;
SET PAUSE OFF;
SET SHOWMODE OFF;
SET SQLBLANKLINES OFF;
SET SQLNUMBER OFF;
SET TAB OFF;
SET VERIFY OFF;
SET WRAP OFF;
SET FEED OFF;
SET NEWPAGE NONE;
SET LINESIZE 2048;

WHENEVER SQLERROR EXIT SQL.SQLCODE
WHENEVER OSERROR EXIT FAILURE 

-- Spool buffer do sqlplus
SPOOL &1;

VARIABLE VO_CDERRO NUMBER;
VARIABLE VO_DSERRO VARCHAR2(512);
VARIABLE VO_COUNT_REJEITADOS NUMBER;

DECLARE
	V_COUNT NUMBER := 0;
	V_PARAM_COMMIT NUMBER := '&2';
	V_PARAM_DATE_MASK VARCHAR2(64) := '&3';
	V_PARAM_DATE_LIMIT APOIO.PARAMETRO.DSVALORPARAMETRO%TYPE := '&4';
	V_FIELD_DELIMITER CHAR(1) := '&5';
	V_IDUSUARIO NUMBER := '&6';
	V_COUNT_TOTAL NUMBER := '&7';
	V_HORARIO_LIMITE_EXEC DATE;
	
	CURSOR C_CARGAATENDIMENTOTV IS SELECT /*+ parallel(L, 8) */ L.*, ROWID FROM LOAD.CARGAATENDIMENTOTV L WHERE L.STATUS = 0;
	TYPE T_CARGAATENDIMENTOTV IS TABLE OF C_CARGAATENDIMENTOTV%ROWTYPE INDEX BY PLS_INTEGER;
	V_CARGAATENDIMENTOTV T_CARGAATENDIMENTOTV;
	
	V_COUNT_ATENDIMENTO NUMBER;
BEGIN
	LOAD.LOG_CARGAPROTOCOLOSTV('>>> CARGAATENDIMENTOTV : INICIO DO PROCESSAMENTO <<<');
	
	:VO_CDERRO := 0;
	:VO_DSERRO := 'SUCESSO';
	:VO_COUNT_REJEITADOS := 0;
	
	IF V_COUNT_TOTAL = 0
	THEN
		LOAD.LOG_CARGAPROTOCOLOSTV('Obtendo contagem de registros em CARGAATENDIMENTOTV');
		SELECT /*+ parallel(6) */ COUNT(1)
		INTO V_COUNT_TOTAL
		FROM LOAD.CARGAATENDIMENTOTV
		--WHERE STATUS = 0
		;
	END IF;
	LOAD.LOG_CARGAPROTOCOLOSTV('Total de registros em CARGAATENDIMENTOTV: '||V_COUNT_TOTAL);
	
	LOAD.LOG_CARGAPROTOCOLOSTV('Obtendo cdparametro CARGAPROTOCOLOSTV_HORARIO_LIMITE_EXEC');
	SELECT /*+ parallel(4) */ TO_DATE(DSVALORPARAMETRO, V_PARAM_DATE_MASK)
	INTO V_HORARIO_LIMITE_EXEC
	FROM APOIO.PARAMETRO 
	WHERE CDPARAMETRO = V_PARAM_DATE_LIMIT;
	LOAD.LOG_CARGAPROTOCOLOSTV('Valor do cdparametro CARGAPROTOCOLOSTV_HORARIO_LIMITE_EXEC: '||TO_CHAR(V_HORARIO_LIMITE_EXEC, V_PARAM_DATE_MASK));
	
	IF TO_CHAR(SYSDATE, 'HH24MI') >= TO_CHAR(V_HORARIO_LIMITE_EXEC, 'HH24MI')
	THEN
		:VO_CDERRO := 98;
		:VO_DSERRO := 'Atingido horario limite de execucao: '||TO_CHAR(V_HORARIO_LIMITE_EXEC, V_PARAM_DATE_MASK);
		
		LOAD.LOG_CARGAPROTOCOLOSTV(:VO_DSERRO);
	ELSE
		LOAD.LOG_CARGAPROTOCOLOSTV('Processando registros..');
		OPEN C_CARGAATENDIMENTOTV;
		LOOP
			FETCH C_CARGAATENDIMENTOTV BULK COLLECT INTO V_CARGAATENDIMENTOTV LIMIT V_PARAM_COMMIT;
			V_COUNT := V_COUNT + V_CARGAATENDIMENTOTV.COUNT;
			FOR i IN 1 .. V_CARGAATENDIMENTOTV.COUNT
			LOOP
				-- Sistema verifica que os campos abaixo foram preenchidos.
				IF V_CARGAATENDIMENTOTV(i).IDSISTEMAORIGEM IS NOT NULL
				AND V_CARGAATENDIMENTOTV(i).IDATENDIMENTOPROTOCOLOMIGRACAO IS NOT NULL
				AND V_CARGAATENDIMENTOTV(i).NMPROCESSO IS NOT NULL 
				AND V_CARGAATENDIMENTOTV(i).IDCANAL IS NOT NULL   
				THEN
					-- Sistema busca na entidade atendimento.atendimentoProtocoloMigracao
					SELECT /*+ parallel(8) */ COUNT(1)
					INTO V_COUNT_ATENDIMENTO
					FROM ATENDIMENTO.ATENDIMENTOPROTOCOLOMIGRACAO
					WHERE IDATENDIMENTOPROTOCOLOMIGRACAO = V_CARGAATENDIMENTOTV(i).IDATENDIMENTOPROTOCOLOMIGRACAO
					AND IDSISTEMAORIGEM = V_CARGAATENDIMENTOTV(i).IDSISTEMAORIGEM;
					
					-- Sistema encontra na entidade atendimento.atendimentoProtocoloMigracao: 
					IF V_COUNT_ATENDIMENTO > 0
					THEN
						BEGIN
						-- Sistema insere um registro conforme descrito abaixo
						INSERT /*+ APPEND */ INTO ATENDIMENTO.ATENDIMENTOMIGRACAO (
						  IDATENDIMENTO
						  ,IDPROCESSO
						  ,NMCONTATO
						  ,OBSATENDIMENTO
						  ,NMUSUARIOBKO
						  ,NMUSUARIOGRUPOBKO
						  ,NMCLIENTEUSUARIO
						  ,INPROCESSOTECNICO
						  ,INCLIENTEVIVO
						  ,NMTIPOCLIENTE
						  ,NMCPF_CNPJ
						  ,NMEMAILCONTATO
						  ,NMTELEFONECONTATO
						  ,NMTIPOCARTEIRA
						  ,NMSEGMENTACAO
						  ,IDLINHATELEFONICA
						  ,NRLINHA
						  ,NMTIPOSERVICO
						  ,IDSISTEMAORIGEM
						  ,NMPROCESSO
						  ,DTTRATAMENTOBKO
						  ,DTATUALIZACAO
						  ,DTIMPORTACAO
						  ,OBSHISTORICO
						  ,IDPESSOADEPARA
						  ,IDTIPOATENDIMENTO
						  ,IDUSUARIOALTERACAO
						  ,DTULTIMAALTERACAO
						  ,IDREGIONAL
						  ,INLINHACANCELADA
						  ,IDATENDIMENTOPROTOCOLOMIGRACAO
						  ,CDOS
						  ,IDCANAL
						) VALUES (
						  ATENDIMENTO.ATENDIMENTOMIGRACAOSQ.NEXTVAL
						  ,Null
						  ,V_CARGAATENDIMENTOTV(i).NMCONTATO
						  ,V_CARGAATENDIMENTOTV(i).OBSATENDIMENTO
						  ,Null
						  ,Null
						  ,V_CARGAATENDIMENTOTV(i).NMCLIENTEUSUARIO
						  ,0
						  ,0
						  ,DECODE(V_CARGAATENDIMENTOTV(i).NMTIPOCLIENTE, '1', '0', '2', '1', NULL)
						  ,V_CARGAATENDIMENTOTV(i).NMCPF_CNPJ
						  ,V_CARGAATENDIMENTOTV(i).NMEMAILCONTATO
						  ,V_CARGAATENDIMENTOTV(i).NMTELEFONECONTATO
						  ,'NC'
						  ,'NC'
						  ,Null
						  ,Null
						  ,'TV'
						  ,V_CARGAATENDIMENTOTV(i).IDSISTEMAORIGEM
						  ,V_CARGAATENDIMENTOTV(i).NMPROCESSO
						  ,Null
						  ,Sysdate
						  ,Sysdate
						  ,Null
						  ,NULL
						  ,0
						  ,V_IDUSUARIO
						  ,Sysdate
						  ,Null
						  ,0
						  ,V_CARGAATENDIMENTOTV(i).IDATENDIMENTOPROTOCOLOMIGRACAO
						  ,V_CARGAATENDIMENTOTV(i).CDOS
						  ,V_CARGAATENDIMENTOTV(i).IDCANAL
						);
						EXCEPTION
							WHEN OTHERS
							THEN
								LOAD.LOG_CARGAPROTOCOLOSTV(
									V_CARGAATENDIMENTOTV(i).IDSISTEMAORIGEM||V_FIELD_DELIMITER||
									V_CARGAATENDIMENTOTV(i).IDATENDIMENTOPROTOCOLOMIGRACAO||V_FIELD_DELIMITER||
									V_CARGAATENDIMENTOTV(i).NMCONTATO||V_FIELD_DELIMITER||
									V_CARGAATENDIMENTOTV(i).OBSATENDIMENTO||V_FIELD_DELIMITER||
									V_CARGAATENDIMENTOTV(i).NMCLIENTEUSUARIO||V_FIELD_DELIMITER||
									V_CARGAATENDIMENTOTV(i).NMTIPOCLIENTE||V_FIELD_DELIMITER||
									V_CARGAATENDIMENTOTV(i).NMCPF_CNPJ||V_FIELD_DELIMITER||
									V_CARGAATENDIMENTOTV(i).NMEMAILCONTATO||V_FIELD_DELIMITER||
									V_CARGAATENDIMENTOTV(i).NMTELEFONECONTATO||V_FIELD_DELIMITER||
									V_CARGAATENDIMENTOTV(i).NMPROCESSO||V_FIELD_DELIMITER||
									V_CARGAATENDIMENTOTV(i).CDOS||V_FIELD_DELIMITER||
									V_CARGAATENDIMENTOTV(i).IDCANAL||V_FIELD_DELIMITER||
									'Erro oracle ['||SQLCODE||']: '||SQLERRM
									,FALSE
								);
								:VO_COUNT_REJEITADOS := :VO_COUNT_REJEITADOS + 1;
						END;
					ELSE
						LOAD.LOG_CARGAPROTOCOLOSTV(
							V_CARGAATENDIMENTOTV(i).IDSISTEMAORIGEM||V_FIELD_DELIMITER||
							V_CARGAATENDIMENTOTV(i).IDATENDIMENTOPROTOCOLOMIGRACAO||V_FIELD_DELIMITER||
							V_CARGAATENDIMENTOTV(i).NMCONTATO||V_FIELD_DELIMITER||
							V_CARGAATENDIMENTOTV(i).OBSATENDIMENTO||V_FIELD_DELIMITER||
							V_CARGAATENDIMENTOTV(i).NMCLIENTEUSUARIO||V_FIELD_DELIMITER||
							V_CARGAATENDIMENTOTV(i).NMTIPOCLIENTE||V_FIELD_DELIMITER||
							V_CARGAATENDIMENTOTV(i).NMCPF_CNPJ||V_FIELD_DELIMITER||
							V_CARGAATENDIMENTOTV(i).NMEMAILCONTATO||V_FIELD_DELIMITER||
							V_CARGAATENDIMENTOTV(i).NMTELEFONECONTATO||V_FIELD_DELIMITER||
							V_CARGAATENDIMENTOTV(i).NMPROCESSO||V_FIELD_DELIMITER||
							V_CARGAATENDIMENTOTV(i).CDOS||V_FIELD_DELIMITER||
							V_CARGAATENDIMENTOTV(i).IDCANAL||V_FIELD_DELIMITER||
							'Nao encontrado em ATENDIMENTO.ATENDIMENTOPROTOCOLOMIGRACAO'
							,FALSE
						);
						:VO_COUNT_REJEITADOS := :VO_COUNT_REJEITADOS + 1;
					END IF;
				ELSE
					-- Sistema verifica que não foram informados todos os campos obrigatórios.
					LOAD.LOG_CARGAPROTOCOLOSTV(
						V_CARGAATENDIMENTOTV(i).IDSISTEMAORIGEM||V_FIELD_DELIMITER||
						V_CARGAATENDIMENTOTV(i).IDATENDIMENTOPROTOCOLOMIGRACAO||V_FIELD_DELIMITER||
						V_CARGAATENDIMENTOTV(i).NMCONTATO||V_FIELD_DELIMITER||
						V_CARGAATENDIMENTOTV(i).OBSATENDIMENTO||V_FIELD_DELIMITER||
						V_CARGAATENDIMENTOTV(i).NMCLIENTEUSUARIO||V_FIELD_DELIMITER||
						V_CARGAATENDIMENTOTV(i).NMTIPOCLIENTE||V_FIELD_DELIMITER||
						V_CARGAATENDIMENTOTV(i).NMCPF_CNPJ||V_FIELD_DELIMITER||
						V_CARGAATENDIMENTOTV(i).NMEMAILCONTATO||V_FIELD_DELIMITER||
						V_CARGAATENDIMENTOTV(i).NMTELEFONECONTATO||V_FIELD_DELIMITER||
						V_CARGAATENDIMENTOTV(i).NMPROCESSO||V_FIELD_DELIMITER||
						V_CARGAATENDIMENTOTV(i).CDOS||V_FIELD_DELIMITER||
						V_CARGAATENDIMENTOTV(i).IDCANAL||V_FIELD_DELIMITER||
						'Nao foram informados todos os campos obrigatorios'
						,FALSE
					);
					:VO_COUNT_REJEITADOS := :VO_COUNT_REJEITADOS + 1;
				END IF;
				
				UPDATE LOAD.CARGAATENDIMENTOTV SET STATUS = 1 WHERE ROWID = V_CARGAATENDIMENTOTV(i).ROWID;
			END LOOP;
			COMMIT;
			LOAD.LOG_CARGAPROTOCOLOSTV('COMMIT: Registros processados: '||V_COUNT||' de '||V_COUNT_TOTAL);
			LOAD.LOG_CARGAPROTOCOLOSTV('COMMIT: Registros rejeitados: '||:VO_COUNT_REJEITADOS);
	
			IF TO_CHAR(SYSDATE, 'HH24MI') >= TO_CHAR(V_HORARIO_LIMITE_EXEC, 'HH24MI')
			THEN
				:VO_CDERRO := 98;
				:VO_DSERRO := 'Atingido horario limite de execucao: '||TO_CHAR(V_HORARIO_LIMITE_EXEC, V_PARAM_DATE_MASK);
				
				LOAD.LOG_CARGAPROTOCOLOSTV(:VO_DSERRO);
				EXIT;
			END IF;
			
			EXIT WHEN V_CARGAATENDIMENTOTV.COUNT < V_PARAM_COMMIT;
		END LOOP;
		
		CLOSE C_CARGAATENDIMENTOTV;		
		
	END IF;

	LOAD.LOG_CARGAPROTOCOLOSTV('CDERRO: '||:VO_CDERRO||', DSERRO: '||:VO_DSERRO);
	LOAD.LOG_CARGAPROTOCOLOSTV('>>> CARGAATENDIMENTOTV : FIM DO PROCESSAMENTO <<<');
EXCEPTION
	WHEN OTHERS THEN
		:VO_CDERRO := 99;
		:VO_DSERRO := 'ERRO NR.: ' || SQLCODE || ' - DESCRICAO DO ERRO: ' || SQLERRM;
	
		ROLLBACK;
		LOAD.LOG_CARGAPROTOCOLOSTV('CDERRO: '||:VO_CDERRO||', DSERRO: '||:VO_DSERRO);
		LOAD.LOG_CARGAPROTOCOLOSTV('>>> CARGAATENDIMENTOTV : FIM DO PROCESSAMENTO (COM EXCEPTION) <<<');
END;
/

SET TIMING OFF;

select CHR(10) from dual;
select 'VO_CDERRO', :VO_CDERRO from dual;
select 'VO_DSERRO', :VO_DSERRO from dual;
select 'VO_COUNT_REJEITADOS', :VO_COUNT_REJEITADOS from dual;

SPOOL OFF;

exit :VO_CDERRO;
