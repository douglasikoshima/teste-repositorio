SET SQLPROMPT '';
SET TERMOUT OFF;
SET FEEDBACK OFF;
SET ECHO OFF;
SET AUTOTRACE OFF;
SET FLUSH ON;
SET HEADING OFF;
SET SERVEROUTPUT ON;
SET TIME OFF;
SET TIMING ON;
SET TRIMOUT ON;
SET TRIMSPOOL ON;
SET PAUSE OFF;
SET SHOWMODE OFF;
SET SQLBLANKLINES OFF;
SET SQLNUMBER OFF;
SET TAB OFF;
SET VERIFY OFF;
SET WRAP OFF;
SET FEED OFF;
SET NEWPAGE NONE;
SET LINESIZE 2048;

WHENEVER SQLERROR EXIT SQL.SQLCODE
WHENEVER OSERROR EXIT FAILURE 

-- Spool buffer do sqlplus
SPOOL &1;

VARIABLE VO_CDERRO NUMBER;
VARIABLE VO_DSERRO VARCHAR2(512);
VARIABLE VO_COUNT_REJEITADOS NUMBER;

DECLARE
	V_COUNT NUMBER := 0;
	V_PARAM_COMMIT NUMBER := '&2';
	V_PARAM_DATE_MASK VARCHAR2(64) := '&3';
	V_PARAM_DATE_LIMIT APOIO.PARAMETRO.DSVALORPARAMETRO%TYPE := '&4';
	V_FIELD_DELIMITER CHAR(1) := '&5';
	V_IDUSUARIO NUMBER := '&6';
	V_COUNT_TOTAL NUMBER := '&7';
	V_HORARIO_LIMITE_EXEC DATE;
	
	CURSOR C_CARGAPROTOCOLOTV IS SELECT /*+ PARALLEL(L, 8) */ L.*, ROWID FROM LOAD.CARGAPROTOCOLOTV L WHERE L.STATUS = 0;
	TYPE T_CARGAPROTOCOLOTV IS TABLE OF C_CARGAPROTOCOLOTV%ROWTYPE INDEX BY PLS_INTEGER;
	V_CARGAPROTOCOLOTV T_CARGAPROTOCOLOTV;
	
	V_COUNT_ATENDIMENTO NUMBER;
	V_IDPESSOADEPARA CUSTOMER.PESSOADEPARA.IDPESSOADEPARA%TYPE;
BEGIN
	LOAD.LOG_CARGAPROTOCOLOSTV('>>> CARGAPROTOCOLOTV : INICIO DO PROCESSAMENTO <<<');
	
	:VO_CDERRO := 0;
	:VO_DSERRO := 'SUCESSO';
	:VO_COUNT_REJEITADOS := 0;
	
	IF V_COUNT_TOTAL = 0
	THEN
		LOAD.LOG_CARGAPROTOCOLOSTV('Obtendo contagem de registros em CARGAPROTOCOLOTV');
		SELECT /*+ parallel(6) */ COUNT(1)
		INTO V_COUNT_TOTAL
		FROM LOAD.CARGAPROTOCOLOTV
		--WHERE STATUS = 0
		;
	END IF;
	LOAD.LOG_CARGAPROTOCOLOSTV('Total de registros em CARGAPROTOCOLOTV: '||V_COUNT_TOTAL);
	
	LOAD.LOG_CARGAPROTOCOLOSTV('Obtendo cdparametro CARGAPROTOCOLOSTV_HORARIO_LIMITE_EXEC');
	SELECT /*+ PARALLEL(4) */ TO_DATE(DSVALORPARAMETRO, V_PARAM_DATE_MASK)
	INTO V_HORARIO_LIMITE_EXEC
	FROM APOIO.PARAMETRO 
	WHERE CDPARAMETRO = V_PARAM_DATE_LIMIT;
	LOAD.LOG_CARGAPROTOCOLOSTV('Valor do cdparametro CARGAPROTOCOLOSTV_HORARIO_LIMITE_EXEC: '||TO_CHAR(V_HORARIO_LIMITE_EXEC, V_PARAM_DATE_MASK));
	
	IF TO_CHAR(SYSDATE, 'HH24MI') >= TO_CHAR(V_HORARIO_LIMITE_EXEC, 'HH24MI')
	THEN
		:VO_CDERRO := 98;
		:VO_DSERRO := 'Atingido horario limite de execucao: '||TO_CHAR(V_HORARIO_LIMITE_EXEC, V_PARAM_DATE_MASK);
		
		LOAD.LOG_CARGAPROTOCOLOSTV(:VO_DSERRO);
	ELSE
		LOAD.LOG_CARGAPROTOCOLOSTV('Processando registros..');
		OPEN C_CARGAPROTOCOLOTV;
		LOOP
			FETCH C_CARGAPROTOCOLOTV BULK COLLECT INTO V_CARGAPROTOCOLOTV LIMIT V_PARAM_COMMIT;
			V_COUNT := V_COUNT + V_CARGAPROTOCOLOTV.COUNT;
			FOR i IN 1 .. V_CARGAPROTOCOLOTV.COUNT
			LOOP
				-- O Sistema verifica que os campos abaixo foram preenchidos.
				IF V_CARGAPROTOCOLOTV(i).IDPESSOASISTEMAORIGEM IS NOT NULL
				AND V_CARGAPROTOCOLOTV(i).IDSISTEMAORIGEM IS NOT NULL
				AND V_CARGAPROTOCOLOTV(i).IDATENDIMENTOPROTOCOLOMIGRACAO IS NOT NULL 
				AND V_CARGAPROTOCOLOTV(i).DTABERTURA IS NOT NULL 
				AND V_CARGAPROTOCOLOTV(i).DTENCERRAMENTO IS NOT NULL  
				THEN
					BEGIN
					SELECT /*+ parallel(8) */ COUNT(1)
					INTO V_COUNT_ATENDIMENTO
					FROM ATENDIMENTO.ATENDIMENTOPROTOCOLOMIGRACAO
					WHERE IDATENDIMENTOPROTOCOLOMIGRACAO = V_CARGAPROTOCOLOTV(i).IDATENDIMENTOPROTOCOLOMIGRACAO
					AND IDSISTEMAORIGEM = V_CARGAPROTOCOLOTV(i).IDSISTEMAORIGEM;
					
					-- Sistema nao encontra na entidade atendimento.atendimentoProtocoloMigracao
					IF V_COUNT_ATENDIMENTO = 0
					THEN
						BEGIN
							-- Localiza o IDPESSOADEPARA atrelado ao protocolo
							SELECT /*+ parallel(8) */ PDP.IDPESSOADEPARA
							INTO V_IDPESSOADEPARA
							FROM CUSTOMER.PESSOADEPARA PDP, CUSTOMER.PESSOA P
							WHERE PDP.IDPESSOA = P.IDPESSOA
							AND P.IDPESSOASISTEMAORIGEM = V_CARGAPROTOCOLOTV(i).IDPESSOASISTEMAORIGEM
							AND P.IDSISTEMAORIGEM = V_CARGAPROTOCOLOTV(i).IDSISTEMAORIGEM;
						
							-- Sistema insere um registro conforme descrito abaixo
							INSERT /*+ APPEND */ INTO ATENDIMENTO.ATENDIMENTOPROTOCOLOMIGRACAO (
							  IDATENDIMENTOPROTOCOLOMIGRACAO
							  ,CDAREAREGISTRO
							  ,NRTELEFONE
							  ,IDSISTEMAORIGEM
							  ,IDPESSOADEPARA
							  ,CDCONTA
							  ,DTABERTURA
							  ,DTENCERRAMENTO
							  ,QTPROCESSOABERTO
							  ,QTPROCESSOPENDENTE
							  ,IDLINHATELEFONICA
							  ,IDTIPOABERTURAPROTOCOLO
							  ,IDUSUARIOALTERACAO
							  ,DTULTIMAALTERACAO
							  ,INSINCRONIZADO
							  ,IDTIPOFECHAMENTOPROTOCOLO
							  ,NMCONTATO
							  ,CDAREAREGISTROORIGEM
							  ,NRTELEFONEORIGEM
							  ,IDUSUARIOCRIACAO
							  ,IDUSUARIOFINALIZACAO
							  ,IDULTIMALINHAPOSICIONADA
							  ,NRPROTOCOLOPAI
							  ,INPROTOCOLOASSOCIADO
							  ,CDORIGEM
							) VALUES (
							  V_CARGAPROTOCOLOTV(i).IDATENDIMENTOPROTOCOLOMIGRACAO
							  ,Null
							  ,Null
							  ,V_CARGAPROTOCOLOTV(i).IDSISTEMAORIGEM
							  ,V_IDPESSOADEPARA
							  ,NULL
							  ,V_CARGAPROTOCOLOTV(i).DTABERTURA
							  ,V_CARGAPROTOCOLOTV(i).DTENCERRAMENTO
							  ,0
							  ,0
							  ,Null
							  ,0
							  ,V_IDUSUARIO
							  ,SYSDATE
							  ,1
							  ,1
							  ,V_CARGAPROTOCOLOTV(i).NMCONTATO
							  ,V_CARGAPROTOCOLOTV(i).CDAREAREGISTROORIGEM
							  ,V_CARGAPROTOCOLOTV(i).NRTELEFONEORIGEM
							  ,V_IDUSUARIO
							  ,V_IDUSUARIO
							  ,Null
							  ,Null
							  ,Null
							  ,'TV'
							);
						EXCEPTION
							WHEN NO_DATA_FOUND
							THEN
								-- Sistema nao localiza o IDPESSOADEPARA atrelado ao protocolo
								LOAD.LOG_CARGAPROTOCOLOSTV(
									V_CARGAPROTOCOLOTV(i).IDPESSOASISTEMAORIGEM||V_FIELD_DELIMITER||
									V_CARGAPROTOCOLOTV(i).IDSISTEMAORIGEM||V_FIELD_DELIMITER||
									V_CARGAPROTOCOLOTV(i).IDATENDIMENTOPROTOCOLOMIGRACAO||V_FIELD_DELIMITER||
									V_CARGAPROTOCOLOTV(i).DTABERTURA||V_FIELD_DELIMITER||
									V_CARGAPROTOCOLOTV(i).DTENCERRAMENTO||V_FIELD_DELIMITER||
									V_CARGAPROTOCOLOTV(i).NMCONTATO||V_FIELD_DELIMITER||
									V_CARGAPROTOCOLOTV(i).CDAREAREGISTROORIGEM||V_FIELD_DELIMITER||
									V_CARGAPROTOCOLOTV(i).NRTELEFONEORIGEM||V_FIELD_DELIMITER||
									'Sistema nao localizou o IDPESSOADEPARA atrelado ao protocolo'
									,FALSE
								);
								:VO_COUNT_REJEITADOS := :VO_COUNT_REJEITADOS + 1;
						END;
					END IF;
					EXCEPTION
						WHEN OTHERS
						THEN
							-- Sistema verifica que não foram informados todos os campos obrigatórios.
							LOAD.LOG_CARGAPROTOCOLOSTV(
								V_CARGAPROTOCOLOTV(i).IDPESSOASISTEMAORIGEM||V_FIELD_DELIMITER||
								V_CARGAPROTOCOLOTV(i).IDSISTEMAORIGEM||V_FIELD_DELIMITER||
								V_CARGAPROTOCOLOTV(i).IDATENDIMENTOPROTOCOLOMIGRACAO||V_FIELD_DELIMITER||
								V_CARGAPROTOCOLOTV(i).DTABERTURA||V_FIELD_DELIMITER||
								V_CARGAPROTOCOLOTV(i).DTENCERRAMENTO||V_FIELD_DELIMITER||
								V_CARGAPROTOCOLOTV(i).NMCONTATO||V_FIELD_DELIMITER||
								V_CARGAPROTOCOLOTV(i).CDAREAREGISTROORIGEM||V_FIELD_DELIMITER||
								V_CARGAPROTOCOLOTV(i).NRTELEFONEORIGEM||V_FIELD_DELIMITER||
								'Erro oracle ['||SQLCODE||']: '||SQLERRM
								,FALSE
							);
							:VO_COUNT_REJEITADOS := :VO_COUNT_REJEITADOS + 1;
					END;
				ELSE
					-- Sistema verifica que não foram informados todos os campos obrigatórios.
					LOAD.LOG_CARGAPROTOCOLOSTV(
						V_CARGAPROTOCOLOTV(i).IDPESSOASISTEMAORIGEM||V_FIELD_DELIMITER||
						V_CARGAPROTOCOLOTV(i).IDSISTEMAORIGEM||V_FIELD_DELIMITER||
						V_CARGAPROTOCOLOTV(i).IDATENDIMENTOPROTOCOLOMIGRACAO||V_FIELD_DELIMITER||
						V_CARGAPROTOCOLOTV(i).DTABERTURA||V_FIELD_DELIMITER||
						V_CARGAPROTOCOLOTV(i).DTENCERRAMENTO||V_FIELD_DELIMITER||
						V_CARGAPROTOCOLOTV(i).NMCONTATO||V_FIELD_DELIMITER||
						V_CARGAPROTOCOLOTV(i).CDAREAREGISTROORIGEM||V_FIELD_DELIMITER||
						V_CARGAPROTOCOLOTV(i).NRTELEFONEORIGEM||V_FIELD_DELIMITER||
						'Nao foram informados todos os campos obrigatorios'
						,FALSE
					);
					:VO_COUNT_REJEITADOS := :VO_COUNT_REJEITADOS + 1;
				END IF;
				
				UPDATE LOAD.CARGAPROTOCOLOTV SET STATUS = 1 WHERE ROWID = V_CARGAPROTOCOLOTV(i).ROWID;
			END LOOP;
			
			COMMIT;
			LOAD.LOG_CARGAPROTOCOLOSTV('COMMIT: Registros processados: '||V_COUNT||' de '||V_COUNT_TOTAL);
			LOAD.LOG_CARGAPROTOCOLOSTV('COMMIT: Registros rejeitados: '||:VO_COUNT_REJEITADOS);
	
			IF TO_CHAR(SYSDATE, 'HH24MI') >= TO_CHAR(V_HORARIO_LIMITE_EXEC, 'HH24MI')
			THEN
				:VO_CDERRO := 98;
				:VO_DSERRO := 'Atingido horario limite de execucao: '||TO_CHAR(V_HORARIO_LIMITE_EXEC, V_PARAM_DATE_MASK);
				
				LOAD.LOG_CARGAPROTOCOLOSTV(:VO_DSERRO);
				EXIT;
			END IF;
			
			EXIT WHEN V_CARGAPROTOCOLOTV.COUNT < V_PARAM_COMMIT;
		END LOOP;
		
		CLOSE C_CARGAPROTOCOLOTV;		
	END IF;

	LOAD.LOG_CARGAPROTOCOLOSTV('CDERRO: '||:VO_CDERRO||', DSERRO: '||:VO_DSERRO);
	LOAD.LOG_CARGAPROTOCOLOSTV('>>> CARGAPROTOCOLOTV : FIM DO PROCESSAMENTO <<<');
EXCEPTION
	WHEN OTHERS THEN
		:VO_CDERRO := 99;
		:VO_DSERRO := 'ERRO NR.: ' || SQLCODE || ' - DESCRICAO DO ERRO: ' || SQLERRM;
	
		ROLLBACK;
		LOAD.LOG_CARGAPROTOCOLOSTV('CDERRO: '||:VO_CDERRO||', DSERRO: '||:VO_DSERRO);
		LOAD.LOG_CARGAPROTOCOLOSTV('>>> CARGAPROTOCOLOTV : FIM DO PROCESSAMENTO (COM EXCEPTION) <<<');
END;
/

SET TIMING OFF;

select CHR(10) from dual;
select 'VO_CDERRO', :VO_CDERRO from dual;
select 'VO_DSERRO', :VO_DSERRO from dual;
select 'VO_COUNT_REJEITADOS', :VO_COUNT_REJEITADOS from dual;

SPOOL OFF;

exit :VO_CDERRO;
