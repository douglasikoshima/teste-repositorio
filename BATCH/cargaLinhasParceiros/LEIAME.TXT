======================================
BATCH......: CARGALINHASPARCEIROS
Criado por.: Eder Jani Martins (19/02/2015)
Funcional..: Marcia Santana Silva
======================================

====================================== 
OBJETIVO
====================================== 
	Processar os arquivos CARGA_MASSIVA_LINHAS_*.txt que contem os dados relativos aos revendedores (parceiros VIVO), para que
	acessem funcionalidades especificas para revenda na URA
====================================== 

====================================== 
ESCOPO
====================================== 
	Melhorar o tempo de processamento, que atualmente leva 36 horas para processar 750.000 registros.
====================================== 

====================================== 
ESTRUTURA DO ARQUIVO DE ENTRADA
====================================== 
Os arquivos de entrada (CARGA_MASSIVA_LINHAS_*.txt) contem 4 campos:
	ACAO...........: Pode ser I (Inclusao) e R (Remocao)
	NRLINHA........: DDD + Numero da linha
	IDCLASSIFICACAO: ID da classificacao do cliente
	IDPARCEIRO.....: ID do parceiro (e opcional, na maioria dos casos nao esta presente)

====================================== 
ACOES EXECUTADAS PELO BATCH
====================================== 
Acoes:
	I (com IDPARCEIRO): 
		Verifica se o DDD (CDAREAREGISTRO)+ NRLINHA + IDPARCEIRO existem na tabela SAPOIO_OW.LINHAPARCEIRO:
			- Se existe....: Não faz nada
			- Se NÃO existe: Insere os dados na tabela SAPOIO_OW.LINHAPARCEIRO

	I (sem IDPARCEIRO): 
		Verifica se o DDD (CDAREAREGISTRO) + NRLINHA existem na tabela SAPOIO_OW.LINHAINTERCEPTACAO:
			- Se existe....: Não faz nada
			- Se NÃO existe: Insere os dados na tabela SAPOIO_OW.LINHAINTERCEPTACAO

	R (com IDPARCEIRO): 
		Busca os campos IDLINHAPARCEIRO, IDCLASSIFICACAO e IDUSUARIOINCLUSAO atraves dos campos CDAREAREGISTRO + NRLINHA na tabela SAPOIO_OW.LINHAPARCEIRO:
			- Se existe....: Apara o registro da tabela SAPOIO_OW.LINHAPARCEIRO e insere o historico em SAPOIO_OW.HISTORICOLINHAPARCEIRO
			- Se NÃO existe: Não faz nada
		

	R (sem IDPARCEIRO): 
		Busca os campos IDLINHAPARCEIRO, IDCLASSIFICACAO e IDUSUARIOINCLUSAO atraves dos campos CDAREAREGISTRO + NRLINHA na tabela SAPOIO_OW.LINHAINTERCEPTACAO:
			- Se existe....: Apara o registro da tabela SAPOIO_OW.LINHAINTERCEPTACAO e insere o historico em SAPOIO_OW.HISTORICOLINHAINTERCEPTACAO
			- Se NÃO existe: Não faz nada


====================================== 
ARQUIVOS GERADOS PELO BATCH
====================================== 
O BATCH segrega o arquivo original (CARGA_MASSIVA_LINHAS_*.txt) em outros 4:
	- CARGA_MASSIVA_LINHAS_*.I.csv     : Insere em SAPOIO_OW.LINHAPARCEIRO
	- CARGA_MASSIVA_LINHAS_*.I.PAR.csv : Insere em SAPOIO_OW.LINHAINTERCEPTACAO
	- CARGA_MASSIVA_LINHAS_*.R.csv     : Apaga em SAPOIO_OW.LINHAPARCEIRO e insere historico em SAPOIO_OW.HISTORICOLINHAPARCEIRO
	- CARGA_MASSIVA_LINHAS_*.R.PAR.csv : Apaga em SAPOIO_OW.LINHAINTERCEPTACAO e insere historico em SAPOIO_OW.HISTORICOLINHAINTERCEPTACAO

====================================== 

======================================
Descrição de funcionamento do BATCH
====================================== 
1.	Lê o arquivo CARGA_MASSIVA_LINHAS_*.txt [se não existe mais arquivos finaliza com sucesso];
2.	Divide o arquivo em um ou mais arquivos (dependendo dos campos ACAO e IDPARCEIRO):
o	CARGA_MASSIVA_LINHAS_*.I.csv (para inserção SEM o campo IDPARCEIRO): Insere em SAPOIO_OW.LINHAPARCEIRO
o	CARGA_MASSIVA_LINHAS_*.I.PAR.csv (para inserção COM o campo IDPARCEIRO): Insere em SAPOIO_OW.LINHAINTERCEPTACAO
o	CARGA_MASSIVA_LINHAS_*.R.csv (para exclusão SEM o campo IDPARCEIRO): Apaga em SAPOIO_OW.LINHAPARCEIRO e insere histórico em SAPOIO_OW.HISTORICOLINHAPARCEIRO
o	CARGA_MASSIVA_LINHAS_*.R.PAR.csv (para exclusão COM o campo IDPARCEIRO): Apaga em SAPOIO_OW.LINHAINTERCEPTACAO e insere histórico em SAPOIO_OW.HISTORICOLINHAINTERCEPTACAO
3.	Verifica se o arquivo CARGA_MASSIVA_LINHAS_*.I.csv existe [Se não existe pula para o passo 7];
4.	Trunca a tabela LOAD.CARGALIPAR_TRUNCATABELA_01;
5.	Importa o arquivo CARGA_MASSIVA_LINHAS_*.I.csv (criado no passo 2) para a tabela LOAD.CARGALIPAR_TRUNCATABELA_01;
6.	Insere o resultado desta pesquisa na tabela SAPOIO_OW.LINHAINTERCEPTACAO:
                SELECT SAPOIO_OW.LINHAINTERCEPTACAOSQ.NEXTVAL,
                                  IDCLASSIFICACAO,
                                  CDAREAREGISTRO,
                                  NRLINHA,
                                  0 AS IDUSUARIOINCLUSAO,
                                  SYSDATE AS DTINCLUSAO,
                                  0 AS IDUSUARIOALTERACAO
                  FROM (
                                               SELECT CLP.IDCLASSIFICACAO, 
                                                                  CLP.CDAREAREGISTRO, 
                                                                  CLP.NRLINHA, 
                                                                  LI.IDLINHAINTERCEPTACAO 
                                                 FROM LOAD.CARGALINHASPARCEIROS_01 CLP,
                                                                  SAPOIO_OW.LINHAINTERCEPTACAO LI
                                                WHERE CLP.CDAREAREGISTRO = LI.CDAREAREGISTRO (+)
                                                  AND CLP.NRLINHA = LI.NRLINHA (+)
                                  ) INCLUSAO
                 WHERE INCLUSAO.IDLINHAINTERCEPTACAO IS NULL;
7.	Verifica se o arquivo CARGA_MASSIVA_LINHAS_*.I.PAR.csv existe [Se não existe pula para o passo 11];
8.	Trunca a tabela LOAD.CARGALIPAR_TRUNCATABELA_01;
9.	Importa o arquivo CARGA_MASSIVA_LINHAS_*.I.PAR.csv (criado no passo 2) para a tabela LOAD.CARGALIPAR_TRUNCATABELA_01;
10.	Insere o resultado desta pesquisa na tabela SAPOIO_OW.LINHAPARCEIRO:
                SELECT SAPOIO_OW.LINHAPARCEIROSQ.NEXTVAL,
                                  CDAREAREGISTRO,
                                  NRLINHA,
                                  IDCLASSIFICACAO,
                                  IDPARCEIRO,
                                  SYSDATE AS DTINCLUSAO,
                                  SYSDATE AS DTULTIMAALTERACAO,
                                  0 AS IDUSUARIOINCLUSAO,
                                  0 AS IDUSUARIOALTERACAO
                  FROM (
                                               SELECT CLP.IDCLASSIFICACAO, 
                                                                  CLP.CDAREAREGISTRO, 
                                                                  CLP.NRLINHA,
                                                                  CLP.IDPARCEIRO,
                                                                  LP.IDLINHAPARCEIRO
                                                 FROM LOAD.CARGALINHASPARCEIROS_01 CLP,
                                                                  SAPOIO_OW.LINHAPARCEIRO LP
                                                WHERE CLP.CDAREAREGISTRO = LP.CDAREAREGISTRO (+)
                                                  AND CLP.NRLINHA = LP.NRLINHA (+)
                                                  AND CLP.IDPARCEIRO = LP.IDPARCEIRO (+)
               AND CLP.IDPARCEIRO IS NOT NULL --Evita problemas se uma linha foi importada do arquivo sem IDPARCEIRO
                                  ) INCLUSAO_PAR
                 WHERE INCLUSAO_PAR.IDLINHAPARCEIRO IS NULL;--Para nao inserir linhas ja existentes
11.	Verifica se o arquivo CARGA_MASSIVA_LINHAS_*.R.csv existe [Se não existe pula para o passo 18];
12.	Trunca a tabela LOAD.CARGALIPAR_TRUNCATABELA_01;
13.	Importa o arquivo CARGA_MASSIVA_LINHAS_*.R.csv (criado no passo 2) para a tabela LOAD.CARGALIPAR_TRUNCATABELA_01;
14.	Trunca a tabela LOAD.CARGALIPAR_TRUNCATABELA_02;
15.	Insere o resultado desta pesquisa na tabela LOAD.CARGALIPAR_TRUNCATABELA_02:
                SELECT CLP.CDAREAREGISTRO, 
                                  CLP.NRLINHA,
                                  LI.IDCLASSIFICACAO,
                                  LI.IDUSUARIOINCLUSAO,
                                  LI.IDLINHAINTERCEPTACAO,
                                  SYSDATE AS DTINCLUSAO
                  FROM LOAD.CARGALINHASPARCEIROS_01 CLP,
                                  SAPOIO_OW.LINHAINTERCEPTACAO LI
                 WHERE CLP.NRLINHA = LI.NRLINHA
                   AND CLP.CDAREAREGISTRO = LI.CDAREAREGISTRO;
16.	Insere o resultado desta pesquisa na tabela SAPOIO_OW.HISTORICOLINHAINTERCEPTACAO
                SELECT SAPOIO_OW.HISTORICOLINHAINTERCEPTACAOSQ.NEXTVAL,
                                  CLP.CDAREAREGISTRO, 
                                  CLP.NRLINHA,
                                  LI.IDCLASSIFICACAO,
                                  LI.IDUSUARIOINCLUSAO,
                                  0 AS IDUSUARIOINCLUSAOHISTORICO,--Usuario de exclusão deste batch, indica que foi o BATCH quem apagou
                                  CLP.DTINCLUSAO
                  FROM LOAD.CARGALINHASPARCEIROS_02 CLP,
                                  SAPOIO_OW.LINHAINTERCEPTACAO LI
                 WHERE CLP.IDLINHAINTERCEPTACAO = LI.IDLINHAINTERCEPTACAO;
17.	Apaga todas as linhas da tabela SAPOIO_OW.LINHAINTERCEPTACAO que existem em LOAD.CARGALINHASPARCEIROS_02;
18.	Verifica se o arquivo CARGA_MASSIVA_LINHAS_*.R.csv existe [Se não existe pula para o passo 25];
19.	Trunca a tabela LOAD.CARGALIPAR_TRUNCATABELA_01;
20.	Importa o arquivo CARGA_MASSIVA_LINHAS_*.R.PAR.csv (criado no passo 2) para a tabela LOAD.CARGALIPAR_TRUNCATABELA_01;
21.	Trunca a tabela LOAD.CARGALIPAR_TRUNCATABELA_02;
22.	Insere o resultado desta pesquisa na tabela LOAD.CARGALIPAR_TRUNCATABELA_02:
SELECT CLP.CDAREAREGISTRO, 
                   CLP.NRLINHA,
                   LP.IDCLASSIFICACAO,
                   LP.IDUSUARIOINCLUSAO,
                   LP.IDLINHAPARCEIRO,
                   SYSDATE AS DTINCLUSAO
  FROM LOAD.CARGALINHASPARCEIROS_01 CLP,
                   SAPOIO_OW.LINHAPARCEIRO LP
 WHERE CLP.CDAREAREGISTRO = LP.CDAREAREGISTRO
   AND CLP.NRLINHA = LP.NRLINHA
   AND CLP.IDPARCEIRO = LP.IDPARCEIRO;
23.	Insere o resultado desta pesquisa na tabela SAPOIO_OW.HISTORICOLINHAPARCEIRO:
                SELECT SAPOIO_OW.HISTORICOLINHAPARCEIROSQ.NEXTVAL,
                                  CLP.CDAREAREGISTRO, 
                                  CLP.NRLINHA,
                                  LP.IDCLASSIFICACAO,
                                  LP.IDPARCEIRO,
                                  LP.IDUSUARIOINCLUSAO,
                                  0 AS IDUSUARIOINCLUSAOHISTORICO,--Usuario de exclusao deste batch, indica que foi o BATCH quem apagou
                                  CLP.DTINCLUSAO
                  FROM LOAD.CARGALINHASPARCEIROS_02 CLP,
                                  SAPOIO_OW.LINHAPARCEIRO LP
                 WHERE CLP.IDLINHAPARCEIRO = LP.IDLINHAPARCEIRO;
24.	Apaga todas as linhas da tabela SAPOIO_OW.LINHAPARCEIRO que existem em LOAD.CARGALINHASPARCEIROS_02;
25.	Trunca a tabela LOAD.CARGALINHASPARCEIROS_01;
26.	Trunca a tabela LOAD.CARGALINHASPARCEIROS_02;
27. Renomea o arquivo CARGA_MASSIVA_LINHAS_*.txt para CARGA_MASSIVA_LINHAS_*.prc e move para a pasta "prc"
28.	Volta ao passo 1.

Qualquer erro aborta.
====================================== 



======================================
SCRIPT DE CRIAÇÃO DAS TABELAS DE CARGA TEMPORARIAS
====================================== 
CREATE TABLE LOAD.CARGALINHASPARCEIROS_01
(
	CDAREAREGISTRO               VARCHAR2(255) NOT NULL, -- Vem do arquivo
	NRLINHA                      VARCHAR2(255) NOT NULL, -- Vem do arquivo
	IDCLASSIFICACAO              NUMBER NOT NULL,        -- Vem do arquivo
	IDPARCEIRO                   NUMBER,                 -- Vem do arquivo
	DTULTIMAALTERACAO            DATE                    -- Sysdate
);
/

GRANT ALL PRIVILEGES ON LOAD.CARGALINHASPARCEIROS_01 TO HOMOLOGACAO;
GRANT ALL PRIVILEGES ON LOAD.CARGALINHASPARCEIROS_01 TO BATCHPRO;
GRANT ALL PRIVILEGES ON LOAD.CARGALINHASPARCEIROS_01 TO BATCHHC;
GRANT ALL PRIVILEGES ON LOAD.CARGALINHASPARCEIROS_01 TO BATCHHV;
GRANT ALL PRIVILEGES ON LOAD.CARGALINHASPARCEIROS_01 TO BATCHDES;
GRANT ALL PRIVILEGES ON LOAD.CARGALINHASPARCEIROS_01 TO BATCHINT;
/

CREATE TABLE LOAD.CARGALINHASPARCEIROS_02
(
	CDAREAREGISTRO               VARCHAR2(255) NOT NULL, -- LOAD.CARGALINHASPARCEIROS_01.CDAREAREGISTRO (Vem do arquivo)
	NRLINHA                      VARCHAR2(255) NOT NULL, -- LOAD.CARGALINHASPARCEIROS_01.NRLINHA (Vem do arquivo)
	IDCLASSIFICACAO              NUMBER,                 -- LOAD.CARGALINHASPARCEIROS_01.IDCLASSIFICACAO (Vem do arquivo)
	IDPARCEIRO                   NUMBER,                 -- Pode vir de mais de uma origem, de acordo com a ação
	IDLINHAPARCEIRO              NUMBER,                 -- Pode vir de mais de uma origem, de acordo com a ação
	IDLINHAINTERCEPTACAO         NUMBER,                 -- Pode vir de mais de uma origem, de acordo com a ação
	IDCLASSIFICACAOINTERCEPTACAO NUMBER,                 -- Pode vir de mais de uma origem, de acordo com a ação
	IDUSUARIOINCLUSAO            NUMBER,                 -- Pode vir de mais de uma origem, de acordo com a ação
	DTINCLUSAO                   DATE,                   -- Pode vir de mais de uma origem, de acordo com a ação
	DTULTIMAALTERACAO            DATE                    -- Pode vir de mais de uma origem, de acordo com a ação
);
/

GRANT ALL PRIVILEGES ON LOAD.CARGALINHASPARCEIROS_02 TO HOMOLOGACAO;
GRANT ALL PRIVILEGES ON LOAD.CARGALINHASPARCEIROS_02 TO BATCHPRO;
GRANT ALL PRIVILEGES ON LOAD.CARGALINHASPARCEIROS_02 TO BATCHHC;
GRANT ALL PRIVILEGES ON LOAD.CARGALINHASPARCEIROS_02 TO BATCHHV;
GRANT ALL PRIVILEGES ON LOAD.CARGALINHASPARCEIROS_02 TO BATCHDES;
GRANT ALL PRIVILEGES ON LOAD.CARGALINHASPARCEIROS_02 TO BATCHINT;
/


DROP TABLE LOAD.CARGALINHASPARCEIROS_01;
DROP TABLE LOAD.CARGALINHASPARCEIROS_02;
	

======================================
SCRIPT DE CRIAÇÃO DA PROCEDURE QUE TRUCA AS TABELAS 
====================================== 
CREATE OR REPLACE PROCEDURE LOAD.PRC_CARGALIPAR_TRUNCA_TABELA(NUMERO_TABELA IN VARCHAR2)
IS
    V_TABELA_NOME_BASE VARCHAR2(255);
BEGIN
    V_TABELA_NOME_BASE := 'LOAD.CARGALINHASPARCEIROS_';
    
    DBMS_OUTPUT.PUT_LINE('TRUNCATE TABLE '||V_TABELA_NOME_BASE||NUMERO_TABELA);
    EXECUTE IMMEDIATE 'TRUNCATE TABLE '||V_TABELA_NOME_BASE||NUMERO_TABELA;
    DBMS_OUTPUT.PUT_LINE('Tabela '||V_TABELA_NOME_BASE||NUMERO_TABELA||' truncada');
    
    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro ao truncar a tabela '||V_TABELA_NOME_BASE||NUMERO_TABELA||'. Verifique se a tabela existe.');
        ROLLBACK;
END PRC_CARGALIPAR_TRUNCA_TABELA;
/

GRANT EXECUTE ON LOAD.PRC_CARGALIPAR_TRUNCA_TABELA TO HOMOLOGACAO;
GRANT EXECUTE ON LOAD.PRC_CARGALIPAR_TRUNCA_TABELA TO BATCHPRO;
GRANT EXECUTE ON LOAD.PRC_CARGALIPAR_TRUNCA_TABELA TO BATCHHC;
GRANT EXECUTE ON LOAD.PRC_CARGALIPAR_TRUNCA_TABELA TO BATCHHV;
GRANT EXECUTE ON LOAD.PRC_CARGALIPAR_TRUNCA_TABELA TO BATCHDES;
GRANT EXECUTE ON LOAD.PRC_CARGALIPAR_TRUNCA_TABELA TO BATCHINT;

DROP PROCEDURE LOAD.PRC_CARGALIPAR_TRUNCA_TABELA;
